


Generation 0
================

Subpopulation 0
----------------
Avg Nodes: 275.041
Nodes/tree: [275.041]
Avg Depth: 6.53
Depth/tree: [6.53]
Mean fitness raw: 5.745 adjusted: 0.16044205 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (pop (/ (/ (/ (if (pop (+ (+ (+ 6 5)
     (/ 5 4)) (+ (/ 1 2) (if false 3 5)))) (color
     (+ (/ (color 4) (if false 2 3)) (if (pop
         4) (if true 3 3) (+ 2 1)))) (if (not (pop
     (color 6))) (/ (if (and false false) (if
     true 3 2) (if true 6 6)) (color (if false
     6 3))) (color (+ (+ 4 4) (/ 1 2))))) (+ (+
     (+ (/ (if true 2 2) (+ 3 5)) (if (pop 6)
         (/ 2 2) (if true 5 6))) (if (and (and false
     false) (pop 5)) (+ (color 1) (+ 5 6)) (if
     (not false) (/ 5 6) (if true 5 1)))) (/ (/
     (/ (color 3) (color 3)) (if (= 1 1) (/ 3
     6) (+ 5 5))) (color (/ (color 1) (color 2))))))
     (/ (+ (color (color (+ (if false 6 3) (color
         6)))) (if (= (color (color 6)) (color (+
         4 2))) (if (not (not false)) (color (/ 2
         5)) (color (if true 4 4))) (+ (/ (color 4)
         (+ 4 5)) (if (pop 2) (+ 1 2) (color 2)))))
         (if (pop (+ (color (if true 5 5)) (/ (+ 6
             5) (color 4)))) (+ (color (if (or false false)
             (color 5) (/ 4 4))) (if (and (or true true)
             (and false false)) (/ (if false 3 4) (/ 6
             1)) (+ (if false 4 1) (if true 5 2)))) (color
             (color (+ (if false 1 4) (color 3)))))))
     (if (or (not (pop (+ (+ (color 1) (color
         6)) (color (/ 4 3))))) (and (not (and (=
         (+ 6 3) (color 3)) (= (color 1) (/ 5 6))))
         (not (or (or (pop 1) (pop 2)) (not (and true
             false)))))) (/ (color (/ (+ (+ (+ 5 2) (+
         6 1)) (if (= 6 5) (if true 5 4) (if true
         5 2))) (color (color (if false 6 6))))) (color
         (if (pop (/ (if true 5 1) (/ 6 3))) (+ (/
             (/ 2 2) (+ 2 2)) (if (= 1 4) (/ 3 2) (/ 2
             1))) (color (color (color 6)))))) (/ (/ (if
         (or (and (and false true) (= 4 2)) (not (and
             false false))) (+ (color (color 3)) (+ (/
         2 2) (+ 2 3))) (+ (/ (if true 2 4) (+ 5 6))
         (+ (+ 6 4) (/ 4 4)))) (color (+ (+ (+ 5 1)
         (if true 6 6)) (+ (+ 6 2) (/ 4 6))))) (+
         (/ (if (or (not true) (not true)) (color
             (+ 3 5)) (+ (if false 6 3) (+ 5 4))) (color
             (/ (if true 4 6) (+ 6 3)))) (+ (color (/
         (+ 5 3) (/ 1 6))) (color (if (and true false)
         (if true 5 2) (if true 3 5))))))))))



Generation 1
================

Subpopulation 0
----------------
Avg Nodes: 269.582
Nodes/tree: [269.582]
Avg Depth: 6.775
Depth/tree: [6.775]
Mean fitness raw: 7.987 adjusted: 0.130692 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (+ (if (not (pop (if (= (+ (color (if (=
     5 5) (/ 4 3) (if false 2 1))) (+ (+ (if false
     2 5) (color 4)) (if (not false) (if true
     1 4) (color 3)))) (color (/ (/ (color 4)
     (+ 3 1)) (if (pop 3) (if false 3 5) (if true
     6 5))))) (if (= (+ (if (or true false) (color
     5) (if false 4 6)) (if (= 6 6) (+ 6 1) (color
     6))) (color (+ (/ 6 3) (+ 5 3)))) (+ (if
     (and (pop 3) (not true)) (/ (+ 6 6) (if true
     6 2)) (+ (/ 3 4) (+ 3 3))) (color (color
     (if false 3 4)))) (/ (+ (color (if true 5
     2)) (/ (if false 4 2) (+ 2 2))) (color (/
     (+ 1 5) (color 3))))) (/ (if (or (not (pop
     4)) (= (+ 6 2) (/ 3 5))) (+ (color (color
     3)) (+ (if true 4 5) (+ 3 5))) (color (color
     (if false 2 5)))) (color (if (or (pop 6)
     (and false false)) (color (/ 6 1)) (color
     (if false 2 5)))))))) (if (= (color (if (or
     (not (not (or false true))) (and (and (=
     2 2) (not false)) (pop (color 6)))) (color
     (if (or (not true) (= 4 6)) (color (+ 4 6))
         (/ (+ 6 6) (/ 3 1)))) (/ (color (+ (if false
     3 5) (if false 6 5))) (color (/ (+ 1 6) (/
     2 6)))))) (if (not (or (= (/ (/ 3 1) (/ 1
     2)) (color (color 4))) (pop (if (or true
     true) (+ 3 5) (+ 5 1))))) (if (and (and (or
     (not true) (and true true)) (and (pop 4)
     (pop 3))) (pop (+ (+ 4 2) (/ 3 6)))) (color
     (+ (if (= 3 6) (if true 4 4) (color 3)) (if
         (or false false) (/ 4 6) (+ 3 3)))) (/ (if
     (pop (+ 2 4)) (color (color 4)) (/ (/ 5 2)
     (/ 4 6))) (if (= (+ 6 6) (+ 3 3)) (if (not
     false) (/ 4 1) (color 3)) (/ (/ 1 5) (/ 2
     6))))) (/ (if (= (+ (/ 5 6) (color 1)) (if
     (not true) (color 3) (if true 2 6))) (color
     (/ (if false 4 6) (color 6))) (/ (if (and
     true false) (/ 3 3) (+ 6 6)) (/ (color 5)
     (color 4)))) (if (pop (+ (if false 2 6) (+
     2 2))) (/ (if (not false) (color 3) (+ 6
     5)) (/ (color 1) (color 3))) (/ (if (and
     true false) (/ 2 6) (/ 5 1)) (/ (+ 1 6) (if
     true 5 4))))))) (+ (/ (color (+ (color (if
     (or true true) (/ 1 4) (+ 6 4))) (/ (/ (if
     true 4 6) (color 2)) (+ (if true 5 4) (+
     4 1))))) (+ (color (/ (if (and false false)
     (/ 6 6) (/ 5 5)) (color (color 4)))) (/ (/
     (if (pop 6) (/ 1 3) (color 6)) (/ (+ 5 2)
     (/ 4 1))) (if (and (and false true) (and
     false true)) (if (and true false) (color
     6) (/ 1 3)) (/ (color 5) (/ 3 3)))))) (+
     (color (color (if (or (not false) (= 6 6))
         (if (pop 2) (color 1) (/ 5 5)) (color (+
         6 6))))) (color (/ (/ (+ (/ 6 5) (+ 5 5))
     (+ (if true 1 4) (color 6))) (color (if (or
     false false) (/ 2 4) (color 1))))))) (/ (+
     (/ (color (color (/ (color 6) (+ 6 5))))
         (/ (if (= (if false 6 3) (/ 5 1)) (if (or
             false false) (color 3) (+ 4 1)) (color (+
             2 1))) (+ (color (+ 5 1)) (color (/ 5 4)))))
     (if (= (if (pop (if true 4 1)) (/ (/ 4 1)
         (color 5)) (+ (color 3) (if false 2 4)))
         (color (/ (+ 6 1) (+ 4 4)))) (/ (if (= (if
         false 4 3) (color 4)) (color (color 5)) (if
         (and false true) (+ 6 1) (+ 4 1))) (if (or
         (not false) (not false)) (/ (/ 2 1) (+ 3
         3)) (+ (color 1) (/ 1 4)))) (+ (if (= (+
         1 1) (color 4)) (color (/ 3 2)) (if (not
         true) (color 3) (+ 5 5))) (/ (color (color
         3)) (+ (/ 5 5) (if false 2 5)))))) (/ (if
     (and (and (= (+ 6 2) (/ 4 6)) (= (/ 2 1)
         (if false 2 6))) (pop (color (+ 5 5)))) (/
     (/ (+ (+ 2 3) (/ 1 2)) (color (+ 3 2))) (/
     (if (and false false) (color 2) (/ 1 6))
     (+ (if false 1 5) (/ 3 2)))) (color (+ (/
     (if false 6 2) (color 1)) (color (if true
     2 4))))) (/ (/ (+ (if (and true false) (color
     3) (color 3)) (+ (if true 3 4) (if true 2
     1))) (color (color (/ 4 2)))) (color (color
     (if (= 1 4) (color 6) (+ 1 5)))))))) (+ (color
     (/ (if (or (or (pop (color 2)) (and (pop
         3) (= 5 3))) (or (not (or true false)) (and
         (= 3 6) (= 3 1)))) (/ (/ (if (pop 2) (+ 5
         2) (color 4)) (if (and false true) (color
         4) (+ 5 6))) (if (pop (color 6)) (/ (+ 6
         4) (if true 1 5)) (color (color 2)))) (color
         (/ (color (/ 3 6)) (color (color 4))))) (color
         (+ (color (+ (if true 2 3) (/ 3 5))) (color
             (+ (/ 5 2) (+ 3 3))))))) (if (or (or (pop
     (color (/ (+ 4 1) (if false 2 3)))) (= (+
     (color (/ 1 2)) (color (color 1))) (/ (/
     (if true 5 4) (+ 3 1)) (/ (color 4) (if false
     6 6))))) (pop (+ (/ (color (+ 3 3)) (+ (color
     3) (if true 3 3))) (if (or (not false) (pop
     5)) (color (color 1)) (/ (/ 4 2) (/ 5 1))))))
     (+ (/ (+ (color (+ (/ 3 2) (if false 1 5)))
         (color (+ (+ 3 6) (if true 6 4)))) (color
         (color (+ (/ 2 4) (+ 3 2))))) (/ (if (and
         (pop (if true 6 6)) (or (not false) (and
         true true))) (color (+ (color 4) (if true
         5 4))) (color (/ (if false 6 2) (if true
         2 1)))) (/ (color (color (+ 4 5))) (/ (+
         (color 6) (+ 1 4)) (+ (+ 5 4) (+ 2 1))))))
     (if (= (/ (/ (color (+ 4 3)) (color (if false
         6 1))) (+ (if (and true true) (color 3) (+
         2 5)) (color (/ 2 1)))) (color (color (color
         (if true 3 1))))) (+ (/ (color (+ (if true
         3 4) (color 3))) (+ (/ (if true 2 6) (if
         false 1 5)) (+ (+ 1 4) (/ 2 5)))) (+ (color
         (/ (if true 3 3) (/ 2 6))) (if (= (/ 5 2)
         (if false 2 4)) (color (color 3)) (color
         (+ 5 5))))) (/ (/ (if (= (+ 1 5) (color 1))
         (if (= 1 6) (color 2) (+ 3 4)) (+ (+ 6 4)
         (/ 2 6))) (/ (/ (color 5) (color 2)) (color
         (+ 3 2)))) (/ (/ (if (not true) (+ 2 1) (+
         3 4)) (+ (/ 5 2) (/ 2 6))) (+ (/ (color 3)
         (+ 6 5)) (color (/ 4 6))))))))) (/ (if (=
     (+ (if (not (or (pop (+ 4 6)) (not (or false
         false)))) (if (not (or (= 6 4) (pop 5)))
         (color (/ (if false 3 2) (+ 2 5))) (/ (+
         (/ 1 4) (+ 3 3)) (color (if false 6 3))))
         (+ (/ (if (= 1 5) (color 6) (/ 5 6)) (/ (/
             4 5) (+ 4 6))) (if (pop (if false 1 1)) (/
             (color 5) (if false 4 2)) (+ (/ 2 3) (color
             5))))) (if (= (if (= (if false 5 3) (+ 3
         4)) (+ (if false 5 1) (+ 5 1)) (color (/
         5 5))) (if (and (= 2 2) (or true false))
         (if (= 1 6) (/ 6 1) (color 4)) (/ (color
         3) (+ 3 3)))) (/ (if (not (= 4 2)) (/ (color
         6) (+ 3 1)) (if (not true) (+ 5 3) (if false
         5 5))) (color (+ (/ 3 4) (/ 3 6)))) (+ (if
         (not (not false)) (color (+ 6 5)) (/ (/ 5
         1) (+ 6 5))) (/ (+ (/ 3 1) (/ 4 1)) (if (and
         true true) (if true 5 6) (if true 6 1))))))
     (color (+ (if (= (if (not false) (/ 6 1)
         (/ 6 3)) (+ (/ 6 5) (/ 2 1))) (color (color
         (if true 1 2))) (+ (/ (if true 6 4) (+ 2
         1)) (if (pop 3) (if true 3 3) (+ 1 3))))
         (if (pop (if (or true true) (color 5) (/
             4 2))) (/ (/ (color 4) (color 3)) (/ (/ 4
             5) (+ 2 4))) (+ (+ (+ 5 4) (/ 4 4)) (+ (+
             2 4) (color 5))))))) (+ (color (color (if
     (= (if (not false) (+ 6 4) (/ 6 6)) (if (pop
         2) (if false 3 4) (if true 4 3))) (if (or
     (and false true) (pop 6)) (if (and false
     false) (+ 4 3) (color 5)) (color (color 6)))
     (if (not (= 1 4)) (if (= 6 6) (if true 6
         5) (if true 1 4)) (/ (if false 5 2) (color
         3)))))) (if (or (and (= (+ (if true 3 3)
     (if true 2 5)) (if (or false true) (if true
     2 6) (if true 2 6))) (or (pop (color 5))
     (pop (/ 4 3)))) (not (pop (if (= 5 4) (/
     2 3) (+ 4 3))))) (+ (+ (/ (/ (/ 2 3) (if
     false 6 2)) (/ (color 2) (color 6))) (/ (/
     (/ 3 1) (if true 1 1)) (if (or true false)
     (color 2) (+ 3 4)))) (/ (if (or (= 4 2) (pop
     3)) (+ (if true 5 5) (+ 1 3)) (if (not false)
     (if false 3 2) (if true 4 6))) (if (not (pop
     2)) (/ (if false 5 3) (+ 3 3)) (if (= 2 4)
     (+ 4 2) (+ 3 4))))) (/ (color (/ (+ (+ 2
     5) (/ 4 2)) (color (if true 3 3)))) (+ (+
     (color (+ 5 1)) (if (and false true) (+ 3
     3) (+ 4 6))) (/ (/ (color 2) (if true 1 5))
     (+ (if false 4 1) (if false 2 5))))))) (color
     (+ (+ (if (= (color (/ 5 6)) (/ (+ 3 2) (/
         3 2))) (+ (/ (/ 1 2) (color 4)) (if (pop
         5) (if true 3 1) (/ 3 2))) (if (not (and
         true true)) (/ (/ 2 5) (/ 2 5)) (color (/
         6 1)))) (if (and (pop (+ 2 2)) (= (color
         2) (color 2))) (+ (/ (if true 1 6) (/ 3 2))
         (+ (color 5) (if true 6 1))) (+ (if (pop
         4) (if true 5 1) (+ 5 2)) (if (pop 2) (+
         2 3) (+ 1 2))))) (/ (color (/ (if (not false)
         (if true 2 5) (if true 5 1)) (/ (if false
         2 6) (/ 2 2)))) (+ (+ (+ (+ 2 3) (+ 1 4))
         (/ (if true 2 1) (+ 5 4))) (/ (+ (color 5)
         (color 5)) (color (+ 6 3)))))))) (/ (color
     (if (= (color (color (if (not true) (+ 1
         5) (color 5)))) (if (pop (+ (+ 4 5) (color
         4))) (/ (/ (if true 6 1) (/ 4 3)) (/ (color
         5) (if true 4 3))) (/ (if (pop 5) (/ 2 2)
         (if false 5 4)) (if (not false) (+ 6 3) (/
         1 1))))) (if (or (pop (color (/ 1 6))) (and
         (and (= 4 5) (and true true)) (not (pop 6))))
         (if (and (and (pop 2) (pop 4)) (or (or true
             true) (or true true))) (+ (/ (/ 5 3) (if
             true 2 2)) (+ (if false 4 2) (+ 3 2))) (+
             (if (not true) (+ 6 1) (+ 4 3)) (if (or false
             false) (+ 5 3) (+ 6 2)))) (+ (+ (if (not
         false) (if true 3 3) (color 6)) (+ (+ 1 4)
         (+ 3 1))) (if (and (pop 5) (= 4 4)) (/ (/
         3 6) (+ 2 3)) (/ (color 4) (+ 3 2))))) (+
         (/ (color (if (= 1 3) (color 3) (if true
             1 4))) (color (color (color 3)))) (/ (if
         (not (and true false)) (if (or false false)
         (+ 6 4) (color 4)) (if (= 2 4) (+ 5 3) (if
         true 5 3))) (color (+ (+ 1 2) (+ 5 6)))))))
     (color (if (= (+ (+ (if (not true) (color
         4) (+ 1 6)) (color (+ 3 6))) (+ (color (if
         false 1 6)) (/ (/ 5 3) (+ 2 2)))) (if (=
         (/ (/ 6 2) (color 6)) (/ (+ 2 1) (+ 1 4)))
         (if (= (+ 2 4) (/ 4 6)) (+ (if false 6 6)
             (/ 2 2)) (if (not true) (color 6) (+ 3 4)))
         (+ (+ (color 1) (color 5)) (if (pop 5) (color
             4) (+ 3 1))))) (/ (color (/ (if (pop 4) (/
         1 6) (/ 1 6)) (color (if false 2 4)))) (color
         (+ (/ (color 5) (/ 1 1)) (if (= 6 4) (/ 5
             5) (/ 2 6))))) (if (not (= (+ (color 4) (if
         false 1 4)) (/ (if true 3 1) (color 4))))
         (if (not (not (and false true))) (/ (color
             (color 5)) (if (not true) (+ 1 3) (/ 2 1)))
             (if (not (= 1 6)) (color (if false 2 4))
                 (/ (if true 3 1) (+ 6 1)))) (if (not (not
         (not false))) (/ (color (+ 5 5)) (+ (+ 5
         1) (if false 4 3))) (if (pop (+ 4 3)) (+
         (if true 3 4) (if true 6 3)) (+ (+ 3 3) (/
         1 1))))))))))



Generation 2
================

Subpopulation 0
----------------
Avg Nodes: 341.349
Nodes/tree: [341.349]
Avg Depth: 7.548
Depth/tree: [7.548]
Mean fitness raw: 6.416 adjusted: 0.1408226 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (+ (if (and false (pop (+ 2 (/ 6 (/ 3 3)))))
     (+ 4 (/ 3 (+ (/ 2 (color 6)) (if (= 6 6)
         1 (color 2))))) 6) (+ (color (if false (color
     (+ (if false 6 1) (if true 2 6))) (color
     (color 5)))) (/ (+ (color (+ 4 (if false
     6 6))) (+ (if (not true) 1 (color 1)) (if
     (= 5 1) (/ 6 6) (+ 6 3)))) (color 2))))



Generation 3
================

Subpopulation 0
----------------
Avg Nodes: 402.494
Nodes/tree: [402.494]
Avg Depth: 7.876
Depth/tree: [7.876]
Mean fitness raw: 6.948 adjusted: 0.13896838 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (pop (+ (color (/ (if (and (not (or (and
     (or false false) (not false)) (or (or true
     false) (= 3 5)))) (not (or (or (or true false)
     (pop 6)) (pop (/ 1 4))))) (color (/ (/ (+
     (if false 1 1) (if true 2 4)) (color (+ 1
     2))) (/ (/ (+ 6 5) (color 4)) (+ (+ 2 2)
     (color 6))))) (if (= (if (pop (if true 4
     5)) (/ (if false 4 1) (color 2)) (+ (+ 6
     1) (/ 6 3))) (/ (if (= 4 5) (+ 6 5) (if true
     5 5)) (if (and true false) (/ 5 6) (color
     4)))) (color (/ (+ (+ 3 1) (+ 3 4)) (+ (/
     3 3) (/ 1 3)))) (+ (/ (color (/ 2 2)) (/
     (if false 1 1) (color 3))) (if (pop (if false
     5 6)) (color (color 5)) (if (or false true)
     (/ 1 6) (/ 4 5)))))) (/ (color (color (+
     (if (pop 2) (+ 6 4) (/ 3 1)) (+ (color 6)
     (if false 1 5))))) (+ (+ (color (/ (+ 2 6)
     (/ 3 4))) (+ (+ (color 4) (+ 1 2)) (if (not
     false) (/ 5 3) (/ 6 4)))) (if (not (pop (color
     6))) (color (/ (if true 5 1) (+ 3 1))) (if
     (and (= 1 5) (or false true)) (+ (/ 3 2)
     (color 5)) (/ (+ 2 6) (/ 6 1)))))))) (color
     (if (and (pop (color (+ (+ (color 5) (+ 4
         5)) (+ (if true 3 3) (color 3))))) (and (or
         (or (and (or false false) (= 1 6)) (pop (/
             1 5))) (or (not (pop 4)) (and (not false)
         (or false true)))) (pop (/ (color (if false
         2 2)) (color (+ 1 1)))))) (color (/ (if (pop
         (+ (+ 4 3) (color 1))) (+ (color (color 2))
         (+ (+ 2 4) (if true 6 5))) (color (if (or
         true false) (+ 6 3) (/ 1 6)))) (color (/
         (+ (/ 6 4) (if true 4 4)) (+ (color 6) (color
         5)))))) (/ (if (= (if (= (color 2) (+ 2 3))
         (if (not false) (+ 2 6) (color 3)) (/ (+
         6 6) (color 6))) (color (color (/ 1 4))))
         (color (color (color (/ 5 6)))) (+ (/ (if
         (or false false) (+ 6 1) (+ 3 3)) (color
         (if true 6 2))) (+ (+ (if true 6 2) (color
         2)) (color (if false 3 6))))) (/ (if (= (+
         (color 1) (+ 2 5)) (if (pop 5) (color 3)
         (+ 1 2))) (/ (/ (/ 3 2) (if true 6 2)) (color
         (+ 4 4))) (+ (+ (if true 5 2) (color 3))
         (color (+ 6 6)))) (/ (+ (color (if true 1
         5)) (color (/ 2 4))) (if (pop (/ 5 2)) (/
         (/ 6 6) (/ 6 4)) (+ (+ 2 5) (if false 2 6))))))))))



Generation 4
================

Subpopulation 0
----------------
Avg Nodes: 407.259
Nodes/tree: [407.259]
Avg Depth: 7.693
Depth/tree: [7.693]
Mean fitness raw: 8.731 adjusted: 0.11908479 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (not false) (not false))



Generation 5
================

Subpopulation 0
----------------
Avg Nodes: 429.519
Nodes/tree: [429.519]
Avg Depth: 7.628
Depth/tree: [7.628]
Mean fitness raw: 7.224 adjusted: 0.13723978 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (pop (/ (+ (/ (+ (+ (if (and (= 2 5)
     (= 1 4)) (+ (if false 6 6) (color 3)) (/
     (if false 1 1) (if false 6 3))) (color (/
     (if false 3 5) (/ 4 4)))) (color (/ (color
     (+ 4 3)) (color (color 5))))) (if (= (+ (+
     (color 4) (color 3)) (+ (if false 2 1) (color
     5))) (color (/ (color 4) (color 3)))) (if
     (pop (if (and true false) (/ 1 5) (/ 4 2)))
     (+ (/ (+ 1 3) (/ 2 1)) (+ (color 6) (+ 5
         2))) (if (pop (/ 2 2)) (color (/ 2 3)) (/
     (if true 6 4) (/ 4 1)))) (+ (color (+ (/
     2 2) (+ 4 5))) (if (= (if true 1 3) (+ 3
     1)) (color (color 2)) (/ (if false 6 1) (/
     5 6)))))) (+ (/ (if (and (= (/ 2 6) (/ 1
     2)) (= (+ 5 1) (color 3))) (if (and (= 3
     6) (and true true)) (color (/ 1 4)) (+ (+
     4 4) (+ 6 1))) (+ (color (if true 2 2)) (/
     (/ 3 1) (/ 4 1)))) (color (/ (+ (color 3)
     (color 2)) (+ (+ 3 4) (if false 6 3)))))
     (+ (/ (if (= (/ 1 5) (/ 1 6)) (/ (if true
         3 6) (/ 6 2)) (if (pop 3) (if false 4 6)
         (color 3))) (+ (+ (/ 1 5) (+ 4 3)) (/ (if
         true 2 4) (/ 1 2)))) (if (or (not (= 6 5))
         (and (pop 2) (= 3 6))) (/ (color (if false
         4 1)) (color (+ 6 4))) (/ (/ (+ 5 3) (+ 6
         4)) (color (if true 1 1))))))) (/ (+ (/ (/
     (color (+ (/ 6 4) (color 5))) (/ (color (if
     false 6 2)) (if (pop 3) (if true 3 4) (+
     3 3)))) (if (pop (color (if true 5 5))) (/
     (/ (/ 5 3) (if true 2 1)) (+ (color 1) (color
     2))) (+ (+ (/ 3 3) (/ 4 3)) (+ (if true 1
     6) (+ 6 4))))) (/ (if (or (or (= 2 2) (not
     true)) (or (and false false) (= 4 2))) (/
     (/ (/ 5 3) (+ 2 6)) (color (color 4))) (/
     (/ (if false 6 5) (/ 3 4)) (color (if true
     3 3)))) (color (/ (if (= 1 3) (/ 5 3) (if
     true 4 4)) (+ (color 6) (/ 5 1)))))) (+ (+
     (+ (+ (color (if true 6 4)) (if (not true)
         (if false 4 1) (if false 1 3))) (color (/
         (/ 1 1) (+ 6 1)))) (if (not (= (+ 5 2) (+
     4 5))) (color (if (not true) (+ 2 6) (color
     5))) (/ (if (or false false) (/ 2 5) (+ 1
     4)) (+ (color 6) (/ 1 5))))) (color (if (=
     (color (/ 4 1)) (if (or true false) (/ 3
     1) (+ 3 5))) (/ (/ (if false 1 6) (/ 1 1))
     (+ (+ 1 2) (+ 4 2))) (color (/ (/ 5 2) (+
     5 6))))))))) (color (+ (if (pop (if (or (pop
     (/ (color 3) (/ 6 1))) (not (not (and false
     false)))) (/ (/ (+ (if false 1 6) (/ 4 1))
     (if (or false true) (/ 1 6) (color 2))) (/
     (+ (/ 6 2) (if true 5 1)) (color (+ 1 1))))
     (/ (+ (+ (/ 5 3) (if false 1 6)) (if (= 1
         1) (if false 4 1) (/ 2 3))) (color (if (or
         false false) (+ 2 5) (/ 5 5)))))) (/ (+ (color
     (color (/ (/ 2 2) (+ 1 4)))) (+ (+ (/ (/
     1 6) (+ 1 2)) (/ (/ 5 1) (if true 3 5)))
     (+ (if (not false) (color 1) (color 5)) (color
         (color 5))))) (/ (color (+ (+ (/ 4 6) (/
     5 3)) (+ (/ 5 1) (+ 2 2)))) (color (/ (/
     (color 1) (color 3)) (/ (if false 4 5) (color
     2)))))) (if (pop (color (/ (/ (+ 2 5) (+
     5 3)) (if (pop 1) (if false 6 5) (color 1)))))
     (/ (color (/ (color (+ 6 3)) (if (or false
         false) (+ 5 5) (if true 4 2)))) (if (pop
         (color (if false 6 4))) (color (color (color
         4))) (if (not (or true true)) (+ (if true
         2 6) (/ 2 3)) (if (pop 4) (color 4) (/ 4
         2))))) (+ (+ (/ (if (or true false) (/ 1
     4) (/ 4 5)) (/ (if true 5 6) (color 3)))
     (/ (+ (color 5) (color 3)) (color (+ 4 5))))
     (+ (/ (color (color 4)) (if (or true false)
         (if false 4 3) (+ 6 4))) (+ (if (and true
         true) (/ 6 1) (color 4)) (/ (/ 4 5) (if false
         1 3))))))) (+ (color (if (or (pop (if (=
     5 3) (color 1) (if true 3 4))) (pop (/ (/
     3 1) (color 2)))) (if (= (+ (/ 3 2) (/ 2
     1)) (/ (/ 4 2) (+ 5 3))) (+ (+ (/ 4 1) (color
     1)) (if (and false true) (if true 1 4) (color
     6))) (color (color (if false 6 3)))) (if
     (and (not (pop 6)) (or (or true true) (not
         true))) (color (if (pop 6) (if true 6 1)
     (+ 3 3))) (color (color (color 4)))))) (color
     (if (pop (color (/ (color 4) (/ 3 2)))) (+
         (color (+ (if false 2 4) (/ 4 5))) (/ (+
         (color 6) (if false 6 5)) (if (pop 6) (+
         2 5) (color 4)))) (if (= (/ (color 5) (/
         3 6)) (color (+ 1 4))) (color (color (+ 5
         3))) (/ (/ (color 1) (if false 5 5)) (/ (/
         4 1) (if false 6 6))))))))) (+ (+ (if (pop
     (/ (color (/ (if (= 3 6) (if false 6 5) (/
         6 2)) (color (/ 3 1)))) (color (/ (color
         (+ 3 1)) (color (if false 5 5)))))) (if (=
     (+ (color (+ (/ 2 5) (if true 2 5))) (+ (color
         (if false 1 4)) (color (/ 6 4)))) (color
     (+ (color (if false 6 6)) (color (if true
         3 6))))) (+ (/ (+ (if (pop 3) (/ 5 1) (+
     1 1)) (/ (if true 6 2) (/ 1 3))) (+ (color
     (color 1)) (color (+ 4 1)))) (+ (/ (+ (+
     4 4) (if true 2 4)) (+ (/ 3 2) (/ 1 4)))
     (+ (/ (/ 6 1) (/ 5 5)) (color (if false 1
         3))))) (if (or (= (+ (/ 4 1) (/ 4 2)) (/
     (if true 4 3) (+ 1 1))) (and (not (= 4 3))
     (or (= 4 3) (not false)))) (+ (color (/ (+
     4 4) (if false 2 6))) (/ (if (and true false)
     (if false 1 6) (/ 1 5)) (+ (color 2) (color
     4)))) (+ (if (not (pop 6)) (/ (color 1) (color
     5)) (/ (+ 3 5) (color 4))) (color (if (pop
     1) (if false 1 3) (+ 6 5)))))) (+ (/ (color
     (/ (if (or false true) (/ 5 2) (/ 6 1)) (color
         (/ 3 4)))) (color (color (/ (if true 3 1)
     (color 1))))) (if (not (pop (/ (/ 3 4) (/
     2 4)))) (/ (color (+ (/ 2 6) (color 6)))
     (+ (color (color 6)) (+ (/ 5 5) (color 3))))
     (if (= (/ (color 5) (color 6)) (if (pop 6)
         (color 5) (+ 4 2))) (+ (/ (color 5) (if true
         6 3)) (if (not true) (color 1) (if true 5
         4))) (color (if (or true false) (+ 4 2) (color
         4))))))) (/ (if (= (/ (+ (if (or true true)
     (color 2) (color 6)) (if (or true false)
     (/ 3 1) (if false 3 6))) (if (or (and false
     false) (or false false)) (+ (color 5) (color
     4)) (/ (color 4) (color 1)))) (+ (if (pop
     (color 5)) (/ (+ 1 2) (color 4)) (+ (+ 4
     3) (if false 5 6))) (color (color (/ 6 1)))))
     (+ (/ (+ (if (and true true) (color 6) (color
         6)) (+ (color 3) (color 5))) (if (and (not
         true) (or false false)) (+ (+ 5 2) (if true
         2 5)) (/ (if true 6 6) (+ 5 3)))) (if (pop
         (/ (+ 6 3) (color 2))) (/ (if (not true)
         (/ 3 4) (color 6)) (if (= 1 4) (+ 2 1) (color
         5))) (if (= (/ 3 1) (if true 4 4)) (if (pop
         1) (+ 2 4) (color 5)) (+ (/ 1 5) (+ 3 2)))))
     (/ (if (or (pop (/ 6 5)) (not (not false)))
         (color (if (pop 4) (/ 6 5) (+ 1 2))) (color
         (+ (if true 6 2) (/ 4 2)))) (if (or (and
         (and true true) (pop 3)) (= (if true 6 4)
         (/ 3 3))) (/ (+ (/ 4 1) (if false 5 4)) (if
         (not false) (color 4) (+ 1 6))) (color (/
         (/ 3 2) (/ 6 3)))))) (/ (/ (if (and (and
     (= 1 2) (not true)) (or (= 4 1) (pop 5)))
     (+ (color (if true 6 5)) (/ (/ 2 1) (/ 6
         3))) (/ (/ (color 1) (+ 1 2)) (if (= 2 4)
     (+ 5 1) (/ 5 2)))) (if (= (if (not false)
     (if true 4 3) (color 4)) (+ (if false 2 4)
     (color 2))) (/ (/ (color 1) (color 1)) (+
     (/ 1 4) (+ 1 6))) (color (if (or true true)
     (/ 3 1) (/ 6 6))))) (if (not (not (or (=
     4 3) (= 1 3)))) (+ (color (color (color 6)))
     (/ (+ (color 4) (/ 2 2)) (+ (/ 1 3) (+ 6
         2)))) (color (if (and (not true) (pop 1))
     (color (if false 1 2)) (+ (/ 5 3) (/ 6 5))))))))
     (color (+ (/ (+ (+ (/ (color (if true 6 3))
         (+ (+ 6 5) (/ 6 4))) (if (pop (if true 5
         4)) (color (color 3)) (if (or false true)
         (+ 1 3) (/ 4 4)))) (if (and (or (and false
         false) (or true true)) (and (= 4 4) (and
         false true))) (+ (if (pop 5) (if false 3
         3) (+ 1 5)) (+ (color 2) (/ 1 4))) (/ (if
         (pop 2) (+ 2 5) (if true 2 4)) (/ (if true
         3 2) (+ 1 1))))) (/ (/ (if (or (or false
         true) (pop 3)) (color (/ 3 5)) (if (and true
         true) (color 1) (if true 4 6))) (/ (if (not
         false) (+ 3 6) (+ 5 6)) (+ (+ 6 3) (/ 2 2))))
         (+ (color (/ (+ 4 5) (color 6))) (color (if
             (= 3 3) (/ 3 2) (color 2)))))) (+ (+ (color
         (/ (+ (/ 2 4) (/ 2 6)) (if (or false true)
             (+ 3 5) (/ 1 5)))) (+ (/ (+ (if true 3 1)
         (if false 4 3)) (/ (if false 5 4) (if false
         4 5))) (+ (/ (+ 1 2) (color 3)) (if (not
         true) (/ 3 1) (+ 6 6))))) (if (not (and (=
         (color 2) (if true 1 2)) (= (/ 5 2) (/ 1
         3)))) (+ (/ (/ (if false 2 2) (if true 2
         1)) (/ (if false 4 4) (color 2))) (if (pop
         (color 4)) (+ (+ 2 5) (/ 3 1)) (if (or true
         false) (if false 1 6) (/ 5 1)))) (color (if
         (or (= 1 1) (not false)) (color (if false
         3 6)) (/ (/ 1 6) (if true 4 5))))))))))



Generation 6
================

Subpopulation 0
----------------
Avg Nodes: 409.952
Nodes/tree: [409.952]
Avg Depth: 7.559
Depth/tree: [7.559]
Mean fitness raw: 6.181 adjusted: 0.14464556 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (or (= (if false 1 2) (if false
     5 4)) (or (= 4 2) (= 5 5))) (not (and (and
     true true) (and true false)))))



Generation 7
================

Subpopulation 0
----------------
Avg Nodes: 386.134
Nodes/tree: [386.134]
Avg Depth: 7.803
Depth/tree: [7.803]
Mean fitness raw: 7.512 adjusted: 0.13742632 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 8
================

Subpopulation 0
----------------
Avg Nodes: 395.085
Nodes/tree: [395.085]
Avg Depth: 7.834
Depth/tree: [7.834]
Mean fitness raw: 10.354 adjusted: 0.11213111 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (and true true) (pop 3))



Generation 9
================

Subpopulation 0
----------------
Avg Nodes: 378.186
Nodes/tree: [378.186]
Avg Depth: 7.926
Depth/tree: [7.926]
Mean fitness raw: 6.544 adjusted: 0.14158544 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (and true (and (and false false) (not
     true))))



Generation 10
================

Subpopulation 0
----------------
Avg Nodes: 411.86
Nodes/tree: [411.86]
Avg Depth: 8.059
Depth/tree: [8.059]
Mean fitness raw: 7.046 adjusted: 0.13882783 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (or (or (not (not (or (not (and (and
     false true) (or false true))) (not (or (and
     true false) (not true)))))) (or (and (pop
     (+ (if (and true false) (color 1) (/ 6 3))
         (+ (if true 6 6) (color 1)))) (pop (/ (color
     (+ 3 6)) (+ (/ 6 1) (color 5))))) (not (pop
     (if (pop (if false 4 2)) (/ (color 2) (if
         true 3 1)) (/ (if true 5 6) (+ 6 5)))))))
     (pop (+ (color (/ (+ (color (/ 3 2)) (if
         (and true true) (+ 6 5) (if true 3 3))) (/
         (if (or false false) (if false 4 1) (if true
             5 2)) (/ (color 4) (+ 2 4))))) (if (not (not
         (= (color 5) (/ 2 2)))) (if (or (and (or
         true true) (and true true)) (or (or true
         false) (or true true))) (/ (+ (if true 1
         6) (/ 1 5)) (+ (+ 4 3) (color 6))) (if (or
         (pop 4) (and false false)) (color (if false
         5 4)) (if (and true true) (color 4) (+ 5
         3)))) (/ (/ (+ (/ 2 3) (color 6)) (if (and
         true false) (+ 1 2) (if true 1 2))) (/ (if
         (and true true) (/ 3 1) (color 6)) (color
         (if false 5 6)))))))) (and (not (not (not
     (and (= (+ (if true 3 5) (+ 4 1)) (+ (/ 6
         5) (color 2))) (or (= (if false 6 6) (if
         true 5 1)) (= (/ 4 4) (color 6))))))) (or
     (and (and (pop (if (pop (/ 6 3)) (/ (if false
         1 3) (/ 5 2)) (color (if false 5 2)))) (or
         (pop (+ (color 6) (/ 1 1))) (or (pop (/ 4
         2)) (pop (color 2))))) (= (color (if (not
         (or false true)) (if (not false) (color 5)
         (/ 6 2)) (color (+ 4 5)))) (+ (color (+ (if
         false 6 6) (/ 6 3))) (if (= (/ 3 4) (color
         1)) (+ (+ 1 4) (if false 6 5)) (if (or true
         true) (+ 2 4) (color 6)))))) (pop (/ (/ (/
     (if (not true) (color 3) (color 4)) (color
     (if false 3 6))) (if (pop (/ 6 3)) (if (or
     true true) (+ 6 3) (color 1)) (+ (if false
     5 3) (color 5)))) (/ (/ (if (not false) (color
     2) (/ 4 1)) (color (color 3))) (/ (if (or
     true false) (/ 6 2) (+ 1 4)) (color (/ 4
     3)))))))))



Generation 11
================

Subpopulation 0
----------------
Avg Nodes: 403.603
Nodes/tree: [403.603]
Avg Depth: 8.035
Depth/tree: [8.035]
Mean fitness raw: 10.483 adjusted: 0.110586114 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (+ (color (if (not (and true true)) (/ (/
     1 4) (if false 5 6)) (if (or false true)
     (+ 3 3) (+ 4 6)))) (if (= (/ (if true 2 2)
     (/ 3 5)) (+ (+ 1 1) (+ 6 6))) (/ (+ (if true
     2 1) (+ 1 2)) (color (if false 2 5))) (if
     (or (pop 4) (and false false)) (+ (color
     2) (if false 6 5)) (+ (color 5) (if false
     5 6)))))



Generation 12
================

Subpopulation 0
----------------
Avg Nodes: 401.18
Nodes/tree: [401.18]
Avg Depth: 8.01
Depth/tree: [8.01]
Mean fitness raw: 11.705 adjusted: 0.10788291 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (+ (color (if (not (and true true)) (/ (/
     1 4) (if false 5 6)) (if (or false true)
     (+ 3 3) (+ 4 6)))) (if (= (/ (if true 2 2)
     (/ 3 5)) (+ (+ 1 1) (+ 6 6))) (/ (+ (if true
     2 1) (+ 1 2)) (color (if false 2 5))) (if
     (or (pop 4) (and false false)) (+ (color
     2) (if false 6 5)) (+ (color 5) (if false
     5 6)))))



Generation 13
================

Subpopulation 0
----------------
Avg Nodes: 423.509
Nodes/tree: [423.509]
Avg Depth: 8.005
Depth/tree: [8.005]
Mean fitness raw: 10.258 adjusted: 0.11398086 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (or true (or (not (or false false))
     (pop 3))) (and false (pop 2)))



Generation 14
================

Subpopulation 0
----------------
Avg Nodes: 434.076
Nodes/tree: [434.076]
Avg Depth: 7.903
Depth/tree: [7.903]
Mean fitness raw: 6.136 adjusted: 0.14475882 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (/ (+ (/ (if (or (and (and (or (and (or (=
     6 5) (= 5 3)) (= (if false 5 2) (if true
     5 5))) (= (/ (/ 2 1) (+ 3 3)) (+ (+ 1 1)
     (/ 6 2)))) (not (or (pop (+ 6 3)) (or (=
     1 2) (= 5 3))))) (or (and (pop (color (color
     2))) (or (not (or false false)) (pop (color
     4)))) (or (pop (if (and false false) (+ 4
     3) (/ 6 2))) (or (= (if true 4 3) (color
     3)) (not (and true true)))))) (or (pop (+
     (+ (/ (/ 5 4) (+ 3 1)) (/ (/ 3 3) (if false
         4 3))) (+ (+ (+ 4 1) (color 5)) (+ (+ 4 6)
     (+ 5 5))))) (= (+ (color (color (+ 1 2)))
     (if (pop (if false 4 1)) (if (= 3 1) (if
         true 5 5) (color 5)) (if (not false) (+ 2
         6) (if true 2 5)))) (color (+ (/ (if true
     3 1) (/ 3 2)) (color (/ 2 5))))))) (/ (if
     (and (= (if (and (= 3 3) (not true)) (/ (+
         2 2) (if true 5 5)) (if (and true false)
         (color 1) (color 5))) (+ (color (+ 1 2))
         (if (pop 6) (if false 1 2) (color 2)))) (not
         (and (or (pop 2) (pop 4)) (= (color 3) (+
             6 1))))) (color (/ (+ (/ (+ 3 2) (if false
     4 5)) (if (and false false) (+ 6 5) (/ 6
     6))) (/ (/ (if false 4 5) (color 4)) (/ (/
     1 5) (/ 1 2))))) (color (/ (if (or (not false)
     (= 6 1)) (+ (if true 1 3) (+ 2 4)) (color
     (color 3))) (+ (color (color 1)) (+ (color
     6) (+ 3 4)))))) (+ (color (if (or (pop (+
     3 6)) (= (color 1) (if false 1 3))) (/ (+
     (/ 6 5) (+ 5 3)) (/ (if true 5 2) (+ 2 2)))
     (+ (/ (/ 1 6) (+ 3 3)) (if (pop 1) (color
         1) (/ 5 2))))) (+ (+ (color (if (or true
     false) (/ 4 2) (+ 4 6))) (+ (+ (if true 3
     4) (if false 3 1)) (if (or true true) (/
     5 6) (color 3)))) (color (color (+ (color
     3) (/ 2 2))))))) (if (not (and (and (not
     (or (and false true) (or false true))) (and
     (not (pop 6)) (and (pop 2) (= 5 2)))) (and
     (= (+ (+ 1 2) (/ 4 2)) (/ (if false 6 6)
         (/ 6 2))) (and (not (pop 3)) (or (= 3 2)
     (not false)))))) (color (color (/ (+ (+ (if
     false 2 5) (if false 4 5)) (if (or false
     true) (/ 6 1) (/ 1 2))) (if (not (and false
     true)) (+ (color 6) (color 5)) (color (/
     2 2)))))) (color (+ (/ (if (or (= 2 5) (and
     true true)) (/ (if false 5 3) (color 3))
     (if (= 6 3) (color 4) (if true 4 1))) (if
     (pop (if true 4 4)) (+ (color 6) (if true
     6 5)) (color (color 3)))) (+ (if (not (=
     1 5)) (+ (if false 5 2) (color 1)) (if (or
     false false) (if true 1 3) (if false 2 2)))
     (+ (/ (/ 6 3) (+ 1 2)) (/ (+ 6 1) (if true
         2 6)))))))) (/ (+ (/ (color (if (= (+ (+
     2 2) (/ 4 2)) (if (or false false) (/ 5 1)
     (if false 1 5))) (+ (if (and false false)
     (+ 5 6) (/ 1 4)) (/ (if true 6 6) (color
     4))) (/ (color (if true 2 4)) (/ (if false
     1 2) (/ 2 5))))) (+ (color (+ (if (= 5 2)
     (if false 1 5) (if true 2 4)) (/ (color 6)
     (color 1)))) (color (/ (+ (+ 5 1) (color
     2)) (+ (/ 1 3) (+ 5 3)))))) (/ (if (not (pop
     (/ (if false 2 4) (if false 4 2)))) (if (or
     (or (not false) (pop 6)) (and (and false
     true) (= 6 3))) (if (or (not true) (and false
     false)) (if (and true true) (color 1) (+
     3 4)) (color (if true 6 3))) (/ (/ (/ 5 1)
     (color 3)) (+ (if false 6 2) (color 2))))
     (if (and (not (= 2 5)) (pop (if true 1 4)))
         (color (color (color 2))) (if (or (pop 4)
         (and true true)) (if (and false true) (+
         5 5) (/ 6 2)) (color (/ 4 5))))) (if (not
     (not (not (and true false)))) (color (color
     (color (+ 4 4)))) (+ (if (= (/ 1 6) (if false
     4 3)) (if (and true false) (if false 6 3)
     (/ 6 6)) (if (not true) (color 5) (color
     3))) (/ (if (not true) (/ 5 5) (color 6))
     (/ (color 4) (+ 3 3))))))) (+ (/ (/ (+ (/
     (color (/ 1 3)) (color (color 3))) (if (or
     (or false false) (not true)) (if (= 4 2)
     (/ 6 5) (/ 2 1)) (color (color 6)))) (/ (/
     (/ (/ 6 5) (if true 2 1)) (/ (color 6) (/
     4 4))) (color (+ (color 4) (+ 6 2))))) (+
     (color (+ (+ (color 1) (if true 5 3)) (color
         (color 3)))) (if (= (color (color 3)) (+
     (color 5) (+ 5 1))) (color (/ (/ 3 2) (+
     6 6))) (if (pop (color 4)) (+ (if false 2
     1) (if false 2 6)) (color (+ 3 3)))))) (+
     (if (pop (/ (color (/ 1 3)) (color (+ 1 6))))
         (+ (color (color (color 1))) (/ (color (color
             5)) (/ (+ 6 5) (if true 6 3)))) (color (color
         (color (color 3))))) (/ (+ (+ (if (pop 1)
     (/ 1 3) (if true 5 3)) (+ (+ 3 4) (color
     2))) (/ (color (/ 6 1)) (color (if false
     2 6)))) (+ (color (if (or false true) (if
     true 6 6) (+ 3 4))) (/ (/ (+ 4 3) (color
     3)) (if (or true false) (if false 3 1) (color
     3))))))))) (if (pop (+ (if (or (not (pop
     (+ (color 5) (/ 6 4)))) (= (color (/ (+ 2
     6) (if false 6 2))) (if (and (and false false)
     (and false true)) (if (or true true) (color
     4) (color 1)) (if (pop 5) (if true 4 1) (/
     6 2))))) (if (and (or (pop (if false 5 6))
     (or (or true false) (= 6 5))) (= (if (= 4
     3) (/ 3 3) (color 5)) (if (and false false)
     (color 6) (+ 2 5)))) (color (if (pop (+ 1
     5)) (color (if false 5 3)) (color (color
     2)))) (color (/ (if (and false false) (+
     1 4) (+ 2 5)) (color (if true 2 1))))) (+
     (/ (color (if (and true false) (if true 2
         3) (color 5))) (color (if (and true true)
         (/ 5 3) (/ 6 6)))) (color (if (and (or false
     false) (or true false)) (/ (/ 1 1) (if true
     2 4)) (/ (if false 6 6) (color 5)))))) (+
     (color (+ (if (not (and true false)) (color
         (+ 4 4)) (+ (/ 3 3) (/ 6 4))) (if (or (not
         false) (= 6 1)) (/ (if false 2 3) (/ 4 4))
         (if (and false false) (+ 2 2) (+ 5 2)))))
     (color (color (+ (color (if false 2 6)) (/
         (/ 2 2) (+ 5 5)))))))) (/ (if (pop (/ (if
     (and (not (= 6 2)) (not (not true))) (+ (if
     (= 1 2) (/ 5 4) (color 6)) (if (= 3 2) (color
     3) (color 6))) (if (= (color 5) (if false
     2 6)) (+ (color 4) (color 6)) (if (not true)
     (/ 6 4) (+ 2 1)))) (color (if (pop (/ 5 4))
     (color (/ 1 5)) (color (if false 6 5))))))
     (+ (if (= (+ (/ (if false 6 1) (if false
         1 6)) (color (+ 5 3))) (/ (/ (if false 3
         5) (+ 4 4)) (+ (+ 4 6) (+ 6 5)))) (color
         (if (not (pop 5)) (+ (color 3) (+ 2 6)) (+
             (+ 3 5) (color 3)))) (/ (+ (color (/ 1 4))
         (/ (+ 2 1) (color 1))) (color (color (if
         false 1 1))))) (color (/ (if (or (not true)
         (or true false)) (/ (/ 1 5) (+ 2 2)) (/ (color
         4) (/ 6 6))) (+ (/ (color 1) (color 4)) (color
         (if false 1 5)))))) (/ (color (+ (if (and
     (not false) (= 1 2)) (+ (+ 5 1) (/ 2 6))
     (/ (if false 2 5) (/ 4 4))) (/ (if (and true
     true) (+ 2 4) (color 2)) (if (= 5 6) (if
     true 1 3) (+ 4 1))))) (if (pop (if (= (if
     false 3 5) (if false 6 5)) (/ (color 6) (if
     true 3 1)) (if (= 3 5) (color 2) (+ 3 4))))
     (+ (color (/ (if false 5 1) (+ 2 1))) (if
         (not (pop 3)) (+ (+ 1 5) (if true 6 1)) (if
         (or true true) (color 3) (/ 3 1)))) (+ (/
     (if (= 2 3) (color 5) (if true 2 6)) (color
     (/ 1 2))) (color (color (/ 1 1))))))) (if
     (pop (if (and (not (pop (color 4))) (or (not
         (not false)) (not (or true true)))) (color
         (+ (+ (+ 4 5) (color 3)) (+ (color 4) (if
             false 3 2)))) (/ (color (color (+ 3 3)))
         (+ (/ (color 3) (+ 1 5)) (+ (/ 6 4) (+ 5
             6)))))) (/ (if (not (not (and (pop 1) (=
     4 1)))) (/ (+ (+ (if true 5 1) (if true 3
     6)) (+ (if true 6 1) (color 6))) (+ (if (=
     1 4) (+ 4 3) (+ 6 2)) (color (+ 3 4)))) (/
     (/ (color (if true 6 2)) (+ (if true 6 2)
         (+ 1 1))) (/ (if (or false false) (color
     4) (/ 2 3)) (+ (color 2) (/ 2 3))))) (+ (+
     (+ (+ (color 4) (color 6)) (/ (/ 4 2) (+
         1 2))) (/ (+ (color 3) (/ 3 6)) (+ (color
     5) (color 4)))) (color (color (/ (if true
     2 3) (if false 3 6)))))) (if (or (or (not
     (or (not false) (not true))) (not (not (or
     true false)))) (not (or (or (pop 2) (and
     false false)) (= (/ 4 3) (color 2))))) (if
     (and (pop (color (+ 3 1))) (= (/ (+ 6 4)
         (/ 2 1)) (color (/ 2 2)))) (color (+ (+ (/
     1 6) (color 1)) (color (if false 4 3))))
     (if (= (+ (+ 3 6) (color 6)) (+ (if true
         2 1) (color 2))) (+ (/ (+ 5 3) (+ 5 2)) (if
         (not false) (if false 3 3) (if false 2 3)))
         (color (+ (+ 3 5) (/ 1 3))))) (+ (+ (color
     (+ (/ 5 4) (+ 3 4))) (/ (+ (+ 4 2) (color
     4)) (/ (/ 4 5) (if false 4 6)))) (color (/
     (/ (if false 3 3) (if true 5 3)) (/ (/ 3
     3) (if false 2 6)))))))) (/ (color (/ (/
     (/ (+ (if (and false true) (/ 2 5) (if false
         3 4)) (/ (color 6) (+ 4 6))) (color (if (or
         true true) (+ 6 5) (color 1)))) (if (pop
     (/ (color 5) (+ 4 3))) (+ (+ (/ 6 1) (/ 2
     1)) (color (if true 6 3))) (color (color
     (+ 1 4))))) (color (color (color (color (+
     1 2))))))) (color (if (not (not (= (if (not
     false) (if false 3 5) (color 3)) (+ (color
     6) (+ 4 3))))) (if (= (color (/ (color 6)
     (if true 4 5))) (color (+ (color 1) (+ 1
     5)))) (/ (+ (/ (if true 1 5) (/ 4 5)) (+
     (color 6) (color 5))) (if (and (pop 6) (=
     2 2)) (if (not true) (+ 6 3) (/ 1 2)) (if
     (= 4 1) (/ 2 6) (if false 6 2)))) (color
     (if (and (pop 6) (pop 1)) (+ (+ 6 2) (color
         4)) (+ (color 4) (color 6))))) (/ (color
     (color (+ (if false 5 2) (/ 5 4)))) (color
     (color (+ (color 6) (+ 3 6)))))))))) (color
     (color (/ (color (+ (color (color (color
         (color (color 5))))) (/ (if (and (= (+ 1
         1) (+ 4 5)) (or (= 6 5) (or true true)))
         (if (pop (if false 2 2)) (/ (if false 4 4)
             (color 6)) (/ (if true 2 1) (/ 6 6))) (if
         (pop (if true 6 6)) (if (and true true) (/
         5 4) (if true 5 6)) (+ (+ 2 5) (if false
         6 3)))) (color (if (pop (color 3)) (+ (if
         false 5 3) (color 5)) (if (not false) (+
         1 5) (color 1))))))) (+ (/ (+ (if (= (color
         (color 6)) (/ (if false 1 3) (/ 1 1))) (color
         (+ (/ 1 6) (/ 5 4))) (/ (if (and true false)
         (/ 4 6) (/ 3 3)) (color (+ 4 4)))) (/ (/
         (+ (color 4) (if false 4 4)) (if (and false
         false) (color 1) (color 2))) (if (and (=
         1 4) (pop 5)) (/ (+ 2 6) (if false 2 1))
         (if (not false) (color 2) (color 6))))) (color
         (+ (+ (/ (+ 5 6) (if true 2 1)) (if (= 2
             5) (/ 6 6) (/ 4 6))) (color (+ (color 4)
             (color 5)))))) (/ (if (not (= (+ (/ 3 4)
         (color 6)) (+ (+ 3 1) (color 3)))) (/ (+
         (if (= 5 6) (+ 5 2) (/ 3 1)) (+ (if false
         6 4) (color 6))) (if (pop (if false 6 4))
         (+ (/ 5 4) (color 2)) (+ (color 2) (+ 5 6))))
         (/ (if (and (not true) (pop 3)) (/ (color
             2) (+ 3 1)) (/ (color 6) (if true 6 4)))
             (if (pop (+ 2 6)) (+ (if true 1 2) (if true
                 2 5)) (color (/ 2 4))))) (color (+ (if (=
         (if true 4 4) (+ 1 3)) (+ (+ 5 3) (+ 1 4))
         (if (not false) (+ 2 2) (+ 5 6))) (color
         (if (pop 1) (/ 4 3) (/ 2 5)))))))))))



Generation 15
================

Subpopulation 0
----------------
Avg Nodes: 466.842
Nodes/tree: [466.842]
Avg Depth: 8.098
Depth/tree: [8.098]
Mean fitness raw: 6.212 adjusted: 0.14384443 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (color (color (if (pop (+ (if (or (not (and
     (and (pop 2) (not false)) (or (not false)
     (pop 1)))) (or (not (or (and false true)
     (or true true))) (pop (if (and false false)
     (+ 3 2) (+ 5 2))))) (/ (if (pop (+ (color
     5) (color 1))) (color (/ (+ 6 5) (if false
     4 1))) (/ (color (color 5)) (if (pop 6) (if
     false 1 5) (if false 4 2)))) (color (/ (+
     (if true 5 2) (if true 3 1)) (if (not false)
     (color 2) (color 3))))) (if (not (not (or
     (pop 5) (pop 3)))) (if (= (+ (if true 4 4)
     (color 3)) (+ (color 3) (/ 5 3))) (color
     (color (color 1))) (if (pop (if true 4 3))
     (+ (/ 1 5) (color 3)) (/ (color 5) (+ 2 1))))
     (/ (if (pop (/ 5 4)) (/ (+ 5 6) (if true
         5 2)) (color (color 2))) (+ (+ (+ 6 1) (+
         6 2)) (color (+ 4 4)))))) (color (/ (if (pop
     (+ (/ 3 4) (if true 3 3))) (+ (if (= 3 3)
     (+ 5 4) (+ 6 4)) (color (color 5))) (+ (+
     (+ 5 1) (if true 2 1)) (/ (+ 5 2) (color
     4)))) (+ (/ (color (color 3)) (color (/ 3
     1))) (/ (color (+ 5 3)) (/ (/ 4 2) (/ 6 3))))))))
     (if (not (and (pop (+ (color (color (/ 4
         4))) (/ (/ (/ 3 2) (if false 4 2)) (/ (color
         5) (/ 2 1))))) (= (+ (/ (color (color 6))
         (color (/ 6 2))) (color (/ (+ 5 4) (/ 2 4))))
         (/ (+ (/ (/ 3 5) (color 2)) (+ (+ 6 2) (/
             2 6))) (if (pop (+ 1 6)) (+ (+ 6 4) (/ 1
             4)) (color (+ 5 6))))))) (color (color (/
         (/ (if (and (or false true) (and false false))
             (color (if false 3 6)) (color (if true 6
             6))) (+ (+ (if false 3 4) (+ 5 1)) (color
             (if false 4 3)))) (/ (+ (/ (if false 1 6)
         (+ 3 5)) (if (pop 5) (+ 3 1) (if false 3
         2))) (if (or (= 4 3) (pop 5)) (/ (if false
         6 3) (/ 5 5)) (/ (if true 2 4) (color 3)))))))
         (if (or (pop (if (pop (+ (/ 4 6) (+ 3 6)))
             (+ (color (color 2)) (if (= 4 4) (color 1)
                 (/ 2 2))) (if (= (+ 1 5) (color 1)) (color
             (color 1)) (color (if false 4 3))))) (= (/
             (if (or (or true false) (and true false))
                 (/ (color 4) (/ 4 6)) (if (or true false)
                 (if true 6 3) (color 6))) (color (/ (color
             4) (color 3)))) (+ (+ (if (not false) (/
             6 3) (+ 1 5)) (+ (color 5) (+ 5 1))) (/ (if
             (and true true) (+ 2 5) (+ 1 1)) (+ (+ 4
             2) (color 3)))))) (+ (+ (if (pop (color (+
             6 2))) (+ (/ (/ 4 4) (+ 6 2)) (+ (if true
             4 6) (+ 5 4))) (color (+ (+ 5 2) (if true
             2 6)))) (if (= (if (= 4 5) (if true 1 2)
             (color 4)) (if (= 2 4) (color 3) (/ 4 6)))
             (+ (+ (/ 4 3) (if false 2 3)) (if (or true
                 false) (color 3) (color 2))) (+ (color (/
             2 3)) (/ (if false 3 1) (color 6))))) (color
             (/ (if (not (not true)) (+ (if true 3 1)
                 (+ 2 1)) (+ (if true 6 1) (/ 1 6))) (if (pop
                 (/ 4 6)) (if (or false false) (color 6) (if
                 false 1 1)) (+ (/ 5 3) (if false 4 6))))))
             (/ (+ (color (/ (/ (/ 5 4) (color 2)) (if
                 (pop 4) (+ 2 6) (/ 4 4)))) (+ (if (not (pop
                 6)) (if (or true true) (if true 6 2) (if
                 true 5 1)) (color (/ 3 5))) (if (pop (/ 4
                 3)) (if (not true) (color 5) (/ 2 2)) (+
                 (color 2) (+ 4 6))))) (if (and (= (color
                 (/ 1 5)) (+ (/ 1 3) (if false 3 6))) (= (+
                 (color 3) (/ 6 1)) (+ (+ 1 5) (color 5))))
                 (+ (/ (/ (if false 4 5) (if false 1 4)) (+
                     (+ 2 3) (+ 4 1))) (/ (if (pop 2) (color 4)
                     (color 2)) (color (if true 5 3)))) (color
                 (color (color (color 4)))))))) (/ (color
     (+ (/ (color (if (not (and false true)) (+
         (if true 6 3) (if false 4 2)) (if (pop 5)
         (+ 1 5) (color 2)))) (if (or (or (= 2 2)
         (or true false)) (or (and true true) (= 1
         1))) (/ (/ (+ 4 3) (/ 2 3)) (/ (if false
         2 1) (color 1))) (/ (if (or false false)
         (+ 6 2) (if true 4 6)) (+ (color 3) (/ 6
         1))))) (color (if (not (not (or true false)))
         (color (+ (+ 5 3) (+ 4 5))) (+ (+ (if true
         2 2) (+ 1 5)) (+ (/ 3 6) (color 6)))))))
     (if (= (if (or (or (not (or true true)) (not
         (and true true))) (not (and (and true false)
         (or true true)))) (/ (if (pop (color 1))
         (color (/ 3 4)) (/ (color 5) (+ 5 1))) (/
         (color (if false 1 5)) (if (= 5 3) (if false
         2 5) (+ 6 6)))) (if (and (pop (+ 1 3)) (and
         (pop 4) (and true false))) (if (= (color
         5) (/ 5 3)) (/ (color 1) (+ 6 1)) (if (=
         2 5) (+ 4 6) (+ 3 1))) (+ (+ (color 3) (+
         5 6)) (if (pop 3) (/ 1 3) (/ 3 5))))) (+
         (/ (if (or (not true) (or true true)) (if
             (not false) (/ 6 5) (if false 4 2)) (if (=
             4 4) (color 5) (if false 1 2))) (color (if
             (not false) (/ 6 6) (/ 4 2)))) (/ (+ (/ (color
         5) (color 3)) (+ (if true 5 6) (/ 1 1)))
         (+ (color (+ 5 3)) (+ (/ 5 2) (if false 3
             5)))))) (/ (/ (color (/ (if (not true) (/
         6 3) (+ 2 3)) (/ (color 6) (+ 2 3)))) (if
         (pop (if (and false false) (if false 4 3)
             (color 2))) (/ (color (color 2)) (color (+
         6 4))) (/ (/ (if false 2 4) (+ 1 3)) (color
         (if false 5 6))))) (color (/ (/ (color (/
         4 3)) (color (if false 3 1))) (/ (/ (+ 3
         4) (color 2)) (color (if true 6 3)))))) (/
         (/ (/ (+ (color (/ 5 4)) (if (and false true)
             (if true 1 6) (/ 2 5))) (+ (color (+ 3 4))
             (if (and true true) (/ 6 6) (color 1))))
             (if (= (if (or true false) (+ 1 6) (if true
                 1 5)) (+ (if true 1 6) (+ 1 6))) (color (if
                 (not false) (/ 2 3) (/ 5 2))) (color (/ (+
                 4 4) (+ 1 3))))) (if (and (or (or (or true
         false) (or false false)) (or (and true true)
         (pop 6))) (= (+ (color 2) (/ 1 3)) (color
         (+ 2 5)))) (+ (/ (color (color 2)) (/ (if
         true 1 5) (if false 6 2))) (/ (/ (/ 4 4)
         (+ 6 6)) (if (and true false) (if true 2
         1) (/ 3 5)))) (color (color (if (and false
         true) (/ 6 2) (/ 3 5)))))))))))



Generation 16
================

Subpopulation 0
----------------
Avg Nodes: 411.001
Nodes/tree: [411.001]
Avg Depth: 8.021
Depth/tree: [8.021]
Mean fitness raw: 11.097 adjusted: 0.1084243 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (color (color (if (pop (+ (if (or (not (and
     (and (pop 2) (not false)) (or (not false)
     (pop 1)))) (or (not (or (and false true)
     (or true true))) (pop (if (and false false)
     (+ 3 2) (+ 5 2))))) (/ (if (pop (+ (color
     5) (color 1))) (color (/ (+ 6 5) (if false
     4 1))) (/ (color (color 5)) (if (pop 6) (if
     false 1 5) (if false 4 2)))) (color (/ (+
     (if true 5 2) (if true 3 1)) (if (not false)
     (color 2) (color 3))))) (if (not (not (or
     (pop 5) (pop 3)))) (if (= (+ (if true 4 4)
     (color 3)) (+ (color 3) (/ 5 3))) (color
     (color (color 1))) (if (pop (if true 4 3))
     (+ (/ 1 5) (color 3)) (/ (color 5) (+ 2 1))))
     (/ (if (pop (/ 5 4)) (/ (+ 5 6) (if true
         5 2)) (color (color 2))) (+ (+ (+ 6 1) (+
         6 2)) (color (+ 4 4)))))) (color (/ (if (pop
     (+ (/ 3 4) (if true 3 3))) (+ (if (= 3 3)
     (+ 5 4) (+ 6 4)) (color (color 5))) (+ (+
     (+ 5 1) (if true 2 1)) (/ (+ 5 2) (color
     4)))) (+ (/ (color (color 3)) (color (/ 3
     1))) (/ (color (+ 5 3)) (/ (/ 4 2) (/ 6 3))))))))
     (if (not (and (pop (+ (color (color (/ 4
         4))) (/ (/ (/ 3 2) (if false 4 2)) (/ (color
         5) (/ 2 1))))) (= (+ (/ (color (color 6))
         (color (/ 6 2))) (color (/ (+ 5 4) (/ 2 4))))
         (/ (+ (/ (/ 3 5) (color 2)) (+ (+ 6 2) (/
             2 6))) (if (pop (+ 1 6)) (+ (+ 6 4) (/ 1
             4)) (color (+ 5 6))))))) (color (color (/
         (/ (if (and (or false true) (and false false))
             (color (if false 3 6)) (color (if true 6
             6))) (+ (+ (if false 3 4) (+ 5 1)) (color
             (if false 4 3)))) (/ (+ (/ (if false 1 6)
         (+ 3 5)) (if (pop 5) (+ 3 1) (if false 3
         2))) (if (or (= 4 3) (pop 5)) (/ (if false
         6 3) (/ 5 5)) (/ (if true 2 4) (color 3)))))))
         (if (or (pop (if (pop (+ (/ 4 6) (+ 3 6)))
             (+ (color (color 2)) (if (= 4 4) (color 1)
                 (/ 2 2))) (if (= (+ 1 5) (color 1)) (color
             (color 1)) (color (if false 4 3))))) (= (/
             (if (or (or true false) (and true false))
                 (/ (color 4) (/ 4 6)) (if (or true false)
                 (if true 6 3) (color 6))) (color (/ (color
             4) (color 3)))) (+ (+ (if (not false) (/
             6 3) (+ 1 5)) (+ (color 5) (+ 5 1))) (/ (if
             (and true true) (+ 2 5) (+ 1 1)) (+ (+ 4
             2) (color 3)))))) (+ (+ (if (pop (color (+
             6 2))) (+ (/ (/ 4 4) (+ 6 2)) (+ (if true
             4 6) (+ 5 4))) (color (+ (+ 5 2) (if true
             2 6)))) (if (= (if (= 4 5) (if true 1 2)
             (color 4)) (if (= 2 4) (color 3) (/ 4 6)))
             (+ (+ (/ 4 3) (if false 2 3)) (if (or true
                 false) (color 3) (color 2))) (+ (color (/
             2 3)) (/ (if false 3 1) (color 6))))) (color
             (/ (if (not (not true)) (+ (if true 3 1)
                 (+ 2 1)) (+ (if true 6 1) (/ 1 6))) (if (pop
                 (/ 4 6)) (if (or false false) (color 6) (if
                 false 1 1)) (+ (/ 5 3) (if false 4 6))))))
             (/ (+ (color (/ (/ (/ 5 4) (color 2)) (if
                 (pop 4) (+ 2 6) (/ 4 4)))) (+ (if (not (pop
                 6)) (if (or true true) (if true 6 2) (if
                 true 5 1)) (color (/ 3 5))) (if (pop (/ 4
                 3)) (if (not true) (color 5) (/ 2 2)) (+
                 (color 2) (+ 4 6))))) (if (and (= (color
                 (/ 1 5)) (+ (/ 1 3) (if false 3 6))) (= (+
                 (color 3) (/ 6 1)) (+ (+ 1 5) (color 5))))
                 (+ (/ (/ (if false 4 5) (if false 1 4)) (+
                     (+ 2 3) (+ 4 1))) (/ (if (pop 2) (color 4)
                     (color 2)) (color (if true 5 3)))) (color
                 (color (color (color 4)))))))) (/ (color
     (+ (/ (color (if (not (and false true)) (+
         (if true 6 3) (if false 4 2)) (if (pop 5)
         (+ 1 5) (color 2)))) (if (or (or (= 2 2)
         (or true false)) (or (and true true) (= 1
         1))) (/ (/ (+ 4 3) (/ 2 3)) (/ (if false
         2 1) (color 1))) (/ (if (or false false)
         (+ 6 2) (if true 4 6)) (+ (color 3) (/ 6
         1))))) (color (if (not (not (or true false)))
         (color (+ (+ 5 3) (+ 4 5))) (+ (+ (if true
         2 2) (+ 1 5)) (+ (/ 3 6) (color 6)))))))
     (if (= (if (or (or (not (or true true)) (not
         (and true true))) (not (and (and true false)
         (or true true)))) (/ (if (pop (color 1))
         (color (/ 3 4)) (/ (color 5) (+ 5 1))) (/
         (color (if false 1 5)) (if (= 5 3) (if false
         2 5) (+ 6 6)))) (if (and (pop (+ 1 3)) (and
         (pop 4) (and true false))) (if (= (color
         5) (/ 5 3)) (/ (color 1) (+ 6 1)) (if (=
         2 5) (+ 4 6) (+ 3 1))) (+ (+ (color 3) (+
         5 6)) (if (pop 3) (/ 1 3) (/ 3 5))))) (+
         (/ (if (or (not true) (or true true)) (if
             (not false) (/ 6 5) (if false 4 2)) (if (=
             4 4) (color 5) (if false 1 2))) (color (if
             (not false) (/ 6 6) (/ 4 2)))) (/ (+ (/ (color
         5) (color 3)) (+ (if true 5 6) (/ 1 1)))
         (+ (color (+ 5 3)) (+ (/ 5 2) (if false 3
             5)))))) (/ (/ (color (/ (if (not true) (/
         6 3) (+ 2 3)) (/ (color 6) (+ 2 3)))) (if
         (pop (if (and false false) (if false 4 3)
             (color 2))) (/ (color (color 2)) (color (+
         6 4))) (/ (/ (if false 2 4) (+ 1 3)) (color
         (if false 5 6))))) (color (/ (/ (color (/
         4 3)) (color (if false 3 1))) (/ (/ (+ 3
         4) (color 2)) (color (if true 6 3)))))) (/
         (/ (/ (+ (color (/ 5 4)) (if (and false true)
             (if true 1 6) (/ 2 5))) (+ (color (+ 3 4))
             (if (and true true) (/ 6 6) (color 1))))
             (if (= (if (or true false) (+ 1 6) (if true
                 1 5)) (+ (if true 1 6) (+ 1 6))) (color (if
                 (not false) (/ 2 3) (/ 5 2))) (color (/ (+
                 4 4) (+ 1 3))))) (if (and (or (or (or true
         false) (or false false)) (or (and true true)
         (pop 6))) (= (+ (color 2) (/ 1 3)) (color
         (+ 2 5)))) (+ (/ (color (color 2)) (/ (if
         true 1 5) (if false 6 2))) (/ (/ (/ 4 4)
         (+ 6 6)) (if (and true false) (if true 2
         1) (/ 3 5)))) (color (color (if (and false
         true) (/ 6 2) (/ 3 5)))))))))))



Generation 17
================

Subpopulation 0
----------------
Avg Nodes: 425.386
Nodes/tree: [425.386]
Avg Depth: 8.072
Depth/tree: [8.072]
Mean fitness raw: 10.281 adjusted: 0.11345257 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (= (color (+ 2 4)) (if (= 5 2) (if false
     2 1) (/ 2 3))) (not (or (or false true) (pop
     6))))



Generation 18
================

Subpopulation 0
----------------
Avg Nodes: 422.609
Nodes/tree: [422.609]
Avg Depth: 8.189
Depth/tree: [8.189]
Mean fitness raw: 10.078 adjusted: 0.11478527 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (pop (/ 5 6)) (and (or true true) (and
     true false)))



Generation 19
================

Subpopulation 0
----------------
Avg Nodes: 429.974
Nodes/tree: [429.974]
Avg Depth: 8.029
Depth/tree: [8.029]
Mean fitness raw: 10.947 adjusted: 0.111352645 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (+ (if (pop (+ (color (color (if (or (or
     (not true) (or true false)) (not (= 6 1)))
     (+ (color (if true 1 6)) (+ (if false 3 4)
         (/ 4 6))) (color (if (or true true) (+ 1
     2) (+ 3 6)))))) (if (and (= (color (/ (color
     2) (if false 3 6))) (color (/ (color 1) (+
     5 4)))) (and (and (or (or false true) (or
     false true)) (not (= 2 1))) (not (not (=
     2 1))))) (if (or (not (or (= 3 5) (= 4 2)))
     (= (+ (/ 1 6) (color 6)) (if (= 6 1) (+ 3
         4) (/ 1 4)))) (+ (color (+ (/ 5 2) (color
     5))) (+ (/ (color 4) (color 1)) (/ (/ 6 6)
     (color 5)))) (if (pop (if (or true true)
     (/ 1 1) (+ 4 1))) (if (or (not false) (or
     false false)) (color (color 2)) (color (if
     false 4 2))) (+ (/ (color 5) (if true 5 5))
     (+ (/ 2 3) (+ 5 2))))) (color (+ (if (and
     (pop 1) (and true true)) (if (pop 3) (+ 4
     1) (if true 4 6)) (if (and true true) (/
     4 3) (if true 6 6))) (color (if (or true
     true) (+ 5 2) (+ 2 1)))))))) (if (or (= (+
     (if (not (pop (+ 3 1))) (/ (+ (if false 2
         4) (+ 5 3)) (+ (if true 3 2) (+ 6 3))) (color
         (/ (color 1) (+ 2 3)))) (+ (color (color
     (color 2))) (if (and (or true true) (and
     false false)) (if (or false false) (color
     5) (if true 3 6)) (if (not true) (color 2)
     (+ 5 3))))) (+ (/ (if (= (/ 1 1) (if false
     6 1)) (/ (+ 2 1) (+ 6 5)) (+ (/ 1 3) (+ 5
     1))) (if (or (= 4 1) (pop 2)) (/ (color 4)
     (/ 1 5)) (/ (color 2) (if false 2 5)))) (+
     (+ (color (color 1)) (/ (+ 6 2) (+ 5 5)))
     (+ (color (+ 4 6)) (/ (if true 1 6) (color
         5)))))) (pop (if (= (+ (+ (if false 4 2)
     (color 2)) (color (/ 4 1))) (color (+ (+
     1 5) (if true 1 3)))) (/ (+ (color (+ 3 2))
     (/ (color 6) (+ 4 5))) (if (or (pop 1) (or
     true true)) (if (and false false) (color
     3) (color 4)) (if (and false true) (if false
     6 6) (color 4)))) (color (/ (color (if false
     1 2)) (/ (color 3) (/ 2 3))))))) (if (or
     (not (pop (if (or (or true true) (not true))
         (if (not false) (if false 1 2) (/ 6 6)) (if
         (and false false) (if true 2 1) (color 4)))))
     (or (pop (if (pop (color 4)) (color (+ 1
         2)) (+ (if true 1 3) (color 3)))) (and (pop
         (/ (+ 6 1) (if false 5 3))) (and (pop (color
         6)) (and (not false) (pop 5)))))) (color
     (/ (+ (color (if (pop 4) (color 2) (/ 4 5)))
         (/ (/ (if false 3 2) (color 4)) (color (+
             5 4)))) (color (+ (+ (/ 1 3) (if false 6
         1)) (if (= 4 4) (/ 5 4) (+ 5 6)))))) (/ (+
     (/ (/ (if (or false false) (/ 5 6) (if false
         5 4)) (if (or true false) (/ 4 5) (color
         2))) (color (color (color 1)))) (/ (/ (/
     (color 5) (/ 2 6)) (if (pop 3) (/ 4 6) (color
     2))) (+ (if (and false false) (+ 5 3) (+
     2 4)) (+ (/ 5 1) (/ 6 6))))) (/ (/ (color
     (color (if true 3 3))) (+ (if (or false false)
     (color 3) (color 6)) (/ (+ 6 4) (color 5))))
     (/ (color (/ (color 6) (color 3))) (color
         (color (+ 6 2))))))) (+ (if (= (/ (if (or
     (pop 3) (and true true)) (/ (+ 5 4) (color
     1)) (+ (/ 1 6) (color 6))) (/ (if (pop 6)
     (+ 6 2) (+ 6 2)) (color (+ 4 5)))) (color
     (/ (color (color 3)) (if (pop 3) (+ 4 4)
         (if false 2 4))))) (if (= (color (+ (/ 4
     4) (+ 5 4))) (/ (if (and false true) (/ 6
     3) (+ 2 1)) (color (/ 1 2)))) (color (if
     (or (= 1 3) (and true false)) (if (pop 1)
     (/ 2 3) (+ 4 2)) (color (color 1)))) (+ (/
     (/ (if false 4 4) (+ 3 3)) (/ (/ 5 2) (color
     5))) (/ (+ (+ 6 3) (/ 6 1)) (if (not true)
     (if false 3 6) (+ 5 2))))) (+ (+ (+ (if (not
     true) (+ 2 5) (/ 6 1)) (if (not false) (color
     3) (/ 2 2))) (if (= (if true 2 1) (color
     2)) (+ (+ 4 4) (color 3)) (if (not true)
     (if true 2 5) (/ 5 5)))) (if (not (and (=
     3 5) (= 4 5))) (/ (+ (color 5) (color 1))
     (if (or false true) (if false 4 4) (if true
         5 6))) (+ (/ (if false 1 6) (if false 6 1))
     (color (color 5)))))) (if (= (/ (color (+
     (/ 5 4) (/ 3 4))) (color (color (color 5))))
     (/ (if (not (and true false)) (/ (color 6)
         (color 4)) (+ (color 1) (/ 3 4))) (if (and
         (or true false) (= 6 2)) (+ (if true 2 4)
         (+ 2 4)) (if (or false false) (color 6) (if
         true 5 3))))) (if (or (or (not (or true true))
     (or (pop 2) (or false false))) (and (and
     (= 2 6) (not false)) (pop (+ 3 2)))) (+ (if
     (not (pop 2)) (/ (if true 6 5) (color 5))
     (color (/ 3 5))) (color (color (/ 6 2))))
     (/ (/ (if (and false true) (if false 6 1)
         (+ 4 3)) (color (/ 1 2))) (if (or (= 1 4)
         (pop 6)) (color (if true 4 6)) (/ (+ 6 4)
         (if true 3 6))))) (/ (/ (+ (+ (color 4) (if
     false 6 4)) (/ (if false 6 1) (+ 4 4))) (if
     (or (= 1 6) (and false false)) (/ (+ 1 2)
     (color 4)) (/ (/ 3 5) (color 6)))) (if (pop
     (+ (color 5) (+ 5 4))) (if (not (and false
     true)) (if (or true true) (/ 4 5) (color
     6)) (color (if false 6 6))) (color (/ (if
     true 2 6) (if true 3 4)))))))) (/ (/ (color
     (if (= (+ (/ (if false 2 4) (/ 4 6)) (color
         (color 5))) (if (pop (+ 5 2)) (color (if
         true 6 5)) (if (or true true) (color 1) (/
         3 6)))) (+ (color (+ (/ 5 5) (color 5)))
         (color (color (color 2)))) (color (/ (if
         (= 2 4) (if false 6 4) (color 3)) (/ (+ 1
         3) (if false 6 2)))))) (/ (+ (color (+ (if
     (or false false) (/ 4 1) (color 5)) (if (=
     5 4) (color 5) (if false 1 6)))) (if (pop
     (/ (if true 3 2) (color 5))) (color (/ (color
     6) (+ 2 6))) (+ (color (if false 5 2)) (if
     (or false false) (color 4) (color 4)))))
     (if (= (+ (color (color 2)) (if (= 3 3) (color
         1) (+ 6 3))) (/ (+ (color 5) (if true 5 6))
         (color (color 1)))) (if (pop (if (not false)
         (/ 4 2) (+ 1 6))) (if (= (/ 6 6) (+ 4 5))
         (/ (color 5) (if true 6 1)) (color (if true
         3 1))) (+ (/ (+ 2 6) (/ 5 3)) (+ (+ 1 5)
         (color 3)))) (+ (if (and (pop 3) (or false
         true)) (+ (+ 1 3) (+ 3 1)) (+ (+ 3 6) (if
         false 3 2))) (if (or (pop 6) (pop 3)) (color
         (/ 2 3)) (+ (if true 1 2) (/ 2 2))))))) (+
     (color (+ (/ (color (+ (color 4) (+ 5 1)))
         (/ (color (/ 6 3)) (/ (+ 1 4) (/ 6 2))))
         (if (pop (if (pop 5) (if true 5 6) (color
             6))) (if (not (pop 5)) (if (and true true)
             (/ 5 4) (color 4)) (color (color 1))) (if
             (or (pop 2) (and true true)) (color (/ 2
             6)) (+ (if true 5 5) (if false 6 1))))))
     (if (pop (color (if (and (and true true)
         (not false)) (+ (color 4) (if true 5 1))
         (/ (if false 6 3) (color 4))))) (color (if
         (pop (if (and false true) (if false 5 5)
             (color 3))) (if (pop (color 3)) (/ (+ 1 1)
         (if true 4 2)) (/ (+ 2 3) (+ 2 5))) (/ (/
         (color 4) (+ 3 1)) (if (not true) (/ 5 5)
         (color 1))))) (/ (+ (if (pop (if false 6
         1)) (color (/ 6 3)) (/ (color 3) (/ 1 5)))
         (if (pop (/ 3 6)) (+ (+ 5 1) (if true 6 4))
             (/ (/ 6 6) (color 6)))) (+ (if (pop (if false
         4 1)) (/ (if true 6 2) (color 2)) (/ (/ 3
         3) (if false 3 5))) (if (not (and true true))
         (color (color 3)) (/ (color 1) (color 5)))))))))
     (color (/ (if (= (if (= (color (if (not false)
         (color 4) (/ 4 1))) (/ (/ (if false 4 3)
         (/ 4 1)) (+ (color 1) (+ 3 5)))) (/ (if (not
         (and false true)) (color (+ 5 5)) (+ (+ 3
         1) (/ 4 6))) (/ (color (if true 1 2)) (if
         (or false true) (/ 5 5) (if false 5 5))))
         (color (/ (/ (+ 3 5) (/ 2 5)) (color (/ 4
             4))))) (color (if (= (+ (+ 3 2) (+ 6 6))
         (if (or false false) (+ 1 1) (+ 2 5))) (+
         (if (not true) (/ 2 6) (+ 4 2)) (+ (/ 6 3)
         (/ 4 5))) (/ (+ (+ 5 1) (+ 1 1)) (if (= 6
         5) (/ 6 4) (color 1)))))) (/ (color (if (=
         (/ (if false 4 3) (if false 2 3)) (/ (if
         true 5 4) (+ 1 4))) (+ (if (and false false)
         (+ 1 4) (/ 4 3)) (/ (color 4) (/ 4 5))) (if
         (= (+ 4 3) (/ 3 4)) (+ (color 1) (+ 2 4))
         (/ (/ 6 4) (/ 4 2))))) (color (if (not (not
         (or false true))) (+ (color (+ 6 3)) (+ (+
         3 4) (+ 1 3))) (color (if (or false false)
         (if false 3 3) (/ 5 3)))))) (+ (+ (if (or
         (not (and false true)) (and (not true) (and
         true true))) (if (= (if true 5 2) (color
         4)) (+ (/ 3 2) (/ 5 5)) (if (not false) (if
         false 4 1) (if false 6 2))) (color (if (=
         4 2) (/ 5 2) (if false 4 2)))) (+ (color
         (color (if false 5 1))) (/ (color (+ 3 6))
         (color (color 4))))) (/ (color (if (or (or
         false true) (pop 2)) (if (not false) (/ 4
         1) (/ 5 4)) (/ (if true 3 5) (/ 6 4)))) (color
         (+ (+ (if true 4 5) (+ 5 5)) (/ (/ 4 1) (color
             4))))))) (color (+ (color (if (= (if (or
         false true) (if true 2 4) (if true 4 6))
         (/ (+ 4 2) (/ 2 4))) (+ (+ (if false 3 1)
         (if true 6 5)) (+ (if false 4 4) (if true
         5 5))) (+ (+ (+ 3 6) (/ 6 2)) (color (/ 3
         5))))) (if (or (and (= (color 5) (/ 6 4))
         (= (if true 5 1) (/ 6 5))) (= (/ (color 5)
         (/ 1 2)) (/ (+ 6 6) (color 1)))) (/ (if (not
         (or true false)) (+ (if false 6 5) (+ 2 3))
         (color (color 2))) (/ (+ (color 4) (+ 3 3))
         (if (= 6 2) (color 5) (+ 6 5)))) (color (+
         (+ (color 6) (/ 4 6)) (/ (/ 5 6) (+ 4 5))))))))))



Generation 20
================

Subpopulation 0
----------------
Avg Nodes: 440.719
Nodes/tree: [440.719]
Avg Depth: 8.004
Depth/tree: [8.004]
Mean fitness raw: 6.734 adjusted: 0.14099959 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 21
================

Subpopulation 0
----------------
Avg Nodes: 478.929
Nodes/tree: [478.929]
Avg Depth: 8.161
Depth/tree: [8.161]
Mean fitness raw: 10.495 adjusted: 0.11118603 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (pop (/ (+ (/ (+ (+ (if (and (= 2 5)
     (= 1 4)) (+ (if false 6 6) (color 3)) (/
     (if false 1 1) (if false 6 3))) (color (/
     (if false 3 5) (/ 4 4)))) (color (/ (color
     (+ 4 3)) (color (color 5))))) (if (= (+ (+
     (color 4) (color 3)) (+ (if false 2 1) (color
     5))) (color (/ (color 4) (color 3)))) (if
     (pop (if (and true false) (/ 1 5) (/ 4 2)))
     (+ (/ (+ 1 3) (/ 2 1)) (+ (color 6) (+ 5
         2))) (if (pop (/ 2 2)) (color (/ 2 3)) (/
     (if true 6 4) (/ 4 1)))) (+ (color (+ (/
     2 2) (+ 4 5))) (if (= (if true 1 3) (+ 3
     1)) (color (color 2)) (/ (if false 6 1) (/
     5 6)))))) (+ (/ (if (and (= (/ 2 6) (/ 1
     2)) (= (+ 5 1) (color 3))) (if (and (= 3
     6) (and true true)) (color (/ 1 4)) (+ (+
     4 4) (+ 6 1))) (+ (color (if true 2 2)) (/
     (/ 3 1) (/ 4 1)))) (color (/ (+ (color 3)
     (color 2)) (+ (+ 3 4) (if false 6 3)))))
     (+ (/ (if (= (/ 1 5) (/ 1 6)) (/ (if true
         3 6) (/ 6 2)) (if (pop 3) (if false 4 6)
         (color 3))) (+ (+ (/ 1 5) (+ 4 3)) (/ (if
         true 2 4) (/ 1 2)))) (if (or (not (= 6 5))
         (and (pop 2) (= 3 6))) (/ (color (if false
         4 1)) (color (+ 6 4))) (/ (/ (+ 5 3) (+ 6
         4)) (color (if true 1 1))))))) (/ (+ (/ (/
     (color (+ (/ 6 4) (color 5))) (/ (color (if
     false 6 2)) (if (pop 3) (if true 3 4) (+
     3 3)))) (if (pop (color (if true 5 5))) (/
     (/ (/ 5 3) (if true 2 1)) (+ (color 1) (color
     2))) (+ (+ (/ 3 3) (/ 4 3)) (+ (if true 1
     6) (+ 6 4))))) (/ (if (or (or (= 2 2) (not
     true)) (or (and false false) (= 4 2))) (/
     (/ (/ 5 3) (+ 2 6)) (color (color 4))) (/
     (/ (if false 6 5) (/ 3 4)) (color (if true
     3 3)))) (color (/ (if (= 1 3) (/ 5 3) (if
     true 4 4)) (+ (color 6) (/ 5 1)))))) (+ (+
     (+ (+ (color (if true 6 4)) (if (not true)
         (if false 4 1) (if false 1 3))) (color (/
         (/ 1 1) (+ 6 1)))) (if (not (= (+ 5 2) (+
     4 5))) (color (if (not true) (+ 2 6) (color
     5))) (/ (if (or false false) (/ 2 5) (+ 1
     4)) (+ (color 6) (/ 1 5))))) (color (if (=
     (color (/ 4 1)) (if (or true false) (/ 3
     1) (+ 3 5))) (/ (/ (if false 1 6) (/ 1 1))
     (+ (+ 1 2) (+ 4 2))) (color (/ (/ 5 2) (+
     5 6))))))))) (color (+ (if (pop (if (or (pop
     (/ (color 3) (/ 6 1))) (not (not (and false
     false)))) (/ (/ (+ (if false 1 6) (/ 4 1))
     (if (or false true) (/ 1 6) (color 2))) (/
     (+ (/ 6 2) (if true 5 1)) (color (+ 1 1))))
     (/ (+ (+ (/ 5 3) (if false 1 6)) (if (= 1
         1) (if false 4 1) (/ 2 3))) (color (if (or
         false false) (+ 2 5) (/ 5 5)))))) (/ (+ (color
     (color (/ (/ 2 2) (+ 1 4)))) (+ (+ (/ (/
     1 6) (+ 1 2)) (/ (/ 5 1) (if true 3 5)))
     (+ (if (not false) (color 1) (color 5)) (color
         (color 5))))) (/ (color (+ (+ (/ 4 6) (/
     5 3)) (+ (/ 5 1) (+ 2 2)))) (color (/ (/
     (color 1) (color 3)) (/ (if false 4 5) (color
     2)))))) (if (pop (color (/ (/ (+ 2 5) (+
     5 3)) (if (pop 1) (if false 6 5) (color 1)))))
     (/ (color (/ (color (+ 6 3)) (if (or false
         false) (+ 5 5) (if true 4 2)))) (if (pop
         (color (if false 6 4))) (color (color (color
         4))) (if (not (or true true)) (+ (if true
         2 6) (/ 2 3)) (if (pop 4) (color 4) (/ 4
         2))))) (+ (+ (/ (if (or true false) (/ 1
     4) (/ 4 5)) (/ (if true 5 6) (color 3)))
     (/ (+ (color 5) (color 3)) (color (+ 4 5))))
     (+ (/ (color (color 4)) (if (or true false)
         (if false 4 3) (+ 6 4))) (+ (if (and true
         true) (/ 6 1) (color 4)) (/ (/ 4 5) (if false
         1 3))))))) (+ (color (if (or (pop (if (=
     5 3) (color 1) (if true 3 4))) (pop (/ (/
     3 1) (color 2)))) (if (= (+ (/ 3 2) (/ 2
     1)) (/ (/ 4 2) (+ 5 3))) (+ (+ (/ 4 1) (color
     1)) (if (and false true) (if true 1 4) (color
     6))) (color (color (if false 6 3)))) (if
     (and (not (pop 6)) (or (or true true) (not
         true))) (color (if (pop 6) (if true 6 1)
     (+ 3 3))) (color (color (color 4)))))) (color
     (if (pop (color (/ (color 4) (/ 3 2)))) (+
         (color (+ (if false 2 4) (/ 4 5))) (/ (+
         (color 6) (if false 6 5)) (if (pop 6) (+
         2 5) (color 4)))) (if (= (/ (color 5) (/
         3 6)) (color (+ 1 4))) (color (color (+ 5
         3))) (/ (/ (color 1) (if false 5 5)) (/ (/
         4 1) (if false 6 6))))))))) (+ (+ (if (pop
     (/ (color (/ (if (= 3 6) (if false 6 5) (/
         6 2)) (color (/ 3 1)))) (color (/ (color
         (+ 3 1)) (color (if false 5 5)))))) (if (=
     (+ (color (+ (/ 2 5) (if true 2 5))) (+ (color
         (if false 1 4)) (color (/ 6 4)))) (color
     (+ (color (if false 6 6)) (color (if true
         3 6))))) (+ (/ (+ (if (pop 3) (/ 5 1) (+
     1 1)) (/ (if true 6 2) (/ 1 3))) (+ (color
     (color 1)) (color (+ 4 1)))) (+ (/ (+ (+
     4 4) (if true 2 4)) (+ (/ 3 2) (/ 1 4)))
     (+ (/ (/ 6 1) (/ 5 5)) (color (if false 1
         3))))) (if (or (= (+ (/ 4 1) (/ 4 2)) (/
     (if true 4 3) (+ 1 1))) (and (not (= 4 3))
     (or (= 4 3) (not false)))) (+ (color (/ (+
     4 4) (if false 2 6))) (/ (if (and true false)
     (if false 1 6) (/ 1 5)) (+ (color 2) (color
     4)))) (+ (if (not (pop 6)) (/ (color 1) (color
     5)) (/ (+ 3 5) (color 4))) (color (if (pop
     1) (if false 1 3) (+ 6 5)))))) (+ (/ (color
     (/ (if (or false true) (/ 5 2) (/ 6 1)) (color
         (/ 3 4)))) (color (color (/ (if true 3 1)
     (color 1))))) (if (not (pop (/ (/ 3 4) (/
     2 4)))) (/ (color (+ (/ 2 6) (color 6)))
     (+ (color (color 6)) (+ (/ 5 5) (color 3))))
     (if (= (/ (color 5) (color 6)) (if (pop 6)
         (color 5) (+ 4 2))) (+ (/ (color 5) (if true
         6 3)) (if (not true) (color 1) (if true 5
         4))) (color (if (or true false) (+ 4 2) (color
         4))))))) (/ (if (= (/ (+ (if (or true true)
     (color 2) (color 6)) (if (or true false)
     (/ 3 1) (if false 3 6))) (if (or (and false
     false) (or false false)) (+ (color 5) (color
     4)) (/ (color 4) (color 1)))) (+ (if (pop
     (color 5)) (/ (+ 1 2) (color 4)) (+ (+ 4
     3) (if false 5 6))) (color (color (/ 6 1)))))
     (+ (/ (+ (if (and true true) (color 6) (color
         6)) (+ (color 3) (color 5))) (if (and (not
         true) (or false false)) (+ (+ 5 2) (if true
         2 5)) (/ (if true 6 6) (+ 5 3)))) (if (pop
         (/ (+ 6 3) (color 2))) (/ (if (not true)
         (/ 3 4) (color 6)) (if (= 1 4) (+ 2 1) (color
         5))) (if (= (/ 3 1) (if true 4 4)) (if (pop
         1) (+ 2 4) (color 5)) (+ (/ 1 5) (+ 3 2)))))
     (/ (if (or (pop (/ 6 5)) (not (not false)))
         (color (if (pop 4) (/ 6 5) (+ 1 2))) (color
         (+ (if true 6 2) (/ 4 2)))) (if (or (and
         (and true true) (pop 3)) (= (if true 6 4)
         (/ 3 3))) (/ (+ (/ 4 1) (if false 5 4)) (if
         (not false) (color 4) (+ 1 6))) (color (/
         (/ 3 2) (/ 6 3)))))) (/ (/ (if (and (and
     (= 1 2) (not true)) (or (= 4 1) (pop 5)))
     (+ (color (if true 6 5)) (/ (/ 2 1) (/ 6
         3))) (/ (/ (color 1) (+ 1 2)) (if (= 2 4)
     (+ 5 1) (/ 5 2)))) (if (= (if (not false)
     (if true 4 3) (color 4)) (+ (if false 2 4)
     (color 2))) (/ (/ (color 1) (color 1)) (+
     (/ 1 4) (+ 1 6))) (color (if (or true true)
     (/ 3 1) (/ 6 6))))) (if (not (not (or (=
     4 3) (= 1 3)))) (+ (color (color (color 6)))
     (/ (+ (color 4) (/ 2 2)) (+ (/ 1 3) (+ 6
         2)))) (color (if (and (not true) (pop 1))
     (color (if false 1 2)) (+ (/ 5 3) (/ 6 5))))))))
     (color (+ (/ (+ (+ (/ (color (if true 6 3))
         (+ (+ 6 5) (/ 6 4))) (if (pop (if true 5
         4)) (color (color 3)) (if (or false true)
         (+ 1 3) (/ 4 4)))) (if (and (or (and false
         false) (or true true)) (and (= 4 4) (and
         false true))) (+ (if (pop 5) (if false 3
         3) (+ 1 5)) (+ (color 2) (/ 1 4))) (/ (if
         (pop 2) (+ 2 5) (if true 2 4)) (/ (if true
         3 2) (+ 1 1))))) (/ (/ (if (or (or false
         true) (pop 3)) (color (/ 3 5)) (if (and true
         true) (color 1) (if true 4 6))) (/ (if (not
         false) (+ 3 6) (+ 5 6)) (+ (+ 6 3) (/ 2 2))))
         (+ (color (/ (+ 4 5) (color 6))) (color (if
             (= 3 3) (/ 3 2) (color 2)))))) (+ (+ (color
         (/ (+ (/ 2 4) (/ 2 6)) (if (or false true)
             (+ 3 5) (/ 1 5)))) (+ (/ (+ (if true 3 1)
         (if false 4 3)) (/ (if false 5 4) (if false
         4 5))) (+ (/ (+ 1 2) (color 3)) (if (not
         true) (/ 3 1) (+ 6 6))))) (if (not (and (=
         (color 2) (if true 1 2)) (= (/ 5 2) (/ 1
         3)))) (+ (/ (/ (if false 2 2) (if true 2
         1)) (/ (if false 4 4) (color 2))) (if (pop
         (color 4)) (+ (+ 2 5) (/ 3 1)) (if (or true
         false) (if false 1 6) (/ 5 1)))) (color (if
         (or (= 1 1) (not false)) (color (if false
         3 6)) (/ (/ 1 6) (if true 4 5))))))))))



Generation 22
================

Subpopulation 0
----------------
Avg Nodes: 526.549
Nodes/tree: [526.549]
Avg Depth: 8.368
Depth/tree: [8.368]
Mean fitness raw: 6.135 adjusted: 0.14408688 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (color (color (if (pop (+ (if (or (not (and
     (and (pop 2) (not false)) (or (not false)
     (pop 1)))) (or (not (or (and false true)
     (or true true))) (pop (if (and false false)
     (+ 3 2) (+ 5 2))))) (/ (if (pop (+ (color
     5) (color 1))) (color (/ (+ 6 5) (if false
     4 1))) (/ (color (color 5)) (if (pop 6) (if
     false 1 5) (if false 4 2)))) (color (/ (+
     (if true 5 2) (if true 3 1)) (if (not false)
     (color 2) (color 3))))) (if (not (not (or
     (pop 5) (pop 3)))) (if (= (+ (if true 4 4)
     (color 3)) (+ (color 3) (/ 5 3))) (color
     (color (color 1))) (if (pop (if true 4 3))
     (+ (/ 1 5) (color 3)) (/ (color 5) (+ 2 1))))
     (/ (if (pop (/ 5 4)) (/ (+ 5 6) (if true
         5 2)) (color (color 2))) (+ (+ (+ 6 1) (+
         6 2)) (color (+ 4 4)))))) (color (/ (if (pop
     (+ (/ 3 4) (if true 3 3))) (+ (if (= 3 3)
     (+ 5 4) (+ 6 4)) (color (color 5))) (+ (+
     (+ 5 1) (if true 2 1)) (/ (+ 5 2) (color
     4)))) (+ (/ (color (color 3)) (color (/ 3
     1))) (/ (color (+ 5 3)) (/ (/ 4 2) (/ 6 3))))))))
     (if (not (and (pop (+ (color (color (/ 4
         4))) (/ (/ (/ 3 2) (if false 4 2)) (/ (color
         5) (/ 2 1))))) (= (+ (/ (color (color 6))
         (color (/ 6 2))) (color (/ (+ 5 4) (/ 2 4))))
         (/ (+ (/ (/ 3 5) (color 2)) (+ (+ 6 2) (/
             2 6))) (if (pop (+ 1 6)) (+ (+ 6 4) (/ 1
             4)) (color (+ 5 6))))))) (color (color (/
         (/ (if (and (or false true) (and false false))
             (color (if false 3 6)) (color (if true 6
             6))) (+ (+ (if false 3 4) (+ 5 1)) (color
             (if false 4 3)))) (/ (+ (/ (if false 1 6)
         (+ 3 5)) (if (pop 5) (+ 3 1) (if false 3
         2))) (if (or (= 4 3) (pop 5)) (/ (if false
         6 3) (/ 5 5)) (/ (if true 2 4) (color 3)))))))
         (if (or (pop (if (pop (+ (/ 4 6) (+ 3 6)))
             (+ (color (color 2)) (if (= 4 4) (color 1)
                 (/ 2 2))) (if (= (+ 1 5) (color 1)) (color
             (color 1)) (color (if false 4 3))))) (= (/
             (if (or (or true false) (and true false))
                 (/ (color 4) (/ 4 6)) (if (or true false)
                 (if true 6 3) (color 6))) (color (/ (color
             4) (color 3)))) (+ (+ (if (not false) (/
             6 3) (+ 1 5)) (+ (color 5) (+ 5 1))) (/ (if
             (and true true) (+ 2 5) (+ 1 1)) (+ (+ 4
             2) (color 3)))))) (+ (+ (if (pop (color (+
             6 2))) (+ (/ (/ 4 4) (+ 6 2)) (+ (if true
             4 6) (+ 5 4))) (color (+ (+ 5 2) (if true
             2 6)))) (if (= (if (= 4 5) (if true 1 2)
             (color 4)) (if (= 2 4) (color 3) (/ 4 6)))
             (+ (+ (/ 4 3) (if false 2 3)) (if (or true
                 false) (color 3) (color 2))) (+ (color (/
             2 3)) (/ (if false 3 1) (color 6))))) (color
             (/ (if (not (not true)) (+ (if true 3 1)
                 (+ 2 1)) (+ (if true 6 1) (/ 1 6))) (if (pop
                 (/ 4 6)) (if (or false false) (color 6) (if
                 false 1 1)) (+ (/ 5 3) (if false 4 6))))))
             (/ (+ (color (/ (/ (/ 5 4) (color 2)) (if
                 (pop 4) (+ 2 6) (/ 4 4)))) (+ (if (not (pop
                 6)) (if (or true true) (if true 6 2) (if
                 true 5 1)) (color (/ 3 5))) (if (pop (/ 4
                 3)) (if (not true) (color 5) (/ 2 2)) (+
                 (color 2) (+ 4 6))))) (if (and (= (color
                 (/ 1 5)) (+ (/ 1 3) (if false 3 6))) (= (+
                 (color 3) (/ 6 1)) (+ (+ 1 5) (color 5))))
                 (+ (/ (/ (if false 4 5) (if false 1 4)) (+
                     (+ 2 3) (+ 4 1))) (/ (if (pop 2) (color 4)
                     (color 2)) (color (if true 5 3)))) (color
                 (color (color (color 4)))))))) (/ (color
     (+ (/ (color (if (not (and false true)) (+
         (if true 6 3) (if false 4 2)) (if (pop 5)
         (+ 1 5) (color 2)))) (if (or (or (= 2 2)
         (or true false)) (or (and true true) (= 1
         1))) (/ (/ (+ 4 3) (/ 2 3)) (/ (if false
         2 1) (color 1))) (/ (if (or false false)
         (+ 6 2) (if true 4 6)) (+ (color 3) (/ 6
         1))))) (color (if (not (not (or true false)))
         (color (+ (+ 5 3) (+ 4 5))) (+ (+ (if true
         2 2) (+ 1 5)) (+ (/ 3 6) (color 6)))))))
     (if (= (if (or (or (not (or true true)) (not
         (and true true))) (not (and (and true false)
         (or true true)))) (/ (if (pop (color 1))
         (color (/ 3 4)) (/ (color 5) (+ 5 1))) (/
         (color (if false 1 5)) (if (= 5 3) (if false
         2 5) (+ 6 6)))) (if (and (pop (+ 1 3)) (and
         (pop 4) (and true false))) (if (= (color
         5) (/ 5 3)) (/ (color 1) (+ 6 1)) (if (=
         2 5) (+ 4 6) (+ 3 1))) (+ (+ (color 3) (+
         5 6)) (if (pop 3) (/ 1 3) (/ 3 5))))) (+
         (/ (if (or (not true) (or true true)) (if
             (not false) (/ 6 5) (if false 4 2)) (if (=
             4 4) (color 5) (if false 1 2))) (color (if
             (not false) (/ 6 6) (/ 4 2)))) (/ (+ (/ (color
         5) (color 3)) (+ (if true 5 6) (/ 1 1)))
         (+ (color (+ 5 3)) (+ (/ 5 2) (if false 3
             5)))))) (/ (/ (color (/ (if (not true) (/
         6 3) (+ 2 3)) (/ (color 6) (+ 2 3)))) (if
         (pop (if (and false false) (if false 4 3)
             (color 2))) (/ (color (color 2)) (color (+
         6 4))) (/ (/ (if false 2 4) (+ 1 3)) (color
         (if false 5 6))))) (color (/ (/ (color (/
         4 3)) (color (if false 3 1))) (/ (/ (+ 3
         4) (color 2)) (color (if true 6 3)))))) (/
         (/ (/ (+ (color (/ 5 4)) (if (and false true)
             (if true 1 6) (/ 2 5))) (+ (color (+ 3 4))
             (if (and true true) (/ 6 6) (color 1))))
             (if (= (if (or true false) (+ 1 6) (if true
                 1 5)) (+ (if true 1 6) (+ 1 6))) (color (if
                 (not false) (/ 2 3) (/ 5 2))) (color (/ (+
                 4 4) (+ 1 3))))) (if (and (or (or (or true
         false) (or false false)) (or (and true true)
         (pop 6))) (= (+ (color 2) (/ 1 3)) (color
         (+ 2 5)))) (+ (/ (color (color 2)) (/ (if
         true 1 5) (if false 6 2))) (/ (/ (/ 4 4)
         (+ 6 6)) (if (and true false) (if true 2
         1) (/ 3 5)))) (color (color (if (and false
         true) (/ 6 2) (/ 3 5)))))))))))



Generation 23
================

Subpopulation 0
----------------
Avg Nodes: 521.783
Nodes/tree: [521.783]
Avg Depth: 8.253
Depth/tree: [8.253]
Mean fitness raw: 8.626 adjusted: 0.12107085 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (pop (/ (+ (/ (+ (+ (if (and (= 2 5)
     (= 1 4)) (+ (if false 6 6) (color 3)) (/
     (if false 1 1) (if false 6 3))) (color (/
     (if false 3 5) (/ 4 4)))) (color (/ (color
     (+ 4 3)) (color (color 5))))) (if (= (+ (+
     (color 4) (color 3)) (+ (if false 2 1) (color
     5))) (color (/ (color 4) (color 3)))) (if
     (pop (if (and true false) (/ 1 5) (/ 4 2)))
     (+ (/ (+ 1 3) (/ 2 1)) (+ (color 6) (+ 5
         2))) (if (pop (/ 2 2)) (color (/ 2 3)) (/
     (if true 6 4) (/ 4 1)))) (+ (color (+ (/
     2 2) (+ 4 5))) (if (= (if true 1 3) (+ 3
     1)) (color (color 2)) (/ (if false 6 1) (/
     5 6)))))) (+ (/ (if (and (= (/ 2 6) (/ 1
     2)) (= (+ 5 1) (color 3))) (if (and (= 3
     6) (and true true)) (color (/ 1 4)) (+ (+
     4 4) (+ 6 1))) (+ (color (if true 2 2)) (/
     (/ 3 1) (/ 4 1)))) (color (/ (+ (color 3)
     (color 2)) (+ (+ 3 4) (if false 6 3)))))
     (+ (/ (if (= (/ 1 5) (/ 1 6)) (/ (if true
         3 6) (/ 6 2)) (if (pop 3) (if false 4 6)
         (color 3))) (+ (+ (/ 1 5) (+ 4 3)) (/ (if
         true 2 4) (/ 1 2)))) (if (or (not (= 6 5))
         (and (pop 2) (= 3 6))) (/ (color (if false
         4 1)) (color (+ 6 4))) (/ (/ (+ 5 3) (+ 6
         4)) (color (if true 1 1))))))) (/ (+ (/ (/
     (color (+ (/ 6 4) (color 5))) (/ (color (if
     false 6 2)) (if (pop 3) (if true 3 4) (+
     3 3)))) (if (pop (color (if true 5 5))) (/
     (/ (/ 5 3) (if true 2 1)) (+ (color 1) (color
     2))) (+ (+ (/ 3 3) (/ 4 3)) (+ (if true 1
     6) (+ 6 4))))) (/ (if (or (or (= 2 2) (not
     true)) (or (and false false) (= 4 2))) (/
     (/ (/ 5 3) (+ 2 6)) (color (color 4))) (/
     (/ (if false 6 5) (/ 3 4)) (color (if true
     3 3)))) (color (/ (if (= 1 3) (/ 5 3) (if
     true 4 4)) (+ (color 6) (/ 5 1)))))) (+ (+
     (+ (+ (color (if true 6 4)) (if (not true)
         (if false 4 1) (if false 1 3))) (color (/
         (/ 1 1) (+ 6 1)))) (if (not (= (+ 5 2) (+
     4 5))) (color (if (not true) (+ 2 6) (color
     5))) (/ (if (or false false) (/ 2 5) (+ 1
     4)) (+ (color 6) (/ 1 5))))) (color (if (=
     (color (/ 4 1)) (if (or true false) (/ 3
     1) (+ 3 5))) (/ (/ (if false 1 6) (/ 1 1))
     (+ (+ 1 2) (+ 4 2))) (color (/ (/ 5 2) (+
     5 6))))))))) (color (+ (if (pop (if (or (pop
     (/ (color 3) (/ 6 1))) (not (not (and false
     false)))) (/ (/ (+ (if false 1 6) (/ 4 1))
     (if (or false true) (/ 1 6) (color 2))) (/
     (+ (/ 6 2) (if true 5 1)) (color (+ 1 1))))
     (/ (+ (+ (/ 5 3) (if false 1 6)) (if (= 1
         1) (if false 4 1) (/ 2 3))) (color (if (or
         false false) (+ 2 5) (/ 5 5)))))) (/ (+ (color
     (color (/ (/ 2 2) (+ 1 4)))) (+ (+ (/ (/
     1 6) (+ 1 2)) (/ (/ 5 1) (if true 3 5)))
     (+ (if (not false) (color 1) (color 5)) (color
         (color 5))))) (/ (color (+ (+ (/ 4 6) (/
     5 3)) (+ (/ 5 1) (+ 2 2)))) (color (/ (/
     (color 1) (color 3)) (/ (if false 4 5) (color
     2)))))) (if (pop (color (/ (/ (+ 2 5) (+
     5 3)) (if (pop 1) (if false 6 5) (color 1)))))
     (/ (color (/ (color (+ 6 3)) (if (or false
         false) (+ 5 5) (if true 4 2)))) (if (pop
         (color (if false 6 4))) (color (color (color
         4))) (if (not (or true true)) (+ (if true
         2 6) (/ 2 3)) (if (pop 4) (color 4) (/ 4
         2))))) (+ (+ (/ (if (or true false) (/ 1
     4) (/ 4 5)) (/ (if true 5 6) (color 3)))
     (/ (+ (color 5) (color 3)) (color (+ 4 5))))
     (+ (/ (color (color 4)) (if (or true false)
         (if false 4 3) (+ 6 4))) (+ (if (and true
         true) (/ 6 1) (color 4)) (/ (/ 4 5) (if false
         1 3))))))) (+ (color (if (or (pop (if (=
     5 3) (color 1) (if true 3 4))) (pop (/ (/
     3 1) (color 2)))) (if (= (+ (/ 3 2) (/ 2
     1)) (/ (/ 4 2) (+ 5 3))) (+ (+ (/ 4 1) (color
     1)) (if (and false true) (if true 1 4) (color
     6))) (color (color (if false 6 3)))) (if
     (and (not (pop 6)) (or (or true true) (not
         true))) (color (if (pop 6) (if true 6 1)
     (+ 3 3))) (color (color (color 4)))))) (color
     (if (pop (color (/ (color 4) (/ 3 2)))) (+
         (color (+ (if false 2 4) (/ 4 5))) (/ (+
         (color 6) (if false 6 5)) (if (pop 6) (+
         2 5) (color 4)))) (if (= (/ (color 5) (/
         3 6)) (color (+ 1 4))) (color (color (+ 5
         3))) (/ (/ (color 1) (if false 5 5)) (/ (/
         4 1) (if false 6 6))))))))) (+ (+ (if (pop
     (/ (color (/ (if (= 3 6) (if false 6 5) (/
         6 2)) (color (/ 3 1)))) (color (/ (color
         (+ 3 1)) (color (if false 5 5)))))) (if (=
     (+ (color (+ (/ 2 5) (if true 2 5))) (+ (color
         (if false 1 4)) (color (/ 6 4)))) (color
     (+ (color (if false 6 6)) (color (if true
         3 6))))) (+ (/ (+ (if (pop 3) (/ 5 1) (+
     1 1)) (/ (if true 6 2) (/ 1 3))) (+ (color
     (color 1)) (color (+ 4 1)))) (+ (/ (+ (+
     4 4) (if true 2 4)) (+ (/ 3 2) (/ 1 4)))
     (+ (/ (/ 6 1) (/ 5 5)) (color (if false 1
         3))))) (if (or (= (+ (/ 4 1) (/ 4 2)) (/
     (if true 4 3) (+ 1 1))) (and (not (= 4 3))
     (or (= 4 3) (not false)))) (+ (color (/ (+
     4 4) (if false 2 6))) (/ (if (and true false)
     (if false 1 6) (/ 1 5)) (+ (color 2) (color
     4)))) (+ (if (not (pop 6)) (/ (color 1) (color
     5)) (/ (+ 3 5) (color 4))) (color (if (pop
     1) (if false 1 3) (+ 6 5)))))) (+ (/ (color
     (/ (if (or false true) (/ 5 2) (/ 6 1)) (color
         (/ 3 4)))) (color (color (/ (if true 3 1)
     (color 1))))) (if (not (pop (/ (/ 3 4) (/
     2 4)))) (/ (color (+ (/ 2 6) (color 6)))
     (+ (color (color 6)) (+ (/ 5 5) (color 3))))
     (if (= (/ (color 5) (color 6)) (if (pop 6)
         (color 5) (+ 4 2))) (+ (/ (color 5) (if true
         6 3)) (if (not true) (color 1) (if true 5
         4))) (color (if (or true false) (+ 4 2) (color
         4))))))) (/ (if (= (/ (+ (if (or true true)
     (color 2) (color 6)) (if (or true false)
     (/ 3 1) (if false 3 6))) (if (or (and false
     false) (or false false)) (+ (color 5) (color
     4)) (/ (color 4) (color 1)))) (+ (if (pop
     (color 5)) (/ (+ 1 2) (color 4)) (+ (+ 4
     3) (if false 5 6))) (color (color (/ 6 1)))))
     (+ (/ (+ (if (and true true) (color 6) (color
         6)) (+ (color 3) (color 5))) (if (and (not
         true) (or false false)) (+ (+ 5 2) (if true
         2 5)) (/ (if true 6 6) (+ 5 3)))) (if (pop
         (/ (+ 6 3) (color 2))) (/ (if (not true)
         (/ 3 4) (color 6)) (if (= 1 4) (+ 2 1) (color
         5))) (if (= (/ 3 1) (if true 4 4)) (if (pop
         1) (+ 2 4) (color 5)) (+ (/ 1 5) (+ 3 2)))))
     (/ (if (or (pop (/ 6 5)) (not (not false)))
         (color (if (pop 4) (/ 6 5) (+ 1 2))) (color
         (+ (if true 6 2) (/ 4 2)))) (if (or (and
         (and true true) (pop 3)) (= (if true 6 4)
         (/ 3 3))) (/ (+ (/ 4 1) (if false 5 4)) (if
         (not false) (color 4) (+ 1 6))) (color (/
         (/ 3 2) (/ 6 3)))))) (/ (/ (if (and (and
     (= 1 2) (not true)) (or (= 4 1) (pop 5)))
     (+ (color (if true 6 5)) (/ (/ 2 1) (/ 6
         3))) (/ (/ (color 1) (+ 1 2)) (if (= 2 4)
     (+ 5 1) (/ 5 2)))) (if (= (if (not false)
     (if true 4 3) (color 4)) (+ (if false 2 4)
     (color 2))) (/ (/ (color 1) (color 1)) (+
     (/ 1 4) (+ 1 6))) (color (if (or true true)
     (/ 3 1) (/ 6 6))))) (if (not (not (or (=
     4 3) (= 1 3)))) (+ (color (color (color 6)))
     (/ (+ (color 4) (/ 2 2)) (+ (/ 1 3) (+ 6
         2)))) (color (if (and (not true) (pop 1))
     (color (if false 1 2)) (+ (/ 5 3) (/ 6 5))))))))
     (color (+ (/ (+ (+ (/ (color (if true 6 3))
         (+ (+ 6 5) (/ 6 4))) (if (pop (if true 5
         4)) (color (color 3)) (if (or false true)
         (+ 1 3) (/ 4 4)))) (if (and (or (and false
         false) (or true true)) (and (= 4 4) (and
         false true))) (+ (if (pop 5) (if false 3
         3) (+ 1 5)) (+ (color 2) (/ 1 4))) (/ (if
         (pop 2) (+ 2 5) (if true 2 4)) (/ (if true
         3 2) (+ 1 1))))) (/ (/ (if (or (or false
         true) (pop 3)) (color (/ 3 5)) (if (and true
         true) (color 1) (if true 4 6))) (/ (if (not
         false) (+ 3 6) (+ 5 6)) (+ (+ 6 3) (/ 2 2))))
         (+ (color (/ (+ 4 5) (color 6))) (color (if
             (= 3 3) (/ 3 2) (color 2)))))) (+ (+ (color
         (/ (+ (/ 2 4) (/ 2 6)) (if (or false true)
             (+ 3 5) (/ 1 5)))) (+ (/ (+ (if true 3 1)
         (if false 4 3)) (/ (if false 5 4) (if false
         4 5))) (+ (/ (+ 1 2) (color 3)) (if (not
         true) (/ 3 1) (+ 6 6))))) (if (not (and (=
         (color 2) (if true 1 2)) (= (/ 5 2) (/ 1
         3)))) (+ (/ (/ (if false 2 2) (if true 2
         1)) (/ (if false 4 4) (color 2))) (if (pop
         (color 4)) (+ (+ 2 5) (/ 3 1)) (if (or true
         false) (if false 1 6) (/ 5 1)))) (color (if
         (or (= 1 1) (not false)) (color (if false
         3 6)) (/ (/ 1 6) (if true 4 5))))))))))



Generation 24
================

Subpopulation 0
----------------
Avg Nodes: 549.633
Nodes/tree: [549.633]
Avg Depth: 8.385
Depth/tree: [8.385]
Mean fitness raw: 10.453 adjusted: 0.11159244 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (= (color (+ 2 4)) (if (= 5 2) (if false
     2 1) (/ 2 3))) (not (or (or false true) (pop
     6))))



Generation 25
================

Subpopulation 0
----------------
Avg Nodes: 528.079
Nodes/tree: [528.079]
Avg Depth: 8.135
Depth/tree: [8.135]
Mean fitness raw: 8.456 adjusted: 0.12284818 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (pop (/ (+ (/ (+ (+ (if (and (= 2 5)
     (= 1 4)) (+ (if false 6 6) (color 3)) (/
     (if false 1 1) (if false 6 3))) (color (/
     (if false 3 5) (/ 4 4)))) (color (/ (color
     (+ 4 3)) (color (color 5))))) (if (= (+ (+
     (color 4) (color 3)) (+ (if false 2 1) (color
     5))) (color (/ (color 4) (color 3)))) (if
     (pop (if (and true false) (/ 1 5) (/ 4 2)))
     (+ (/ (+ 1 3) (/ 2 1)) (+ (color 6) (+ 5
         2))) (if (pop (/ 2 2)) (color (/ 2 3)) (/
     (if true 6 4) (/ 4 1)))) (+ (color (+ (/
     2 2) (+ 4 5))) (if (= (if true 1 3) (+ 3
     1)) (color (color 2)) (/ (if false 6 1) (/
     5 6)))))) (+ (/ (if (and (= (/ 2 6) (/ 1
     2)) (= (+ 5 1) (color 3))) (if (and (= 3
     6) (and true true)) (color (/ 1 4)) (+ (+
     4 4) (+ 6 1))) (+ (color (if true 2 2)) (/
     (/ 3 1) (/ 4 1)))) (color (/ (+ (color 3)
     (color 2)) (+ (+ 3 4) (if false 6 3)))))
     (+ (/ (if (= (/ 1 5) (/ 1 6)) (/ (if true
         3 6) (/ 6 2)) (if (pop 3) (if false 4 6)
         (color 3))) (+ (+ (/ 1 5) (+ 4 3)) (/ (if
         true 2 4) (/ 1 2)))) (if (or (not (= 6 5))
         (and (pop 2) (= 3 6))) (/ (color (if false
         4 1)) (color (+ 6 4))) (/ (/ (+ 5 3) (+ 6
         4)) (color (if true 1 1))))))) (/ (+ (/ (/
     (color (+ (/ 6 4) (color 5))) (/ (color (if
     false 6 2)) (if (pop 3) (if true 3 4) (+
     3 3)))) (if (pop (color (if true 5 5))) (/
     (/ (/ 5 3) (if true 2 1)) (+ (color 1) (color
     2))) (+ (+ (/ 3 3) (/ 4 3)) (+ (if true 1
     6) (+ 6 4))))) (/ (if (or (or (= 2 2) (not
     true)) (or (and false false) (= 4 2))) (/
     (/ (/ 5 3) (+ 2 6)) (color (color 4))) (/
     (/ (if false 6 5) (/ 3 4)) (color (if true
     3 3)))) (color (/ (if (= 1 3) (/ 5 3) (if
     true 4 4)) (+ (color 6) (/ 5 1)))))) (+ (+
     (+ (+ (color (if true 6 4)) (if (not true)
         (if false 4 1) (if false 1 3))) (color (/
         (/ 1 1) (+ 6 1)))) (if (not (= (+ 5 2) (+
     4 5))) (color (if (not true) (+ 2 6) (color
     5))) (/ (if (or false false) (/ 2 5) (+ 1
     4)) (+ (color 6) (/ 1 5))))) (color (if (=
     (color (/ 4 1)) (if (or true false) (/ 3
     1) (+ 3 5))) (/ (/ (if false 1 6) (/ 1 1))
     (+ (+ 1 2) (+ 4 2))) (color (/ (/ 5 2) (+
     5 6))))))))) (color (+ (if (pop (if (or (pop
     (/ (color 3) (/ 6 1))) (not (not (and false
     false)))) (/ (/ (+ (if false 1 6) (/ 4 1))
     (if (or false true) (/ 1 6) (color 2))) (/
     (+ (/ 6 2) (if true 5 1)) (color (+ 1 1))))
     (/ (+ (+ (/ 5 3) (if false 1 6)) (if (= 1
         1) (if false 4 1) (/ 2 3))) (color (if (or
         false false) (+ 2 5) (/ 5 5)))))) (/ (+ (color
     (color (/ (/ 2 2) (+ 1 4)))) (+ (+ (/ (/
     1 6) (+ 1 2)) (/ (/ 5 1) (if true 3 5)))
     (+ (if (not false) (color 1) (color 5)) (color
         (color 5))))) (/ (color (+ (+ (/ 4 6) (/
     5 3)) (+ (/ 5 1) (+ 2 2)))) (color (/ (/
     (color 1) (color 3)) (/ (if false 4 5) (color
     2)))))) (if (pop (color (/ (/ (+ 2 5) (+
     5 3)) (if (pop 1) (if false 6 5) (color 1)))))
     (/ (color (/ (color (+ 6 3)) (if (or false
         false) (+ 5 5) (if true 4 2)))) (if (pop
         (color (if false 6 4))) (color (color (color
         4))) (if (not (or true true)) (+ (if true
         2 6) (/ 2 3)) (if (pop 4) (color 4) (/ 4
         2))))) (+ (+ (/ (if (or true false) (/ 1
     4) (/ 4 5)) (/ (if true 5 6) (color 3)))
     (/ (+ (color 5) (color 3)) (color (+ 4 5))))
     (+ (/ (color (color 4)) (if (or true false)
         (if false 4 3) (+ 6 4))) (+ (if (and true
         true) (/ 6 1) (color 4)) (/ (/ 4 5) (if false
         1 3))))))) (+ (color (if (or (pop (if (=
     5 3) (color 1) (if true 3 4))) (pop (/ (/
     3 1) (color 2)))) (if (= (+ (/ 3 2) (/ 2
     1)) (/ (/ 4 2) (+ 5 3))) (+ (+ (/ 4 1) (color
     1)) (if (and false true) (if true 1 4) (color
     6))) (color (color (if false 6 3)))) (if
     (and (not (pop 6)) (or (or true true) (not
         true))) (color (if (pop 6) (if true 6 1)
     (+ 3 3))) (color (color (color 4)))))) (color
     (if (pop (color (/ (color 4) (/ 3 2)))) (+
         (color (+ (if false 2 4) (/ 4 5))) (/ (+
         (color 6) (if false 6 5)) (if (pop 6) (+
         2 5) (color 4)))) (if (= (/ (color 5) (/
         3 6)) (color (+ 1 4))) (color (color (+ 5
         3))) (/ (/ (color 1) (if false 5 5)) (/ (/
         4 1) (if false 6 6))))))))) (+ (+ (if (pop
     (/ (color (/ (if (= 3 6) (if false 6 5) (/
         6 2)) (color (/ 3 1)))) (color (/ (color
         (+ 3 1)) (color (if false 5 5)))))) (if (=
     (+ (color (+ (/ 2 5) (if true 2 5))) (+ (color
         (if false 1 4)) (color (/ 6 4)))) (color
     (+ (color (if false 6 6)) (color (if true
         3 6))))) (+ (/ (+ (if (pop 3) (/ 5 1) (+
     1 1)) (/ (if true 6 2) (/ 1 3))) (+ (color
     (color 1)) (color (+ 4 1)))) (+ (/ (+ (+
     4 4) (if true 2 4)) (+ (/ 3 2) (/ 1 4)))
     (+ (/ (/ 6 1) (/ 5 5)) (color (if false 1
         3))))) (if (or (= (+ (/ 4 1) (/ 4 2)) (/
     (if true 4 3) (+ 1 1))) (and (not (= 4 3))
     (or (= 4 3) (not false)))) (+ (color (/ (+
     4 4) (if false 2 6))) (/ (if (and true false)
     (if false 1 6) (/ 1 5)) (+ (color 2) (color
     4)))) (+ (if (not (pop 6)) (/ (color 1) (color
     5)) (/ (+ 3 5) (color 4))) (color (if (pop
     1) (if false 1 3) (+ 6 5)))))) (+ (/ (color
     (/ (if (or false true) (/ 5 2) (/ 6 1)) (color
         (/ 3 4)))) (color (color (/ (if true 3 1)
     (color 1))))) (if (not (pop (/ (/ 3 4) (/
     2 4)))) (/ (color (+ (/ 2 6) (color 6)))
     (+ (color (color 6)) (+ (/ 5 5) (color 3))))
     (if (= (/ (color 5) (color 6)) (if (pop 6)
         (color 5) (+ 4 2))) (+ (/ (color 5) (if true
         6 3)) (if (not true) (color 1) (if true 5
         4))) (color (if (or true false) (+ 4 2) (color
         4))))))) (/ (if (= (/ (+ (if (or true true)
     (color 2) (color 6)) (if (or true false)
     (/ 3 1) (if false 3 6))) (if (or (and false
     false) (or false false)) (+ (color 5) (color
     4)) (/ (color 4) (color 1)))) (+ (if (pop
     (color 5)) (/ (+ 1 2) (color 4)) (+ (+ 4
     3) (if false 5 6))) (color (color (/ 6 1)))))
     (+ (/ (+ (if (and true true) (color 6) (color
         6)) (+ (color 3) (color 5))) (if (and (not
         true) (or false false)) (+ (+ 5 2) (if true
         2 5)) (/ (if true 6 6) (+ 5 3)))) (if (pop
         (/ (+ 6 3) (color 2))) (/ (if (not true)
         (/ 3 4) (color 6)) (if (= 1 4) (+ 2 1) (color
         5))) (if (= (/ 3 1) (if true 4 4)) (if (pop
         1) (+ 2 4) (color 5)) (+ (/ 1 5) (+ 3 2)))))
     (/ (if (or (pop (/ 6 5)) (not (not false)))
         (color (if (pop 4) (/ 6 5) (+ 1 2))) (color
         (+ (if true 6 2) (/ 4 2)))) (if (or (and
         (and true true) (pop 3)) (= (if true 6 4)
         (/ 3 3))) (/ (+ (/ 4 1) (if false 5 4)) (if
         (not false) (color 4) (+ 1 6))) (color (/
         (/ 3 2) (/ 6 3)))))) (/ (/ (if (and (and
     (= 1 2) (not true)) (or (= 4 1) (pop 5)))
     (+ (color (if true 6 5)) (/ (/ 2 1) (/ 6
         3))) (/ (/ (color 1) (+ 1 2)) (if (= 2 4)
     (+ 5 1) (/ 5 2)))) (if (= (if (not false)
     (if true 4 3) (color 4)) (+ (if false 2 4)
     (color 2))) (/ (/ (color 1) (color 1)) (+
     (/ 1 4) (+ 1 6))) (color (if (or true true)
     (/ 3 1) (/ 6 6))))) (if (not (not (or (=
     4 3) (= 1 3)))) (+ (color (color (color 6)))
     (/ (+ (color 4) (/ 2 2)) (+ (/ 1 3) (+ 6
         2)))) (color (if (and (not true) (pop 1))
     (color (if false 1 2)) (+ (/ 5 3) (/ 6 5))))))))
     (color (+ (/ (+ (+ (/ (color (if true 6 3))
         (+ (+ 6 5) (/ 6 4))) (if (pop (if true 5
         4)) (color (color 3)) (if (or false true)
         (+ 1 3) (/ 4 4)))) (if (and (or (and false
         false) (or true true)) (and (= 4 4) (and
         false true))) (+ (if (pop 5) (if false 3
         3) (+ 1 5)) (+ (color 2) (/ 1 4))) (/ (if
         (pop 2) (+ 2 5) (if true 2 4)) (/ (if true
         3 2) (+ 1 1))))) (/ (/ (if (or (or false
         true) (pop 3)) (color (/ 3 5)) (if (and true
         true) (color 1) (if true 4 6))) (/ (if (not
         false) (+ 3 6) (+ 5 6)) (+ (+ 6 3) (/ 2 2))))
         (+ (color (/ (+ 4 5) (color 6))) (color (if
             (= 3 3) (/ 3 2) (color 2)))))) (+ (+ (color
         (/ (+ (/ 2 4) (/ 2 6)) (if (or false true)
             (+ 3 5) (/ 1 5)))) (+ (/ (+ (if true 3 1)
         (if false 4 3)) (/ (if false 5 4) (if false
         4 5))) (+ (/ (+ 1 2) (color 3)) (if (not
         true) (/ 3 1) (+ 6 6))))) (if (not (and (=
         (color 2) (if true 1 2)) (= (/ 5 2) (/ 1
         3)))) (+ (/ (/ (if false 2 2) (if true 2
         1)) (/ (if false 4 4) (color 2))) (if (pop
         (color 4)) (+ (+ 2 5) (/ 3 1)) (if (or true
         false) (if false 1 6) (/ 5 1)))) (color (if
         (or (= 1 1) (not false)) (color (if false
         3 6)) (/ (/ 1 6) (if true 4 5))))))))))



Generation 26
================

Subpopulation 0
----------------
Avg Nodes: 528.707
Nodes/tree: [528.707]
Avg Depth: 8.297
Depth/tree: [8.297]
Mean fitness raw: 11.796 adjusted: 0.10911666 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (and (= 1 2) (and false false)) (and
     (pop 3) (= 5 2)))



Generation 27
================

Subpopulation 0
----------------
Avg Nodes: 526.923
Nodes/tree: [526.923]
Avg Depth: 8.236
Depth/tree: [8.236]
Mean fitness raw: 8.69 adjusted: 0.12089683 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (+ (color 6) (if (and (and (pop (/ 3 5))
     (not (or true true))) (not (= (+ 1 4) (color
     6)))) (+ (+ 6 (if true (+ 6 6) (if false
     3 3))) 3) (color 5)))



Generation 28
================

Subpopulation 0
----------------
Avg Nodes: 541.077
Nodes/tree: [541.077]
Avg Depth: 8.28
Depth/tree: [8.28]
Mean fitness raw: 10.768 adjusted: 0.11376562 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (pop (/ 5 6)) (and (or true true) (and
     true false)))



Generation 29
================

Subpopulation 0
----------------
Avg Nodes: 535.889
Nodes/tree: [535.889]
Avg Depth: 8.282
Depth/tree: [8.282]
Mean fitness raw: 11.748 adjusted: 0.10697304 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 30
================

Subpopulation 0
----------------
Avg Nodes: 507.661
Nodes/tree: [507.661]
Avg Depth: 8.282
Depth/tree: [8.282]
Mean fitness raw: 9.036 adjusted: 0.117393 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 31
================

Subpopulation 0
----------------
Avg Nodes: 499.896
Nodes/tree: [499.896]
Avg Depth: 8.394
Depth/tree: [8.394]
Mean fitness raw: 12.406 adjusted: 0.105748296 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and false (pop (+ (+ (color 2) (if (not
     (or (and true false) (pop 4))) 2 (if (pop
     (if false 6 3)) 4 (color (color 4))))) 1)))



Generation 32
================

Subpopulation 0
----------------
Avg Nodes: 563.545
Nodes/tree: [563.545]
Avg Depth: 8.579
Depth/tree: [8.579]
Mean fitness raw: 12.709 adjusted: 0.10558265 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (and (= 1 2) (and false false)) (and
     (pop 3) (= 5 2)))



Generation 33
================

Subpopulation 0
----------------
Avg Nodes: 535.723
Nodes/tree: [535.723]
Avg Depth: 8.453
Depth/tree: [8.453]
Mean fitness raw: 12.424 adjusted: 0.10805597 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 34
================

Subpopulation 0
----------------
Avg Nodes: 536.817
Nodes/tree: [536.817]
Avg Depth: 8.502
Depth/tree: [8.502]
Mean fitness raw: 12.132 adjusted: 0.107054405 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (and (= 1 2) (and false false)) (and
     (pop 3) (= 5 2)))



Generation 35
================

Subpopulation 0
----------------
Avg Nodes: 571.274
Nodes/tree: [571.274]
Avg Depth: 8.611
Depth/tree: [8.611]
Mean fitness raw: 11.619 adjusted: 0.11087939 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (color (color (if (pop (+ (if (or (not (and
     (and (pop 2) (not false)) (or (not false)
     (pop 1)))) (or (not (or (and false true)
     (or true true))) (pop (if (and false false)
     (+ 3 2) (+ 5 2))))) (/ (if (pop (+ (color
     5) (color 1))) (color (/ (+ 6 5) (if false
     4 1))) (/ (color (color 5)) (if (pop 6) (if
     false 1 5) (if false 4 2)))) (color (/ (+
     (if true 5 2) (if true 3 1)) (if (not false)
     (color 2) (color 3))))) (if (not (not (or
     (pop 5) (pop 3)))) (if (= (+ (if true 4 4)
     (color 3)) (+ (color 3) (/ 5 3))) (color
     (color (color 1))) (if (pop (if true 4 3))
     (+ (/ 1 5) (color 3)) (/ (color 5) (+ 2 1))))
     (/ (if (pop (/ 5 4)) (/ (+ 5 6) (if true
         5 2)) (color (color 2))) (+ (+ (+ 6 1) (+
         6 2)) (color (+ 4 4)))))) (color (/ (if (pop
     (+ (/ 3 4) (if true 3 3))) (+ (if (= 3 3)
     (+ 5 4) (+ 6 4)) (color (color 5))) (+ (+
     (+ 5 1) (if true 2 1)) (/ (+ 5 2) (color
     4)))) (+ (/ (color (color 3)) (color (/ 3
     1))) (/ (color (+ 5 3)) (/ (/ 4 2) (/ 6 3))))))))
     (if (not (and (pop (+ (color (color (/ 4
         4))) (/ (/ (/ 3 2) (if false 4 2)) (/ (color
         5) (/ 2 1))))) (= (+ (/ (color (color 6))
         (color (/ 6 2))) (color (/ (+ 5 4) (/ 2 4))))
         (/ (+ (/ (/ 3 5) (color 2)) (+ (+ 6 2) (/
             2 6))) (if (pop (+ 1 6)) (+ (+ 6 4) (/ 1
             4)) (color (+ 5 6))))))) (color (color (/
         (/ (if (and (or false true) (and false false))
             (color (if false 3 6)) (color (if true 6
             6))) (+ (+ (if false 3 4) (+ 5 1)) (color
             (if false 4 3)))) (/ (+ (/ (if false 1 6)
         (+ 3 5)) (if (pop 5) (+ 3 1) (if false 3
         2))) (if (or (= 4 3) (pop 5)) (/ (if false
         6 3) (/ 5 5)) (/ (if true 2 4) (color 3)))))))
         (if (or (pop (if (pop (+ (/ 4 6) (+ 3 6)))
             (+ (color (color 2)) (if (= 4 4) (color 1)
                 (/ 2 2))) (if (= (+ 1 5) (color 1)) (color
             (color 1)) (color (if false 4 3))))) (= (/
             (if (or (or true false) (and true false))
                 (/ (color 4) (/ 4 6)) (if (or true false)
                 (if true 6 3) (color 6))) (color (/ (color
             4) (color 3)))) (+ (+ (if (not false) (/
             6 3) (+ 1 5)) (+ (color 5) (+ 5 1))) (/ (if
             (and true true) (+ 2 5) (+ 1 1)) (+ (+ 4
             2) (color 3)))))) (+ (+ (if (pop (color (+
             6 2))) (+ (/ (/ 4 4) (+ 6 2)) (+ (if true
             4 6) (+ 5 4))) (color (+ (+ 5 2) (if true
             2 6)))) (if (= (if (= 4 5) (if true 1 2)
             (color 4)) (if (= 2 4) (color 3) (/ 4 6)))
             (+ (+ (/ 4 3) (if false 2 3)) (if (or true
                 false) (color 3) (color 2))) (+ (color (/
             2 3)) (/ (if false 3 1) (color 6))))) (color
             (/ (if (not (not true)) (+ (if true 3 1)
                 (+ 2 1)) (+ (if true 6 1) (/ 1 6))) (if (pop
                 (/ 4 6)) (if (or false false) (color 6) (if
                 false 1 1)) (+ (/ 5 3) (if false 4 6))))))
             (/ (+ (color (/ (/ (/ 5 4) (color 2)) (if
                 (pop 4) (+ 2 6) (/ 4 4)))) (+ (if (not (pop
                 6)) (if (or true true) (if true 6 2) (if
                 true 5 1)) (color (/ 3 5))) (if (pop (/ 4
                 3)) (if (not true) (color 5) (/ 2 2)) (+
                 (color 2) (+ 4 6))))) (if (and (= (color
                 (/ 1 5)) (+ (/ 1 3) (if false 3 6))) (= (+
                 (color 3) (/ 6 1)) (+ (+ 1 5) (color 5))))
                 (+ (/ (/ (if false 4 5) (if false 1 4)) (+
                     (+ 2 3) (+ 4 1))) (/ (if (pop 2) (color 4)
                     (color 2)) (color (if true 5 3)))) (color
                 (color (color (color 4)))))))) (/ (color
     (+ (/ (color (if (not (and false true)) (+
         (if true 6 3) (if false 4 2)) (if (pop 5)
         (+ 1 5) (color 2)))) (if (or (or (= 2 2)
         (or true false)) (or (and true true) (= 1
         1))) (/ (/ (+ 4 3) (/ 2 3)) (/ (if false
         2 1) (color 1))) (/ (if (or false false)
         (+ 6 2) (if true 4 6)) (+ (color 3) (/ 6
         1))))) (color (if (not (not (or true false)))
         (color (+ (+ 5 3) (+ 4 5))) (+ (+ (if true
         2 2) (+ 1 5)) (+ (/ 3 6) (color 6)))))))
     (if (= (if (or (or (not (or true true)) (not
         (and true true))) (not (and (and true false)
         (or true true)))) (/ (if (pop (color 1))
         (color (/ 3 4)) (/ (color 5) (+ 5 1))) (/
         (color (if false 1 5)) (if (= 5 3) (if false
         2 5) (+ 6 6)))) (if (and (pop (+ 1 3)) (and
         (pop 4) (and true false))) (if (= (color
         5) (/ 5 3)) (/ (color 1) (+ 6 1)) (if (=
         2 5) (+ 4 6) (+ 3 1))) (+ (+ (color 3) (+
         5 6)) (if (pop 3) (/ 1 3) (/ 3 5))))) (+
         (/ (if (or (not true) (or true true)) (if
             (not false) (/ 6 5) (if false 4 2)) (if (=
             4 4) (color 5) (if false 1 2))) (color (if
             (not false) (/ 6 6) (/ 4 2)))) (/ (+ (/ (color
         5) (color 3)) (+ (if true 5 6) (/ 1 1)))
         (+ (color (+ 5 3)) (+ (/ 5 2) (if false 3
             5)))))) (/ (/ (color (/ (if (not true) (/
         6 3) (+ 2 3)) (/ (color 6) (+ 2 3)))) (if
         (pop (if (and false false) (if false 4 3)
             (color 2))) (/ (color (color 2)) (color (+
         6 4))) (/ (/ (if false 2 4) (+ 1 3)) (color
         (if false 5 6))))) (color (/ (/ (color (/
         4 3)) (color (if false 3 1))) (/ (/ (+ 3
         4) (color 2)) (color (if true 6 3)))))) (/
         (/ (/ (+ (color (/ 5 4)) (if (and false true)
             (if true 1 6) (/ 2 5))) (+ (color (+ 3 4))
             (if (and true true) (/ 6 6) (color 1))))
             (if (= (if (or true false) (+ 1 6) (if true
                 1 5)) (+ (if true 1 6) (+ 1 6))) (color (if
                 (not false) (/ 2 3) (/ 5 2))) (color (/ (+
                 4 4) (+ 1 3))))) (if (and (or (or (or true
         false) (or false false)) (or (and true true)
         (pop 6))) (= (+ (color 2) (/ 1 3)) (color
         (+ 2 5)))) (+ (/ (color (color 2)) (/ (if
         true 1 5) (if false 6 2))) (/ (/ (/ 4 4)
         (+ 6 6)) (if (and true false) (if true 2
         1) (/ 3 5)))) (color (color (if (and false
         true) (/ 6 2) (/ 3 5)))))))))))



Generation 36
================

Subpopulation 0
----------------
Avg Nodes: 530.716
Nodes/tree: [530.716]
Avg Depth: 8.489
Depth/tree: [8.489]
Mean fitness raw: 10.843 adjusted: 0.11309617 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (pop (/ 5 6)) (and (or true true) (and
     true false)))



Generation 37
================

Subpopulation 0
----------------
Avg Nodes: 567.9
Nodes/tree: [567.9]
Avg Depth: 8.696
Depth/tree: [8.696]
Mean fitness raw: 12.725 adjusted: 0.10607741 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (and (not (not true)) (or (and true
     false) (= 2 2))) (= (+ (/ 4 5) (color 1))
     (color (+ 5 3))))



Generation 38
================

Subpopulation 0
----------------
Avg Nodes: 528.472
Nodes/tree: [528.472]
Avg Depth: 8.711
Depth/tree: [8.711]
Mean fitness raw: 11.857 adjusted: 0.10949763 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (not (not (or true true))) (pop (if (or
     false false) (if false 4 6) (/ 4 2))))



Generation 39
================

Subpopulation 0
----------------
Avg Nodes: 561.641
Nodes/tree: [561.641]
Avg Depth: 8.946
Depth/tree: [8.946]
Mean fitness raw: 12.019 adjusted: 0.10577773 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 40
================

Subpopulation 0
----------------
Avg Nodes: 529.606
Nodes/tree: [529.606]
Avg Depth: 8.746
Depth/tree: [8.746]
Mean fitness raw: 12.293 adjusted: 0.10574487 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (pop (/ (+ (/ (+ (+ (if (and (= 2 5)
     (= 1 4)) (+ (if false 6 6) (color 3)) (/
     (if false 1 1) (if false 6 3))) (color (/
     (if false 3 5) (/ 4 4)))) (color (/ (color
     (+ 4 3)) (color (color 5))))) (if (= (+ (+
     (color 4) (color 3)) (+ (if false 2 1) (color
     5))) (color (/ (color 4) (color 3)))) (if
     (pop (if (and true false) (/ 1 5) (/ 4 2)))
     (+ (/ (+ 1 3) (/ 2 1)) (+ (color 6) (+ 5
         2))) (if (pop (/ 2 2)) (color (/ 2 3)) (/
     (if true 6 4) (/ 4 1)))) (+ (color (+ (/
     2 2) (+ 4 5))) (if (= (if true 1 3) (+ 3
     1)) (color (color 2)) (/ (if false 6 1) (/
     5 6)))))) (+ (/ (if (and (= (/ 2 6) (/ 1
     2)) (= (+ 5 1) (color 3))) (if (and (= 3
     6) (and true true)) (color (/ 1 4)) (+ (+
     4 4) (+ 6 1))) (+ (color (if true 2 2)) (/
     (/ 3 1) (/ 4 1)))) (color (/ (+ (color 3)
     (color 2)) (+ (+ 3 4) (if false 6 3)))))
     (+ (/ (if (= (/ 1 5) (/ 1 6)) (/ (if true
         3 6) (/ 6 2)) (if (pop 3) (if false 4 6)
         (color 3))) (+ (+ (/ 1 5) (+ 4 3)) (/ (if
         true 2 4) (/ 1 2)))) (if (or (not (= 6 5))
         (and (pop 2) (= 3 6))) (/ (color (if false
         4 1)) (color (+ 6 4))) (/ (/ (+ 5 3) (+ 6
         4)) (color (if true 1 1))))))) (/ (+ (/ (/
     (color (+ (/ 6 4) (color 5))) (/ (color (if
     false 6 2)) (if (pop 3) (if true 3 4) (+
     3 3)))) (if (pop (color (if true 5 5))) (/
     (/ (/ 5 3) (if true 2 1)) (+ (color 1) (color
     2))) (+ (+ (/ 3 3) (/ 4 3)) (+ (if true 1
     6) (+ 6 4))))) (/ (if (or (or (= 2 2) (not
     true)) (or (and false false) (= 4 2))) (/
     (/ (/ 5 3) (+ 2 6)) (color (color 4))) (/
     (/ (if false 6 5) (/ 3 4)) (color (if true
     3 3)))) (color (/ (if (= 1 3) (/ 5 3) (if
     true 4 4)) (+ (color 6) (/ 5 1)))))) (+ (+
     (+ (+ (color (if true 6 4)) (if (not true)
         (if false 4 1) (if false 1 3))) (color (/
         (/ 1 1) (+ 6 1)))) (if (not (= (+ 5 2) (+
     4 5))) (color (if (not true) (+ 2 6) (color
     5))) (/ (if (or false false) (/ 2 5) (+ 1
     4)) (+ (color 6) (/ 1 5))))) (color (if (=
     (color (/ 4 1)) (if (or true false) (/ 3
     1) (+ 3 5))) (/ (/ (if false 1 6) (/ 1 1))
     (+ (+ 1 2) (+ 4 2))) (color (/ (/ 5 2) (+
     5 6))))))))) (color (+ (if (pop (if (or (pop
     (/ (color 3) (/ 6 1))) (not (not (and false
     false)))) (/ (/ (+ (if false 1 6) (/ 4 1))
     (if (or false true) (/ 1 6) (color 2))) (/
     (+ (/ 6 2) (if true 5 1)) (color (+ 1 1))))
     (/ (+ (+ (/ 5 3) (if false 1 6)) (if (= 1
         1) (if false 4 1) (/ 2 3))) (color (if (or
         false false) (+ 2 5) (/ 5 5)))))) (/ (+ (color
     (color (/ (/ 2 2) (+ 1 4)))) (+ (+ (/ (/
     1 6) (+ 1 2)) (/ (/ 5 1) (if true 3 5)))
     (+ (if (not false) (color 1) (color 5)) (color
         (color 5))))) (/ (color (+ (+ (/ 4 6) (/
     5 3)) (+ (/ 5 1) (+ 2 2)))) (color (/ (/
     (color 1) (color 3)) (/ (if false 4 5) (color
     2)))))) (if (pop (color (/ (/ (+ 2 5) (+
     5 3)) (if (pop 1) (if false 6 5) (color 1)))))
     (/ (color (/ (color (+ 6 3)) (if (or false
         false) (+ 5 5) (if true 4 2)))) (if (pop
         (color (if false 6 4))) (color (color (color
         4))) (if (not (or true true)) (+ (if true
         2 6) (/ 2 3)) (if (pop 4) (color 4) (/ 4
         2))))) (+ (+ (/ (if (or true false) (/ 1
     4) (/ 4 5)) (/ (if true 5 6) (color 3)))
     (/ (+ (color 5) (color 3)) (color (+ 4 5))))
     (+ (/ (color (color 4)) (if (or true false)
         (if false 4 3) (+ 6 4))) (+ (if (and true
         true) (/ 6 1) (color 4)) (/ (/ 4 5) (if false
         1 3))))))) (+ (color (if (or (pop (if (=
     5 3) (color 1) (if true 3 4))) (pop (/ (/
     3 1) (color 2)))) (if (= (+ (/ 3 2) (/ 2
     1)) (/ (/ 4 2) (+ 5 3))) (+ (+ (/ 4 1) (color
     1)) (if (and false true) (if true 1 4) (color
     6))) (color (color (if false 6 3)))) (if
     (and (not (pop 6)) (or (or true true) (not
         true))) (color (if (pop 6) (if true 6 1)
     (+ 3 3))) (color (color (color 4)))))) (color
     (if (pop (color (/ (color 4) (/ 3 2)))) (+
         (color (+ (if false 2 4) (/ 4 5))) (/ (+
         (color 6) (if false 6 5)) (if (pop 6) (+
         2 5) (color 4)))) (if (= (/ (color 5) (/
         3 6)) (color (+ 1 4))) (color (color (+ 5
         3))) (/ (/ (color 1) (if false 5 5)) (/ (/
         4 1) (if false 6 6))))))))) (+ (+ (if (pop
     (/ (color (/ (if (= 3 6) (if false 6 5) (/
         6 2)) (color (/ 3 1)))) (color (/ (color
         (+ 3 1)) (color (if false 5 5)))))) (if (=
     (+ (color (+ (/ 2 5) (if true 2 5))) (+ (color
         (if false 1 4)) (color (/ 6 4)))) (color
     (+ (color (if false 6 6)) (color (if true
         3 6))))) (+ (/ (+ (if (pop 3) (/ 5 1) (+
     1 1)) (/ (if true 6 2) (/ 1 3))) (+ (color
     (color 1)) (color (+ 4 1)))) (+ (/ (+ (+
     4 4) (if true 2 4)) (+ (/ 3 2) (/ 1 4)))
     (+ (/ (/ 6 1) (/ 5 5)) (color (if false 1
         3))))) (if (or (= (+ (/ 4 1) (/ 4 2)) (/
     (if true 4 3) (+ 1 1))) (and (not (= 4 3))
     (or (= 4 3) (not false)))) (+ (color (/ (+
     4 4) (if false 2 6))) (/ (if (and true false)
     (if false 1 6) (/ 1 5)) (+ (color 2) (color
     4)))) (+ (if (not (pop 6)) (/ (color 1) (color
     5)) (/ (+ 3 5) (color 4))) (color (if (pop
     1) (if false 1 3) (+ 6 5)))))) (+ (/ (color
     (/ (if (or false true) (/ 5 2) (/ 6 1)) (color
         (/ 3 4)))) (color (color (/ (if true 3 1)
     (color 1))))) (if (not (pop (/ (/ 3 4) (/
     2 4)))) (/ (color (+ (/ 2 6) (color 6)))
     (+ (color (color 6)) (+ (/ 5 5) (color 3))))
     (if (= (/ (color 5) (color 6)) (if (pop 6)
         (color 5) (+ 4 2))) (+ (/ (color 5) (if true
         6 3)) (if (not true) (color 1) (if true 5
         4))) (color (if (or true false) (+ 4 2) (color
         4))))))) (/ (if (= (/ (+ (if (or true true)
     (color 2) (color 6)) (if (or true false)
     (/ 3 1) (if false 3 6))) (if (or (and false
     false) (or false false)) (+ (color 5) (color
     4)) (/ (color 4) (color 1)))) (+ (if (pop
     (color 5)) (/ (+ 1 2) (color 4)) (+ (+ 4
     3) (if false 5 6))) (color (color (/ 6 1)))))
     (+ (/ (+ (if (and true true) (color 6) (color
         6)) (+ (color 3) (color 5))) (if (and (not
         true) (or false false)) (+ (+ 5 2) (if true
         2 5)) (/ (if true 6 6) (+ 5 3)))) (if (pop
         (/ (+ 6 3) (color 2))) (/ (if (not true)
         (/ 3 4) (color 6)) (if (= 1 4) (+ 2 1) (color
         5))) (if (= (/ 3 1) (if true 4 4)) (if (pop
         1) (+ 2 4) (color 5)) (+ (/ 1 5) (+ 3 2)))))
     (/ (if (or (pop (/ 6 5)) (not (not false)))
         (color (if (pop 4) (/ 6 5) (+ 1 2))) (color
         (+ (if true 6 2) (/ 4 2)))) (if (or (and
         (and true true) (pop 3)) (= (if true 6 4)
         (/ 3 3))) (/ (+ (/ 4 1) (if false 5 4)) (if
         (not false) (color 4) (+ 1 6))) (color (/
         (/ 3 2) (/ 6 3)))))) (/ (/ (if (and (and
     (= 1 2) (not true)) (or (= 4 1) (pop 5)))
     (+ (color (if true 6 5)) (/ (/ 2 1) (/ 6
         3))) (/ (/ (color 1) (+ 1 2)) (if (= 2 4)
     (+ 5 1) (/ 5 2)))) (if (= (if (not false)
     (if true 4 3) (color 4)) (+ (if false 2 4)
     (color 2))) (/ (/ (color 1) (color 1)) (+
     (/ 1 4) (+ 1 6))) (color (if (or true true)
     (/ 3 1) (/ 6 6))))) (if (not (not (or (=
     4 3) (= 1 3)))) (+ (color (color (color 6)))
     (/ (+ (color 4) (/ 2 2)) (+ (/ 1 3) (+ 6
         2)))) (color (if (and (not true) (pop 1))
     (color (if false 1 2)) (+ (/ 5 3) (/ 6 5))))))))
     (color (+ (/ (+ (+ (/ (color (if true 6 3))
         (+ (+ 6 5) (/ 6 4))) (if (pop (if true 5
         4)) (color (color 3)) (if (or false true)
         (+ 1 3) (/ 4 4)))) (if (and (or (and false
         false) (or true true)) (and (= 4 4) (and
         false true))) (+ (if (pop 5) (if false 3
         3) (+ 1 5)) (+ (color 2) (/ 1 4))) (/ (if
         (pop 2) (+ 2 5) (if true 2 4)) (/ (if true
         3 2) (+ 1 1))))) (/ (/ (if (or (or false
         true) (pop 3)) (color (/ 3 5)) (if (and true
         true) (color 1) (if true 4 6))) (/ (if (not
         false) (+ 3 6) (+ 5 6)) (+ (+ 6 3) (/ 2 2))))
         (+ (color (/ (+ 4 5) (color 6))) (color (if
             (= 3 3) (/ 3 2) (color 2)))))) (+ (+ (color
         (/ (+ (/ 2 4) (/ 2 6)) (if (or false true)
             (+ 3 5) (/ 1 5)))) (+ (/ (+ (if true 3 1)
         (if false 4 3)) (/ (if false 5 4) (if false
         4 5))) (+ (/ (+ 1 2) (color 3)) (if (not
         true) (/ 3 1) (+ 6 6))))) (if (not (and (=
         (color 2) (if true 1 2)) (= (/ 5 2) (/ 1
         3)))) (+ (/ (/ (if false 2 2) (if true 2
         1)) (/ (if false 4 4) (color 2))) (if (pop
         (color 4)) (+ (+ 2 5) (/ 3 1)) (if (or true
         false) (if false 1 6) (/ 5 1)))) (color (if
         (or (= 1 1) (not false)) (color (if false
         3 6)) (/ (/ 1 6) (if true 4 5))))))))))



Generation 41
================

Subpopulation 0
----------------
Avg Nodes: 479.956
Nodes/tree: [479.956]
Avg Depth: 8.556
Depth/tree: [8.556]
Mean fitness raw: 12.112 adjusted: 0.10824968 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (/ (+ (/ (if (or (and (and (or (and (or (=
     6 5) (= 5 3)) (= (if false 5 2) (if true
     5 5))) (= (/ (/ 2 1) (+ 3 3)) (+ (+ 1 1)
     (/ 6 2)))) (not (or (pop (+ 6 3)) (or (=
     1 2) (= 5 3))))) (or (and (pop (color (color
     2))) (or (not (or false false)) (pop (color
     4)))) (or (pop (if (and false false) (+ 4
     3) (/ 6 2))) (or (= (if true 4 3) (color
     3)) (not (and true true)))))) (or (pop (+
     (+ (/ (/ 5 4) (+ 3 1)) (/ (/ 3 3) (if false
         4 3))) (+ (+ (+ 4 1) (color 5)) (+ (+ 4 6)
     (+ 5 5))))) (= (+ (color (color (+ 1 2)))
     (if (pop (if false 4 1)) (if (= 3 1) (if
         true 5 5) (color 5)) (if (not false) (+ 2
         6) (if true 2 5)))) (color (+ (/ (if true
     3 1) (/ 3 2)) (color (/ 2 5))))))) (/ (if
     (and (= (if (and (= 3 3) (not true)) (/ (+
         2 2) (if true 5 5)) (if (and true false)
         (color 1) (color 5))) (+ (color (+ 1 2))
         (if (pop 6) (if false 1 2) (color 2)))) (not
         (and (or (pop 2) (pop 4)) (= (color 3) (+
             6 1))))) (color (/ (+ (/ (+ 3 2) (if false
     4 5)) (if (and false false) (+ 6 5) (/ 6
     6))) (/ (/ (if false 4 5) (color 4)) (/ (/
     1 5) (/ 1 2))))) (color (/ (if (or (not false)
     (= 6 1)) (+ (if true 1 3) (+ 2 4)) (color
     (color 3))) (+ (color (color 1)) (+ (color
     6) (+ 3 4)))))) (+ (color (if (or (pop (+
     3 6)) (= (color 1) (if false 1 3))) (/ (+
     (/ 6 5) (+ 5 3)) (/ (if true 5 2) (+ 2 2)))
     (+ (/ (/ 1 6) (+ 3 3)) (if (pop 1) (color
         1) (/ 5 2))))) (+ (+ (color (if (or true
     false) (/ 4 2) (+ 4 6))) (+ (+ (if true 3
     4) (if false 3 1)) (if (or true true) (/
     5 6) (color 3)))) (color (color (+ (color
     3) (/ 2 2))))))) (if (not (and (and (not
     (or (and false true) (or false true))) (and
     (not (pop 6)) (and (pop 2) (= 5 2)))) (and
     (= (+ (+ 1 2) (/ 4 2)) (/ (if false 6 6)
         (/ 6 2))) (and (not (pop 3)) (or (= 3 2)
     (not false)))))) (color (color (/ (+ (+ (if
     false 2 5) (if false 4 5)) (if (or false
     true) (/ 6 1) (/ 1 2))) (if (not (and false
     true)) (+ (color 6) (color 5)) (color (/
     2 2)))))) (color (+ (/ (if (or (= 2 5) (and
     true true)) (/ (if false 5 3) (color 3))
     (if (= 6 3) (color 4) (if true 4 1))) (if
     (pop (if true 4 4)) (+ (color 6) (if true
     6 5)) (color (color 3)))) (+ (if (not (=
     1 5)) (+ (if false 5 2) (color 1)) (if (or
     false false) (if true 1 3) (if false 2 2)))
     (+ (/ (/ 6 3) (+ 1 2)) (/ (+ 6 1) (if true
         2 6)))))))) (/ (+ (/ (color (if (= (+ (+
     2 2) (/ 4 2)) (if (or false false) (/ 5 1)
     (if false 1 5))) (+ (if (and false false)
     (+ 5 6) (/ 1 4)) (/ (if true 6 6) (color
     4))) (/ (color (if true 2 4)) (/ (if false
     1 2) (/ 2 5))))) (+ (color (+ (if (= 5 2)
     (if false 1 5) (if true 2 4)) (/ (color 6)
     (color 1)))) (color (/ (+ (+ 5 1) (color
     2)) (+ (/ 1 3) (+ 5 3)))))) (/ (if (not (pop
     (/ (if false 2 4) (if false 4 2)))) (if (or
     (or (not false) (pop 6)) (and (and false
     true) (= 6 3))) (if (or (not true) (and false
     false)) (if (and true true) (color 1) (+
     3 4)) (color (if true 6 3))) (/ (/ (/ 5 1)
     (color 3)) (+ (if false 6 2) (color 2))))
     (if (and (not (= 2 5)) (pop (if true 1 4)))
         (color (color (color 2))) (if (or (pop 4)
         (and true true)) (if (and false true) (+
         5 5) (/ 6 2)) (color (/ 4 5))))) (if (not
     (not (not (and true false)))) (color (color
     (color (+ 4 4)))) (+ (if (= (/ 1 6) (if false
     4 3)) (if (and true false) (if false 6 3)
     (/ 6 6)) (if (not true) (color 5) (color
     3))) (/ (if (not true) (/ 5 5) (color 6))
     (/ (color 4) (+ 3 3))))))) (+ (/ (/ (+ (/
     (color (/ 1 3)) (color (color 3))) (if (or
     (or false false) (not true)) (if (= 4 2)
     (/ 6 5) (/ 2 1)) (color (color 6)))) (/ (/
     (/ (/ 6 5) (if true 2 1)) (/ (color 6) (/
     4 4))) (color (+ (color 4) (+ 6 2))))) (+
     (color (+ (+ (color 1) (if true 5 3)) (color
         (color 3)))) (if (= (color (color 3)) (+
     (color 5) (+ 5 1))) (color (/ (/ 3 2) (+
     6 6))) (if (pop (color 4)) (+ (if false 2
     1) (if false 2 6)) (color (+ 3 3)))))) (+
     (if (pop (/ (color (/ 1 3)) (color (+ 1 6))))
         (+ (color (color (color 1))) (/ (color (color
             5)) (/ (+ 6 5) (if true 6 3)))) (color (color
         (color (color 3))))) (/ (+ (+ (if (pop 1)
     (/ 1 3) (if true 5 3)) (+ (+ 3 4) (color
     2))) (/ (color (/ 6 1)) (color (if false
     2 6)))) (+ (color (if (or false true) (if
     true 6 6) (+ 3 4))) (/ (/ (+ 4 3) (color
     3)) (if (or true false) (if false 3 1) (color
     3))))))))) (if (pop (+ (if (or (not (pop
     (+ (color 5) (/ 6 4)))) (= (color (/ (+ 2
     6) (if false 6 2))) (if (and (and false false)
     (and false true)) (if (or true true) (color
     4) (color 1)) (if (pop 5) (if true 4 1) (/
     6 2))))) (if (and (or (pop (if false 5 6))
     (or (or true false) (= 6 5))) (= (if (= 4
     3) (/ 3 3) (color 5)) (if (and false false)
     (color 6) (+ 2 5)))) (color (if (pop (+ 1
     5)) (color (if false 5 3)) (color (color
     2)))) (color (/ (if (and false false) (+
     1 4) (+ 2 5)) (color (if true 2 1))))) (+
     (/ (color (if (and true false) (if true 2
         3) (color 5))) (color (if (and true true)
         (/ 5 3) (/ 6 6)))) (color (if (and (or false
     false) (or true false)) (/ (/ 1 1) (if true
     2 4)) (/ (if false 6 6) (color 5)))))) (+
     (color (+ (if (not (and true false)) (color
         (+ 4 4)) (+ (/ 3 3) (/ 6 4))) (if (or (not
         false) (= 6 1)) (/ (if false 2 3) (/ 4 4))
         (if (and false false) (+ 2 2) (+ 5 2)))))
     (color (color (+ (color (if false 2 6)) (/
         (/ 2 2) (+ 5 5)))))))) (/ (if (pop (/ (if
     (and (not (= 6 2)) (not (not true))) (+ (if
     (= 1 2) (/ 5 4) (color 6)) (if (= 3 2) (color
     3) (color 6))) (if (= (color 5) (if false
     2 6)) (+ (color 4) (color 6)) (if (not true)
     (/ 6 4) (+ 2 1)))) (color (if (pop (/ 5 4))
     (color (/ 1 5)) (color (if false 6 5))))))
     (+ (if (= (+ (/ (if false 6 1) (if false
         1 6)) (color (+ 5 3))) (/ (/ (if false 3
         5) (+ 4 4)) (+ (+ 4 6) (+ 6 5)))) (color
         (if (not (pop 5)) (+ (color 3) (+ 2 6)) (+
             (+ 3 5) (color 3)))) (/ (+ (color (/ 1 4))
         (/ (+ 2 1) (color 1))) (color (color (if
         false 1 1))))) (color (/ (if (or (not true)
         (or true false)) (/ (/ 1 5) (+ 2 2)) (/ (color
         4) (/ 6 6))) (+ (/ (color 1) (color 4)) (color
         (if false 1 5)))))) (/ (color (+ (if (and
     (not false) (= 1 2)) (+ (+ 5 1) (/ 2 6))
     (/ (if false 2 5) (/ 4 4))) (/ (if (and true
     true) (+ 2 4) (color 2)) (if (= 5 6) (if
     true 1 3) (+ 4 1))))) (if (pop (if (= (if
     false 3 5) (if false 6 5)) (/ (color 6) (if
     true 3 1)) (if (= 3 5) (color 2) (+ 3 4))))
     (+ (color (/ (if false 5 1) (+ 2 1))) (if
         (not (pop 3)) (+ (+ 1 5) (if true 6 1)) (if
         (or true true) (color 3) (/ 3 1)))) (+ (/
     (if (= 2 3) (color 5) (if true 2 6)) (color
     (/ 1 2))) (color (color (/ 1 1))))))) (if
     (pop (if (and (not (pop (color 4))) (or (not
         (not false)) (not (or true true)))) (color
         (+ (+ (+ 4 5) (color 3)) (+ (color 4) (if
             false 3 2)))) (/ (color (color (+ 3 3)))
         (+ (/ (color 3) (+ 1 5)) (+ (/ 6 4) (+ 5
             6)))))) (/ (if (not (not (and (pop 1) (=
     4 1)))) (/ (+ (+ (if true 5 1) (if true 3
     6)) (+ (if true 6 1) (color 6))) (+ (if (=
     1 4) (+ 4 3) (+ 6 2)) (color (+ 3 4)))) (/
     (/ (color (if true 6 2)) (+ (if true 6 2)
         (+ 1 1))) (/ (if (or false false) (color
     4) (/ 2 3)) (+ (color 2) (/ 2 3))))) (+ (+
     (+ (+ (color 4) (color 6)) (/ (/ 4 2) (+
         1 2))) (/ (+ (color 3) (/ 3 6)) (+ (color
     5) (color 4)))) (color (color (/ (if true
     2 3) (if false 3 6)))))) (if (or (or (not
     (or (not false) (not true))) (not (not (or
     true false)))) (not (or (or (pop 2) (and
     false false)) (= (/ 4 3) (color 2))))) (if
     (and (pop (color (+ 3 1))) (= (/ (+ 6 4)
         (/ 2 1)) (color (/ 2 2)))) (color (+ (+ (/
     1 6) (color 1)) (color (if false 4 3))))
     (if (= (+ (+ 3 6) (color 6)) (+ (if true
         2 1) (color 2))) (+ (/ (+ 5 3) (+ 5 2)) (if
         (not false) (if false 3 3) (if false 2 3)))
         (color (+ (+ 3 5) (/ 1 3))))) (+ (+ (color
     (+ (/ 5 4) (+ 3 4))) (/ (+ (+ 4 2) (color
     4)) (/ (/ 4 5) (if false 4 6)))) (color (/
     (/ (if false 3 3) (if true 5 3)) (/ (/ 3
     3) (if false 2 6)))))))) (/ (color (/ (/
     (/ (+ (if (and false true) (/ 2 5) (if false
         3 4)) (/ (color 6) (+ 4 6))) (color (if (or
         true true) (+ 6 5) (color 1)))) (if (pop
     (/ (color 5) (+ 4 3))) (+ (+ (/ 6 1) (/ 2
     1)) (color (if true 6 3))) (color (color
     (+ 1 4))))) (color (color (color (color (+
     1 2))))))) (color (if (not (not (= (if (not
     false) (if false 3 5) (color 3)) (+ (color
     6) (+ 4 3))))) (if (= (color (/ (color 6)
     (if true 4 5))) (color (+ (color 1) (+ 1
     5)))) (/ (+ (/ (if true 1 5) (/ 4 5)) (+
     (color 6) (color 5))) (if (and (pop 6) (=
     2 2)) (if (not true) (+ 6 3) (/ 1 2)) (if
     (= 4 1) (/ 2 6) (if false 6 2)))) (color
     (if (and (pop 6) (pop 1)) (+ (+ 6 2) (color
         4)) (+ (color 4) (color 6))))) (/ (color
     (color (+ (if false 5 2) (/ 5 4)))) (color
     (color (+ (color 6) (+ 3 6)))))))))) (color
     (color (/ (color (+ (color (color (color
         (color (color 5))))) (/ (if (and (= (+ 1
         1) (+ 4 5)) (or (= 6 5) (or true true)))
         (if (pop (if false 2 2)) (/ (if false 4 4)
             (color 6)) (/ (if true 2 1) (/ 6 6))) (if
         (pop (if true 6 6)) (if (and true true) (/
         5 4) (if true 5 6)) (+ (+ 2 5) (if false
         6 3)))) (color (if (pop (color 3)) (+ (if
         false 5 3) (color 5)) (if (not false) (+
         1 5) (color 1))))))) (+ (/ (+ (if (= (color
         (color 6)) (/ (if false 1 3) (/ 1 1))) (color
         (+ (/ 1 6) (/ 5 4))) (/ (if (and true false)
         (/ 4 6) (/ 3 3)) (color (+ 4 4)))) (/ (/
         (+ (color 4) (if false 4 4)) (if (and false
         false) (color 1) (color 2))) (if (and (=
         1 4) (pop 5)) (/ (+ 2 6) (if false 2 1))
         (if (not false) (color 2) (color 6))))) (color
         (+ (+ (/ (+ 5 6) (if true 2 1)) (if (= 2
             5) (/ 6 6) (/ 4 6))) (color (+ (color 4)
             (color 5)))))) (/ (if (not (= (+ (/ 3 4)
         (color 6)) (+ (+ 3 1) (color 3)))) (/ (+
         (if (= 5 6) (+ 5 2) (/ 3 1)) (+ (if false
         6 4) (color 6))) (if (pop (if false 6 4))
         (+ (/ 5 4) (color 2)) (+ (color 2) (+ 5 6))))
         (/ (if (and (not true) (pop 3)) (/ (color
             2) (+ 3 1)) (/ (color 6) (if true 6 4)))
             (if (pop (+ 2 6)) (+ (if true 1 2) (if true
                 2 5)) (color (/ 2 4))))) (color (+ (if (=
         (if true 4 4) (+ 1 3)) (+ (+ 5 3) (+ 1 4))
         (if (not false) (+ 2 2) (+ 5 6))) (color
         (if (pop 1) (/ 4 3) (/ 2 5)))))))))))



Generation 42
================

Subpopulation 0
----------------
Avg Nodes: 426.792
Nodes/tree: [426.792]
Avg Depth: 8.461
Depth/tree: [8.461]
Mean fitness raw: 14.226 adjusted: 0.101600744 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (not (not (or true true))) (pop (if (or
     false false) (if false 4 6) (/ 4 2))))



Generation 43
================

Subpopulation 0
----------------
Avg Nodes: 436.533
Nodes/tree: [436.533]
Avg Depth: 8.505
Depth/tree: [8.505]
Mean fitness raw: 12.239 adjusted: 0.10584315 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (not (not (or true true))) (pop (if (or
     false false) (if false 4 6) (/ 4 2))))



Generation 44
================

Subpopulation 0
----------------
Avg Nodes: 386.82
Nodes/tree: [386.82]
Avg Depth: 8.163
Depth/tree: [8.163]
Mean fitness raw: 12.808 adjusted: 0.10435217 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 45
================

Subpopulation 0
----------------
Avg Nodes: 411.633
Nodes/tree: [411.633]
Avg Depth: 8.434
Depth/tree: [8.434]
Mean fitness raw: 11.526 adjusted: 0.112414494 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 46
================

Subpopulation 0
----------------
Avg Nodes: 412.637
Nodes/tree: [412.637]
Avg Depth: 8.5
Depth/tree: [8.5]
Mean fitness raw: 12.657 adjusted: 0.106693074 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (not (and (pop (color (if false 3 6)))
     (not (or (and true true) (or false true))))))



Generation 47
================

Subpopulation 0
----------------
Avg Nodes: 422.831
Nodes/tree: [422.831]
Avg Depth: 8.648
Depth/tree: [8.648]
Mean fitness raw: 13.669 adjusted: 0.10482636 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 48
================

Subpopulation 0
----------------
Avg Nodes: 459.497
Nodes/tree: [459.497]
Avg Depth: 8.686
Depth/tree: [8.686]
Mean fitness raw: 12.742 adjusted: 0.11022862 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (color (color (if (pop (+ (if (or (not (and
     (and (pop 2) (not false)) (or (not false)
     (pop 1)))) (or (not (or (and false true)
     (or true true))) (pop (if (and false false)
     (+ 3 2) (+ 5 2))))) (/ (if (pop (+ (color
     5) (color 1))) (color (/ (+ 6 5) (if false
     4 1))) (/ (color (color 5)) (if (pop 6) (if
     false 1 5) (if false 4 2)))) (color (/ (+
     (if true 5 2) (if true 3 1)) (if (not false)
     (color 2) (color 3))))) (if (not (not (or
     (pop 5) (pop 3)))) (if (= (+ (if true 4 4)
     (color 3)) (+ (color 3) (/ 5 3))) (color
     (color (color 1))) (if (pop (if true 4 3))
     (+ (/ 1 5) (color 3)) (/ (color 5) (+ 2 1))))
     (/ (if (pop (/ 5 4)) (/ (+ 5 6) (if true
         5 2)) (color (color 2))) (+ (+ (+ 6 1) (+
         6 2)) (color (+ 4 4)))))) (color (/ (if (pop
     (+ (/ 3 4) (if true 3 3))) (+ (if (= 3 3)
     (+ 5 4) (+ 6 4)) (color (color 5))) (+ (+
     (+ 5 1) (if true 2 1)) (/ (+ 5 2) (color
     4)))) (+ (/ (color (color 3)) (color (/ 3
     1))) (/ (color (+ 5 3)) (/ (/ 4 2) (/ 6 3))))))))
     (if (not (and (pop (+ (color (color (/ 4
         4))) (/ (/ (/ 3 2) (if false 4 2)) (/ (color
         5) (/ 2 1))))) (= (+ (/ (color (color 6))
         (color (/ 6 2))) (color (/ (+ 5 4) (/ 2 4))))
         (/ (+ (/ (/ 3 5) (color 2)) (+ (+ 6 2) (/
             2 6))) (if (pop (+ 1 6)) (+ (+ 6 4) (/ 1
             4)) (color (+ 5 6))))))) (color (color (/
         (/ (if (and (or false true) (and false false))
             (color (if false 3 6)) (color (if true 6
             6))) (+ (+ (if false 3 4) (+ 5 1)) (color
             (if false 4 3)))) (/ (+ (/ (if false 1 6)
         (+ 3 5)) (if (pop 5) (+ 3 1) (if false 3
         2))) (if (or (= 4 3) (pop 5)) (/ (if false
         6 3) (/ 5 5)) (/ (if true 2 4) (color 3)))))))
         (if (or (pop (if (pop (+ (/ 4 6) (+ 3 6)))
             (+ (color (color 2)) (if (= 4 4) (color 1)
                 (/ 2 2))) (if (= (+ 1 5) (color 1)) (color
             (color 1)) (color (if false 4 3))))) (= (/
             (if (or (or true false) (and true false))
                 (/ (color 4) (/ 4 6)) (if (or true false)
                 (if true 6 3) (color 6))) (color (/ (color
             4) (color 3)))) (+ (+ (if (not false) (/
             6 3) (+ 1 5)) (+ (color 5) (+ 5 1))) (/ (if
             (and true true) (+ 2 5) (+ 1 1)) (+ (+ 4
             2) (color 3)))))) (+ (+ (if (pop (color (+
             6 2))) (+ (/ (/ 4 4) (+ 6 2)) (+ (if true
             4 6) (+ 5 4))) (color (+ (+ 5 2) (if true
             2 6)))) (if (= (if (= 4 5) (if true 1 2)
             (color 4)) (if (= 2 4) (color 3) (/ 4 6)))
             (+ (+ (/ 4 3) (if false 2 3)) (if (or true
                 false) (color 3) (color 2))) (+ (color (/
             2 3)) (/ (if false 3 1) (color 6))))) (color
             (/ (if (not (not true)) (+ (if true 3 1)
                 (+ 2 1)) (+ (if true 6 1) (/ 1 6))) (if (pop
                 (/ 4 6)) (if (or false false) (color 6) (if
                 false 1 1)) (+ (/ 5 3) (if false 4 6))))))
             (/ (+ (color (/ (/ (/ 5 4) (color 2)) (if
                 (pop 4) (+ 2 6) (/ 4 4)))) (+ (if (not (pop
                 6)) (if (or true true) (if true 6 2) (if
                 true 5 1)) (color (/ 3 5))) (if (pop (/ 4
                 3)) (if (not true) (color 5) (/ 2 2)) (+
                 (color 2) (+ 4 6))))) (if (and (= (color
                 (/ 1 5)) (+ (/ 1 3) (if false 3 6))) (= (+
                 (color 3) (/ 6 1)) (+ (+ 1 5) (color 5))))
                 (+ (/ (/ (if false 4 5) (if false 1 4)) (+
                     (+ 2 3) (+ 4 1))) (/ (if (pop 2) (color 4)
                     (color 2)) (color (if true 5 3)))) (color
                 (color (color (color 4)))))))) (/ (color
     (+ (/ (color (if (not (and false true)) (+
         (if true 6 3) (if false 4 2)) (if (pop 5)
         (+ 1 5) (color 2)))) (if (or (or (= 2 2)
         (or true false)) (or (and true true) (= 1
         1))) (/ (/ (+ 4 3) (/ 2 3)) (/ (if false
         2 1) (color 1))) (/ (if (or false false)
         (+ 6 2) (if true 4 6)) (+ (color 3) (/ 6
         1))))) (color (if (not (not (or true false)))
         (color (+ (+ 5 3) (+ 4 5))) (+ (+ (if true
         2 2) (+ 1 5)) (+ (/ 3 6) (color 6)))))))
     (if (= (if (or (or (not (or true true)) (not
         (and true true))) (not (and (and true false)
         (or true true)))) (/ (if (pop (color 1))
         (color (/ 3 4)) (/ (color 5) (+ 5 1))) (/
         (color (if false 1 5)) (if (= 5 3) (if false
         2 5) (+ 6 6)))) (if (and (pop (+ 1 3)) (and
         (pop 4) (and true false))) (if (= (color
         5) (/ 5 3)) (/ (color 1) (+ 6 1)) (if (=
         2 5) (+ 4 6) (+ 3 1))) (+ (+ (color 3) (+
         5 6)) (if (pop 3) (/ 1 3) (/ 3 5))))) (+
         (/ (if (or (not true) (or true true)) (if
             (not false) (/ 6 5) (if false 4 2)) (if (=
             4 4) (color 5) (if false 1 2))) (color (if
             (not false) (/ 6 6) (/ 4 2)))) (/ (+ (/ (color
         5) (color 3)) (+ (if true 5 6) (/ 1 1)))
         (+ (color (+ 5 3)) (+ (/ 5 2) (if false 3
             5)))))) (/ (/ (color (/ (if (not true) (/
         6 3) (+ 2 3)) (/ (color 6) (+ 2 3)))) (if
         (pop (if (and false false) (if false 4 3)
             (color 2))) (/ (color (color 2)) (color (+
         6 4))) (/ (/ (if false 2 4) (+ 1 3)) (color
         (if false 5 6))))) (color (/ (/ (color (/
         4 3)) (color (if false 3 1))) (/ (/ (+ 3
         4) (color 2)) (color (if true 6 3)))))) (/
         (/ (/ (+ (color (/ 5 4)) (if (and false true)
             (if true 1 6) (/ 2 5))) (+ (color (+ 3 4))
             (if (and true true) (/ 6 6) (color 1))))
             (if (= (if (or true false) (+ 1 6) (if true
                 1 5)) (+ (if true 1 6) (+ 1 6))) (color (if
                 (not false) (/ 2 3) (/ 5 2))) (color (/ (+
                 4 4) (+ 1 3))))) (if (and (or (or (or true
         false) (or false false)) (or (and true true)
         (pop 6))) (= (+ (color 2) (/ 1 3)) (color
         (+ 2 5)))) (+ (/ (color (color 2)) (/ (if
         true 1 5) (if false 6 2))) (/ (/ (/ 4 4)
         (+ 6 6)) (if (and true false) (if true 2
         1) (/ 3 5)))) (color (color (if (and false
         true) (/ 6 2) (/ 3 5)))))))))))



Generation 49
================

Subpopulation 0
----------------
Avg Nodes: 497.44
Nodes/tree: [497.44]
Avg Depth: 9.026
Depth/tree: [9.026]
Mean fitness raw: 11.645 adjusted: 0.111902446 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 50
================

Subpopulation 0
----------------
Avg Nodes: 487.126
Nodes/tree: [487.126]
Avg Depth: 9.197
Depth/tree: [9.197]
Mean fitness raw: 12.002 adjusted: 0.10574747 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 51
================

Subpopulation 0
----------------
Avg Nodes: 496.501
Nodes/tree: [496.501]
Avg Depth: 9.423
Depth/tree: [9.423]
Mean fitness raw: 10.529 adjusted: 0.1141437 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 52
================

Subpopulation 0
----------------
Avg Nodes: 488.237
Nodes/tree: [488.237]
Avg Depth: 9.422
Depth/tree: [9.422]
Mean fitness raw: 10.939 adjusted: 0.114338085 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (or true (or (not (or false false))
     (pop 3))) (and false (pop 2)))



Generation 53
================

Subpopulation 0
----------------
Avg Nodes: 440.38
Nodes/tree: [440.38]
Avg Depth: 9.194
Depth/tree: [9.194]
Mean fitness raw: 11.966 adjusted: 0.109520204 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (not (not (or true true))) (pop (if (or
     false false) (if false 4 6) (/ 4 2))))



Generation 54
================

Subpopulation 0
----------------
Avg Nodes: 472.01
Nodes/tree: [472.01]
Avg Depth: 9.314
Depth/tree: [9.314]
Mean fitness raw: 14.517 adjusted: 0.100478105 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (not (not (or true true))) (pop (if (or
     false false) (if false 4 6) (/ 4 2))))



Generation 55
================

Subpopulation 0
----------------
Avg Nodes: 468.538
Nodes/tree: [468.538]
Avg Depth: 9.205
Depth/tree: [9.205]
Mean fitness raw: 10.893 adjusted: 0.11202688 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 56
================

Subpopulation 0
----------------
Avg Nodes: 466.439
Nodes/tree: [466.439]
Avg Depth: 9.142
Depth/tree: [9.142]
Mean fitness raw: 12.221 adjusted: 0.106686726 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (or true (or (not (or false false))
     (pop 3))) (and false (pop 2)))



Generation 57
================

Subpopulation 0
----------------
Avg Nodes: 459.964
Nodes/tree: [459.964]
Avg Depth: 9.118
Depth/tree: [9.118]
Mean fitness raw: 11.117 adjusted: 0.112234175 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 58
================

Subpopulation 0
----------------
Avg Nodes: 451.451
Nodes/tree: [451.451]
Avg Depth: 8.966
Depth/tree: [8.966]
Mean fitness raw: 14.156 adjusted: 0.10196547 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 59
================

Subpopulation 0
----------------
Avg Nodes: 426.223
Nodes/tree: [426.223]
Avg Depth: 8.784
Depth/tree: [8.784]
Mean fitness raw: 12.83 adjusted: 0.106355935 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 60
================

Subpopulation 0
----------------
Avg Nodes: 397.711
Nodes/tree: [397.711]
Avg Depth: 8.739
Depth/tree: [8.739]
Mean fitness raw: 12.87 adjusted: 0.10641282 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 61
================

Subpopulation 0
----------------
Avg Nodes: 375.05
Nodes/tree: [375.05]
Avg Depth: 8.486
Depth/tree: [8.486]
Mean fitness raw: 8.481 adjusted: 0.124301836 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 62
================

Subpopulation 0
----------------
Avg Nodes: 404.298
Nodes/tree: [404.298]
Avg Depth: 8.593
Depth/tree: [8.593]
Mean fitness raw: 12.239 adjusted: 0.109875076 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (pop (+ (+ (if (and (or (not (not true))
     (not (or true true))) (or (or (= 2 5) (and
     true true)) (and (pop 4) (or true false))))
     (/ (color (if (and true true) (/ 1 4) (if
         false 5 1))) (/ (color (if true 4 5)) (+
         (if false 5 3) (+ 5 1)))) (if (pop (+ (/
     1 4) (/ 2 3))) (/ (if (= 4 2) (if true 2
     5) (/ 2 4)) (if (= 4 2) (color 4) (if false
     6 1))) (if (and (or true false) (pop 2))
     (color (color 1)) (/ (color 5) (color 5)))))
     (color (+ (color (color (if true 4 1))) (+
         (+ (+ 5 5) (/ 5 3)) (/ (if true 5 5) (color
         2)))))) (+ (/ (+ (+ (if (not false) (/ 3
     3) (/ 6 6)) (color (/ 5 6))) (if (= (+ 1
     6) (color 4)) (+ (color 5) (if false 1 6))
     (+ (if false 6 2) (+ 5 5)))) (/ (if (not
     (or true true)) (+ (color 6) (color 3)) (if
     (= 4 3) (color 2) (+ 6 4))) (+ (/ (if false
     2 5) (color 3)) (+ (if true 6 5) (+ 5 2)))))
     (/ (if (or (not (not false)) (and (pop 5)
         (= 5 5))) (if (or (and true true) (pop 4))
         (color (/ 6 4)) (/ (color 4) (/ 1 6))) (if
         (or (pop 1) (pop 3)) (color (color 4)) (if
         (and false true) (+ 4 4) (+ 5 3)))) (if (not
         (or (= 3 2) (or false true))) (if (or (and
         true false) (= 1 2)) (color (if true 2 2))
         (+ (/ 6 5) (color 4))) (if (not (not true))
         (/ (/ 4 4) (/ 1 3)) (+ (if false 1 5) (/
         2 5))))))))



Generation 63
================

Subpopulation 0
----------------
Avg Nodes: 364.811
Nodes/tree: [364.811]
Avg Depth: 8.497
Depth/tree: [8.497]
Mean fitness raw: 12.518 adjusted: 0.10689149 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 64
================

Subpopulation 0
----------------
Avg Nodes: 386.604
Nodes/tree: [386.604]
Avg Depth: 8.655
Depth/tree: [8.655]
Mean fitness raw: 11.264 adjusted: 0.111861676 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 65
================

Subpopulation 0
----------------
Avg Nodes: 406.562
Nodes/tree: [406.562]
Avg Depth: 8.889
Depth/tree: [8.889]
Mean fitness raw: 11.232 adjusted: 0.111240886 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 66
================

Subpopulation 0
----------------
Avg Nodes: 370.696
Nodes/tree: [370.696]
Avg Depth: 8.792
Depth/tree: [8.792]
Mean fitness raw: 12.513 adjusted: 0.105996095 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 67
================

Subpopulation 0
----------------
Avg Nodes: 385.42
Nodes/tree: [385.42]
Avg Depth: 8.86
Depth/tree: [8.86]
Mean fitness raw: 12.112 adjusted: 0.10815632 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (or true (or (not (or false false))
     (pop 3))) (and false (pop 2)))



Generation 68
================

Subpopulation 0
----------------
Avg Nodes: 403.905
Nodes/tree: [403.905]
Avg Depth: 8.753
Depth/tree: [8.753]
Mean fitness raw: 11.683 adjusted: 0.109646834 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 69
================

Subpopulation 0
----------------
Avg Nodes: 399.494
Nodes/tree: [399.494]
Avg Depth: 8.807
Depth/tree: [8.807]
Mean fitness raw: 10.949 adjusted: 0.11015238 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (or true (or (not (or false false))
     (pop 3))) (and false (pop 2)))



Generation 70
================

Subpopulation 0
----------------
Avg Nodes: 422.431
Nodes/tree: [422.431]
Avg Depth: 8.883
Depth/tree: [8.883]
Mean fitness raw: 11.12 adjusted: 0.11367732 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (color (color (if (pop (+ (if (or (not (and
     (and (pop 2) (not false)) (or (not false)
     (pop 1)))) (or (not (or (and false true)
     (or true true))) (pop (if (and false false)
     (+ 3 2) (+ 5 2))))) (/ (if (pop (+ (color
     5) (color 1))) (color (/ (+ 6 5) (if false
     4 1))) (/ (color (color 5)) (if (pop 6) (if
     false 1 5) (if false 4 2)))) (color (/ (+
     (if true 5 2) (if true 3 1)) (if (not false)
     (color 2) (color 3))))) (if (not (not (or
     (pop 5) (pop 3)))) (if (= (+ (if true 4 4)
     (color 3)) (+ (color 3) (/ 5 3))) (color
     (color (color 1))) (if (pop (if true 4 3))
     (+ (/ 1 5) (color 3)) (/ (color 5) (+ 2 1))))
     (/ (if (pop (/ 5 4)) (/ (+ 5 6) (if true
         5 2)) (color (color 2))) (+ (+ (+ 6 1) (+
         6 2)) (color (+ 4 4)))))) (color (/ (if (pop
     (+ (/ 3 4) (if true 3 3))) (+ (if (= 3 3)
     (+ 5 4) (+ 6 4)) (color (color 5))) (+ (+
     (+ 5 1) (if true 2 1)) (/ (+ 5 2) (color
     4)))) (+ (/ (color (color 3)) (color (/ 3
     1))) (/ (color (+ 5 3)) (/ (/ 4 2) (/ 6 3))))))))
     (if (not (and (pop (+ (color (color (/ 4
         4))) (/ (/ (/ 3 2) (if false 4 2)) (/ (color
         5) (/ 2 1))))) (= (+ (/ (color (color 6))
         (color (/ 6 2))) (color (/ (+ 5 4) (/ 2 4))))
         (/ (+ (/ (/ 3 5) (color 2)) (+ (+ 6 2) (/
             2 6))) (if (pop (+ 1 6)) (+ (+ 6 4) (/ 1
             4)) (color (+ 5 6))))))) (color (color (/
         (/ (if (and (or false true) (and false false))
             (color (if false 3 6)) (color (if true 6
             6))) (+ (+ (if false 3 4) (+ 5 1)) (color
             (if false 4 3)))) (/ (+ (/ (if false 1 6)
         (+ 3 5)) (if (pop 5) (+ 3 1) (if false 3
         2))) (if (or (= 4 3) (pop 5)) (/ (if false
         6 3) (/ 5 5)) (/ (if true 2 4) (color 3)))))))
         (if (or (pop (if (pop (+ (/ 4 6) (+ 3 6)))
             (+ (color (color 2)) (if (= 4 4) (color 1)
                 (/ 2 2))) (if (= (+ 1 5) (color 1)) (color
             (color 1)) (color (if false 4 3))))) (= (/
             (if (or (or true false) (and true false))
                 (/ (color 4) (/ 4 6)) (if (or true false)
                 (if true 6 3) (color 6))) (color (/ (color
             4) (color 3)))) (+ (+ (if (not false) (/
             6 3) (+ 1 5)) (+ (color 5) (+ 5 1))) (/ (if
             (and true true) (+ 2 5) (+ 1 1)) (+ (+ 4
             2) (color 3)))))) (+ (+ (if (pop (color (+
             6 2))) (+ (/ (/ 4 4) (+ 6 2)) (+ (if true
             4 6) (+ 5 4))) (color (+ (+ 5 2) (if true
             2 6)))) (if (= (if (= 4 5) (if true 1 2)
             (color 4)) (if (= 2 4) (color 3) (/ 4 6)))
             (+ (+ (/ 4 3) (if false 2 3)) (if (or true
                 false) (color 3) (color 2))) (+ (color (/
             2 3)) (/ (if false 3 1) (color 6))))) (color
             (/ (if (not (not true)) (+ (if true 3 1)
                 (+ 2 1)) (+ (if true 6 1) (/ 1 6))) (if (pop
                 (/ 4 6)) (if (or false false) (color 6) (if
                 false 1 1)) (+ (/ 5 3) (if false 4 6))))))
             (/ (+ (color (/ (/ (/ 5 4) (color 2)) (if
                 (pop 4) (+ 2 6) (/ 4 4)))) (+ (if (not (pop
                 6)) (if (or true true) (if true 6 2) (if
                 true 5 1)) (color (/ 3 5))) (if (pop (/ 4
                 3)) (if (not true) (color 5) (/ 2 2)) (+
                 (color 2) (+ 4 6))))) (if (and (= (color
                 (/ 1 5)) (+ (/ 1 3) (if false 3 6))) (= (+
                 (color 3) (/ 6 1)) (+ (+ 1 5) (color 5))))
                 (+ (/ (/ (if false 4 5) (if false 1 4)) (+
                     (+ 2 3) (+ 4 1))) (/ (if (pop 2) (color 4)
                     (color 2)) (color (if true 5 3)))) (color
                 (color (color (color 4)))))))) (/ (color
     (+ (/ (color (if (not (and false true)) (+
         (if true 6 3) (if false 4 2)) (if (pop 5)
         (+ 1 5) (color 2)))) (if (or (or (= 2 2)
         (or true false)) (or (and true true) (= 1
         1))) (/ (/ (+ 4 3) (/ 2 3)) (/ (if false
         2 1) (color 1))) (/ (if (or false false)
         (+ 6 2) (if true 4 6)) (+ (color 3) (/ 6
         1))))) (color (if (not (not (or true false)))
         (color (+ (+ 5 3) (+ 4 5))) (+ (+ (if true
         2 2) (+ 1 5)) (+ (/ 3 6) (color 6)))))))
     (if (= (if (or (or (not (or true true)) (not
         (and true true))) (not (and (and true false)
         (or true true)))) (/ (if (pop (color 1))
         (color (/ 3 4)) (/ (color 5) (+ 5 1))) (/
         (color (if false 1 5)) (if (= 5 3) (if false
         2 5) (+ 6 6)))) (if (and (pop (+ 1 3)) (and
         (pop 4) (and true false))) (if (= (color
         5) (/ 5 3)) (/ (color 1) (+ 6 1)) (if (=
         2 5) (+ 4 6) (+ 3 1))) (+ (+ (color 3) (+
         5 6)) (if (pop 3) (/ 1 3) (/ 3 5))))) (+
         (/ (if (or (not true) (or true true)) (if
             (not false) (/ 6 5) (if false 4 2)) (if (=
             4 4) (color 5) (if false 1 2))) (color (if
             (not false) (/ 6 6) (/ 4 2)))) (/ (+ (/ (color
         5) (color 3)) (+ (if true 5 6) (/ 1 1)))
         (+ (color (+ 5 3)) (+ (/ 5 2) (if false 3
             5)))))) (/ (/ (color (/ (if (not true) (/
         6 3) (+ 2 3)) (/ (color 6) (+ 2 3)))) (if
         (pop (if (and false false) (if false 4 3)
             (color 2))) (/ (color (color 2)) (color (+
         6 4))) (/ (/ (if false 2 4) (+ 1 3)) (color
         (if false 5 6))))) (color (/ (/ (color (/
         4 3)) (color (if false 3 1))) (/ (/ (+ 3
         4) (color 2)) (color (if true 6 3)))))) (/
         (/ (/ (+ (color (/ 5 4)) (if (and false true)
             (if true 1 6) (/ 2 5))) (+ (color (+ 3 4))
             (if (and true true) (/ 6 6) (color 1))))
             (if (= (if (or true false) (+ 1 6) (if true
                 1 5)) (+ (if true 1 6) (+ 1 6))) (color (if
                 (not false) (/ 2 3) (/ 5 2))) (color (/ (+
                 4 4) (+ 1 3))))) (if (and (or (or (or true
         false) (or false false)) (or (and true true)
         (pop 6))) (= (+ (color 2) (/ 1 3)) (color
         (+ 2 5)))) (+ (/ (color (color 2)) (/ (if
         true 1 5) (if false 6 2))) (/ (/ (/ 4 4)
         (+ 6 6)) (if (and true false) (if true 2
         1) (/ 3 5)))) (color (color (if (and false
         true) (/ 6 2) (/ 3 5)))))))))))



Generation 71
================

Subpopulation 0
----------------
Avg Nodes: 389.858
Nodes/tree: [389.858]
Avg Depth: 8.715
Depth/tree: [8.715]
Mean fitness raw: 11.601 adjusted: 0.10908878 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 72
================

Subpopulation 0
----------------
Avg Nodes: 389.111
Nodes/tree: [389.111]
Avg Depth: 8.702
Depth/tree: [8.702]
Mean fitness raw: 8.996 adjusted: 0.117586054 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 73
================

Subpopulation 0
----------------
Avg Nodes: 370.816
Nodes/tree: [370.816]
Avg Depth: 8.724
Depth/tree: [8.724]
Mean fitness raw: 12.383 adjusted: 0.10843974 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 74
================

Subpopulation 0
----------------
Avg Nodes: 351.968
Nodes/tree: [351.968]
Avg Depth: 8.686
Depth/tree: [8.686]
Mean fitness raw: 12.401 adjusted: 0.10753773 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 75
================

Subpopulation 0
----------------
Avg Nodes: 336.907
Nodes/tree: [336.907]
Avg Depth: 8.624
Depth/tree: [8.624]
Mean fitness raw: 13.454 adjusted: 0.10539038 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 76
================

Subpopulation 0
----------------
Avg Nodes: 287.865
Nodes/tree: [287.865]
Avg Depth: 8.245
Depth/tree: [8.245]
Mean fitness raw: 11.928 adjusted: 0.10955577 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 77
================

Subpopulation 0
----------------
Avg Nodes: 266.11
Nodes/tree: [266.11]
Avg Depth: 8.185
Depth/tree: [8.185]
Mean fitness raw: 12.32 adjusted: 0.10856396 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 78
================

Subpopulation 0
----------------
Avg Nodes: 269.984
Nodes/tree: [269.984]
Avg Depth: 8.231
Depth/tree: [8.231]
Mean fitness raw: 12.496 adjusted: 0.109096654 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (or true (or (not (or false false))
     (pop 3))) (and false (pop 2)))



Generation 79
================

Subpopulation 0
----------------
Avg Nodes: 261.783
Nodes/tree: [261.783]
Avg Depth: 8.253
Depth/tree: [8.253]
Mean fitness raw: 14.542 adjusted: 0.102218464 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 80
================

Subpopulation 0
----------------
Avg Nodes: 266.347
Nodes/tree: [266.347]
Avg Depth: 8.266
Depth/tree: [8.266]
Mean fitness raw: 12.386 adjusted: 0.10942964 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (color (color (if (pop (+ (if (or (not (and
     (and (pop 2) (not false)) (or (not false)
     (pop 1)))) (or (not (or (and false true)
     (or true true))) (pop (if (and false false)
     (+ 3 2) (+ 5 2))))) (/ (if (pop (+ (color
     5) (color 1))) (color (/ (+ 6 5) (if false
     4 1))) (/ (color (color 5)) (if (pop 6) (if
     false 1 5) (if false 4 2)))) (color (/ (+
     (if true 5 2) (if true 3 1)) (if (not false)
     (color 2) (color 3))))) (if (not (not (or
     (pop 5) (pop 3)))) (if (= (+ (if true 4 4)
     (color 3)) (+ (color 3) (/ 5 3))) (color
     (color (color 1))) (if (pop (if true 4 3))
     (+ (/ 1 5) (color 3)) (/ (color 5) (+ 2 1))))
     (/ (if (pop (/ 5 4)) (/ (+ 5 6) (if true
         5 2)) (color (color 2))) (+ (+ (+ 6 1) (+
         6 2)) (color (+ 4 4)))))) (color (/ (if (pop
     (+ (/ 3 4) (if true 3 3))) (+ (if (= 3 3)
     (+ 5 4) (+ 6 4)) (color (color 5))) (+ (+
     (+ 5 1) (if true 2 1)) (/ (+ 5 2) (color
     4)))) (+ (/ (color (color 3)) (color (/ 3
     1))) (/ (color (+ 5 3)) (/ (/ 4 2) (/ 6 3))))))))
     (if (not (and (pop (+ (color (color (/ 4
         4))) (/ (/ (/ 3 2) (if false 4 2)) (/ (color
         5) (/ 2 1))))) (= (+ (/ (color (color 6))
         (color (/ 6 2))) (color (/ (+ 5 4) (/ 2 4))))
         (/ (+ (/ (/ 3 5) (color 2)) (+ (+ 6 2) (/
             2 6))) (if (pop (+ 1 6)) (+ (+ 6 4) (/ 1
             4)) (color (+ 5 6))))))) (color (color (/
         (/ (if (and (or false true) (and false false))
             (color (if false 3 6)) (color (if true 6
             6))) (+ (+ (if false 3 4) (+ 5 1)) (color
             (if false 4 3)))) (/ (+ (/ (if false 1 6)
         (+ 3 5)) (if (pop 5) (+ 3 1) (if false 3
         2))) (if (or (= 4 3) (pop 5)) (/ (if false
         6 3) (/ 5 5)) (/ (if true 2 4) (color 3)))))))
         (if (or (pop (if (pop (+ (/ 4 6) (+ 3 6)))
             (+ (color (color 2)) (if (= 4 4) (color 1)
                 (/ 2 2))) (if (= (+ 1 5) (color 1)) (color
             (color 1)) (color (if false 4 3))))) (= (/
             (if (or (or true false) (and true false))
                 (/ (color 4) (/ 4 6)) (if (or true false)
                 (if true 6 3) (color 6))) (color (/ (color
             4) (color 3)))) (+ (+ (if (not false) (/
             6 3) (+ 1 5)) (+ (color 5) (+ 5 1))) (/ (if
             (and true true) (+ 2 5) (+ 1 1)) (+ (+ 4
             2) (color 3)))))) (+ (+ (if (pop (color (+
             6 2))) (+ (/ (/ 4 4) (+ 6 2)) (+ (if true
             4 6) (+ 5 4))) (color (+ (+ 5 2) (if true
             2 6)))) (if (= (if (= 4 5) (if true 1 2)
             (color 4)) (if (= 2 4) (color 3) (/ 4 6)))
             (+ (+ (/ 4 3) (if false 2 3)) (if (or true
                 false) (color 3) (color 2))) (+ (color (/
             2 3)) (/ (if false 3 1) (color 6))))) (color
             (/ (if (not (not true)) (+ (if true 3 1)
                 (+ 2 1)) (+ (if true 6 1) (/ 1 6))) (if (pop
                 (/ 4 6)) (if (or false false) (color 6) (if
                 false 1 1)) (+ (/ 5 3) (if false 4 6))))))
             (/ (+ (color (/ (/ (/ 5 4) (color 2)) (if
                 (pop 4) (+ 2 6) (/ 4 4)))) (+ (if (not (pop
                 6)) (if (or true true) (if true 6 2) (if
                 true 5 1)) (color (/ 3 5))) (if (pop (/ 4
                 3)) (if (not true) (color 5) (/ 2 2)) (+
                 (color 2) (+ 4 6))))) (if (and (= (color
                 (/ 1 5)) (+ (/ 1 3) (if false 3 6))) (= (+
                 (color 3) (/ 6 1)) (+ (+ 1 5) (color 5))))
                 (+ (/ (/ (if false 4 5) (if false 1 4)) (+
                     (+ 2 3) (+ 4 1))) (/ (if (pop 2) (color 4)
                     (color 2)) (color (if true 5 3)))) (color
                 (color (color (color 4)))))))) (/ (color
     (+ (/ (color (if (not (and false true)) (+
         (if true 6 3) (if false 4 2)) (if (pop 5)
         (+ 1 5) (color 2)))) (if (or (or (= 2 2)
         (or true false)) (or (and true true) (= 1
         1))) (/ (/ (+ 4 3) (/ 2 3)) (/ (if false
         2 1) (color 1))) (/ (if (or false false)
         (+ 6 2) (if true 4 6)) (+ (color 3) (/ 6
         1))))) (color (if (not (not (or true false)))
         (color (+ (+ 5 3) (+ 4 5))) (+ (+ (if true
         2 2) (+ 1 5)) (+ (/ 3 6) (color 6)))))))
     (if (= (if (or (or (not (or true true)) (not
         (and true true))) (not (and (and true false)
         (or true true)))) (/ (if (pop (color 1))
         (color (/ 3 4)) (/ (color 5) (+ 5 1))) (/
         (color (if false 1 5)) (if (= 5 3) (if false
         2 5) (+ 6 6)))) (if (and (pop (+ 1 3)) (and
         (pop 4) (and true false))) (if (= (color
         5) (/ 5 3)) (/ (color 1) (+ 6 1)) (if (=
         2 5) (+ 4 6) (+ 3 1))) (+ (+ (color 3) (+
         5 6)) (if (pop 3) (/ 1 3) (/ 3 5))))) (+
         (/ (if (or (not true) (or true true)) (if
             (not false) (/ 6 5) (if false 4 2)) (if (=
             4 4) (color 5) (if false 1 2))) (color (if
             (not false) (/ 6 6) (/ 4 2)))) (/ (+ (/ (color
         5) (color 3)) (+ (if true 5 6) (/ 1 1)))
         (+ (color (+ 5 3)) (+ (/ 5 2) (if false 3
             5)))))) (/ (/ (color (/ (if (not true) (/
         6 3) (+ 2 3)) (/ (color 6) (+ 2 3)))) (if
         (pop (if (and false false) (if false 4 3)
             (color 2))) (/ (color (color 2)) (color (+
         6 4))) (/ (/ (if false 2 4) (+ 1 3)) (color
         (if false 5 6))))) (color (/ (/ (color (/
         4 3)) (color (if false 3 1))) (/ (/ (+ 3
         4) (color 2)) (color (if true 6 3)))))) (/
         (/ (/ (+ (color (/ 5 4)) (if (and false true)
             (if true 1 6) (/ 2 5))) (+ (color (+ 3 4))
             (if (and true true) (/ 6 6) (color 1))))
             (if (= (if (or true false) (+ 1 6) (if true
                 1 5)) (+ (if true 1 6) (+ 1 6))) (color (if
                 (not false) (/ 2 3) (/ 5 2))) (color (/ (+
                 4 4) (+ 1 3))))) (if (and (or (or (or true
         false) (or false false)) (or (and true true)
         (pop 6))) (= (+ (color 2) (/ 1 3)) (color
         (+ 2 5)))) (+ (/ (color (color 2)) (/ (if
         true 1 5) (if false 6 2))) (/ (/ (/ 4 4)
         (+ 6 6)) (if (and true false) (if true 2
         1) (/ 3 5)))) (color (color (if (and false
         true) (/ 6 2) (/ 3 5)))))))))))



Generation 81
================

Subpopulation 0
----------------
Avg Nodes: 282.129
Nodes/tree: [282.129]
Avg Depth: 8.316
Depth/tree: [8.316]
Mean fitness raw: 13.09 adjusted: 0.10794076 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (or true (or (not (or false false))
     (pop 3))) (and false (pop 2)))



Generation 82
================

Subpopulation 0
----------------
Avg Nodes: 277.371
Nodes/tree: [277.371]
Avg Depth: 8.408
Depth/tree: [8.408]
Mean fitness raw: 14.185 adjusted: 0.10300587 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 83
================

Subpopulation 0
----------------
Avg Nodes: 252.255
Nodes/tree: [252.255]
Avg Depth: 8.18
Depth/tree: [8.18]
Mean fitness raw: 13.73 adjusted: 0.10330335 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 84
================

Subpopulation 0
----------------
Avg Nodes: 286.632
Nodes/tree: [286.632]
Avg Depth: 8.258
Depth/tree: [8.258]
Mean fitness raw: 13.48 adjusted: 0.10165736 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 85
================

Subpopulation 0
----------------
Avg Nodes: 274.596
Nodes/tree: [274.596]
Avg Depth: 8.258
Depth/tree: [8.258]
Mean fitness raw: 12.938 adjusted: 0.10712355 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 86
================

Subpopulation 0
----------------
Avg Nodes: 269.149
Nodes/tree: [269.149]
Avg Depth: 8.322
Depth/tree: [8.322]
Mean fitness raw: 12.906 adjusted: 0.10549475 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (or (not (not (and (and (pop 1) (and
     false true)) (and (pop 1) (or true true)))))
     (or (= (if (or (not false) (pop 2)) (color
         (/ 5 3)) (+ (+ 1 3) (if true 2 4))) (+ (+
         (/ 6 6) (color 6)) (/ (+ 1 1) (+ 1 5))))
         (not (pop (/ (+ 2 3) (if false 4 1)))))))



Generation 87
================

Subpopulation 0
----------------
Avg Nodes: 256.169
Nodes/tree: [256.169]
Avg Depth: 8.115
Depth/tree: [8.115]
Mean fitness raw: 13.932 adjusted: 0.1033598 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (color (color (if (pop (+ (if (or (not (and
     (and (pop 2) (not false)) (or (not false)
     (pop 1)))) (or (not (or (and false true)
     (or true true))) (pop (if (and false false)
     (+ 3 2) (+ 5 2))))) (/ (if (pop (+ (color
     5) (color 1))) (color (/ (+ 6 5) (if false
     4 1))) (/ (color (color 5)) (if (pop 6) (if
     false 1 5) (if false 4 2)))) (color (/ (+
     (if true 5 2) (if true 3 1)) (if (not false)
     (color 2) (color 3))))) (if (not (not (or
     (pop 5) (pop 3)))) (if (= (+ (if true 4 4)
     (color 3)) (+ (color 3) (/ 5 3))) (color
     (color (color 1))) (if (pop (if true 4 3))
     (+ (/ 1 5) (color 3)) (/ (color 5) (+ 2 1))))
     (/ (if (pop (/ 5 4)) (/ (+ 5 6) (if true
         5 2)) (color (color 2))) (+ (+ (+ 6 1) (+
         6 2)) (color (+ 4 4)))))) (color (/ (if (pop
     (+ (/ 3 4) (if true 3 3))) (+ (if (= 3 3)
     (+ 5 4) (+ 6 4)) (color (color 5))) (+ (+
     (+ 5 1) (if true 2 1)) (/ (+ 5 2) (color
     4)))) (+ (/ (color (color 3)) (color (/ 3
     1))) (/ (color (+ 5 3)) (/ (/ 4 2) (/ 6 3))))))))
     (if (not (and (pop (+ (color (color (/ 4
         4))) (/ (/ (/ 3 2) (if false 4 2)) (/ (color
         5) (/ 2 1))))) (= (+ (/ (color (color 6))
         (color (/ 6 2))) (color (/ (+ 5 4) (/ 2 4))))
         (/ (+ (/ (/ 3 5) (color 2)) (+ (+ 6 2) (/
             2 6))) (if (pop (+ 1 6)) (+ (+ 6 4) (/ 1
             4)) (color (+ 5 6))))))) (color (color (/
         (/ (if (and (or false true) (and false false))
             (color (if false 3 6)) (color (if true 6
             6))) (+ (+ (if false 3 4) (+ 5 1)) (color
             (if false 4 3)))) (/ (+ (/ (if false 1 6)
         (+ 3 5)) (if (pop 5) (+ 3 1) (if false 3
         2))) (if (or (= 4 3) (pop 5)) (/ (if false
         6 3) (/ 5 5)) (/ (if true 2 4) (color 3)))))))
         (if (or (pop (if (pop (+ (/ 4 6) (+ 3 6)))
             (+ (color (color 2)) (if (= 4 4) (color 1)
                 (/ 2 2))) (if (= (+ 1 5) (color 1)) (color
             (color 1)) (color (if false 4 3))))) (= (/
             (if (or (or true false) (and true false))
                 (/ (color 4) (/ 4 6)) (if (or true false)
                 (if true 6 3) (color 6))) (color (/ (color
             4) (color 3)))) (+ (+ (if (not false) (/
             6 3) (+ 1 5)) (+ (color 5) (+ 5 1))) (/ (if
             (and true true) (+ 2 5) (+ 1 1)) (+ (+ 4
             2) (color 3)))))) (+ (+ (if (pop (color (+
             6 2))) (+ (/ (/ 4 4) (+ 6 2)) (+ (if true
             4 6) (+ 5 4))) (color (+ (+ 5 2) (if true
             2 6)))) (if (= (if (= 4 5) (if true 1 2)
             (color 4)) (if (= 2 4) (color 3) (/ 4 6)))
             (+ (+ (/ 4 3) (if false 2 3)) (if (or true
                 false) (color 3) (color 2))) (+ (color (/
             2 3)) (/ (if false 3 1) (color 6))))) (color
             (/ (if (not (not true)) (+ (if true 3 1)
                 (+ 2 1)) (+ (if true 6 1) (/ 1 6))) (if (pop
                 (/ 4 6)) (if (or false false) (color 6) (if
                 false 1 1)) (+ (/ 5 3) (if false 4 6))))))
             (/ (+ (color (/ (/ (/ 5 4) (color 2)) (if
                 (pop 4) (+ 2 6) (/ 4 4)))) (+ (if (not (pop
                 6)) (if (or true true) (if true 6 2) (if
                 true 5 1)) (color (/ 3 5))) (if (pop (/ 4
                 3)) (if (not true) (color 5) (/ 2 2)) (+
                 (color 2) (+ 4 6))))) (if (and (= (color
                 (/ 1 5)) (+ (/ 1 3) (if false 3 6))) (= (+
                 (color 3) (/ 6 1)) (+ (+ 1 5) (color 5))))
                 (+ (/ (/ (if false 4 5) (if false 1 4)) (+
                     (+ 2 3) (+ 4 1))) (/ (if (pop 2) (color 4)
                     (color 2)) (color (if true 5 3)))) (color
                 (color (color (color 4)))))))) (/ (color
     (+ (/ (color (if (not (and false true)) (+
         (if true 6 3) (if false 4 2)) (if (pop 5)
         (+ 1 5) (color 2)))) (if (or (or (= 2 2)
         (or true false)) (or (and true true) (= 1
         1))) (/ (/ (+ 4 3) (/ 2 3)) (/ (if false
         2 1) (color 1))) (/ (if (or false false)
         (+ 6 2) (if true 4 6)) (+ (color 3) (/ 6
         1))))) (color (if (not (not (or true false)))
         (color (+ (+ 5 3) (+ 4 5))) (+ (+ (if true
         2 2) (+ 1 5)) (+ (/ 3 6) (color 6)))))))
     (if (= (if (or (or (not (or true true)) (not
         (and true true))) (not (and (and true false)
         (or true true)))) (/ (if (pop (color 1))
         (color (/ 3 4)) (/ (color 5) (+ 5 1))) (/
         (color (if false 1 5)) (if (= 5 3) (if false
         2 5) (+ 6 6)))) (if (and (pop (+ 1 3)) (and
         (pop 4) (and true false))) (if (= (color
         5) (/ 5 3)) (/ (color 1) (+ 6 1)) (if (=
         2 5) (+ 4 6) (+ 3 1))) (+ (+ (color 3) (+
         5 6)) (if (pop 3) (/ 1 3) (/ 3 5))))) (+
         (/ (if (or (not true) (or true true)) (if
             (not false) (/ 6 5) (if false 4 2)) (if (=
             4 4) (color 5) (if false 1 2))) (color (if
             (not false) (/ 6 6) (/ 4 2)))) (/ (+ (/ (color
         5) (color 3)) (+ (if true 5 6) (/ 1 1)))
         (+ (color (+ 5 3)) (+ (/ 5 2) (if false 3
             5)))))) (/ (/ (color (/ (if (not true) (/
         6 3) (+ 2 3)) (/ (color 6) (+ 2 3)))) (if
         (pop (if (and false false) (if false 4 3)
             (color 2))) (/ (color (color 2)) (color (+
         6 4))) (/ (/ (if false 2 4) (+ 1 3)) (color
         (if false 5 6))))) (color (/ (/ (color (/
         4 3)) (color (if false 3 1))) (/ (/ (+ 3
         4) (color 2)) (color (if true 6 3)))))) (/
         (/ (/ (+ (color (/ 5 4)) (if (and false true)
             (if true 1 6) (/ 2 5))) (+ (color (+ 3 4))
             (if (and true true) (/ 6 6) (color 1))))
             (if (= (if (or true false) (+ 1 6) (if true
                 1 5)) (+ (if true 1 6) (+ 1 6))) (color (if
                 (not false) (/ 2 3) (/ 5 2))) (color (/ (+
                 4 4) (+ 1 3))))) (if (and (or (or (or true
         false) (or false false)) (or (and true true)
         (pop 6))) (= (+ (color 2) (/ 1 3)) (color
         (+ 2 5)))) (+ (/ (color (color 2)) (/ (if
         true 1 5) (if false 6 2))) (/ (/ (/ 4 4)
         (+ 6 6)) (if (and true false) (if true 2
         1) (/ 3 5)))) (color (color (if (and false
         true) (/ 6 2) (/ 3 5)))))))))))



Generation 88
================

Subpopulation 0
----------------
Avg Nodes: 252.419
Nodes/tree: [252.419]
Avg Depth: 8.066
Depth/tree: [8.066]
Mean fitness raw: 13.905 adjusted: 0.10475873 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (not (and (pop (color (if false 3 6)))
     (not (or (and true true) (or false true))))))



Generation 89
================

Subpopulation 0
----------------
Avg Nodes: 256.774
Nodes/tree: [256.774]
Avg Depth: 8.089
Depth/tree: [8.089]
Mean fitness raw: 12.804 adjusted: 0.10621209 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (color (color (if (pop (+ (if (or (not (and
     (and (pop 2) (not false)) (or (not false)
     (pop 1)))) (or (not (or (and false true)
     (or true true))) (pop (if (and false false)
     (+ 3 2) (+ 5 2))))) (/ (if (pop (+ (color
     5) (color 1))) (color (/ (+ 6 5) (if false
     4 1))) (/ (color (color 5)) (if (pop 6) (if
     false 1 5) (if false 4 2)))) (color (/ (+
     (if true 5 2) (if true 3 1)) (if (not false)
     (color 2) (color 3))))) (if (not (not (or
     (pop 5) (pop 3)))) (if (= (+ (if true 4 4)
     (color 3)) (+ (color 3) (/ 5 3))) (color
     (color (color 1))) (if (pop (if true 4 3))
     (+ (/ 1 5) (color 3)) (/ (color 5) (+ 2 1))))
     (/ (if (pop (/ 5 4)) (/ (+ 5 6) (if true
         5 2)) (color (color 2))) (+ (+ (+ 6 1) (+
         6 2)) (color (+ 4 4)))))) (color (/ (if (pop
     (+ (/ 3 4) (if true 3 3))) (+ (if (= 3 3)
     (+ 5 4) (+ 6 4)) (color (color 5))) (+ (+
     (+ 5 1) (if true 2 1)) (/ (+ 5 2) (color
     4)))) (+ (/ (color (color 3)) (color (/ 3
     1))) (/ (color (+ 5 3)) (/ (/ 4 2) (/ 6 3))))))))
     (if (not (and (pop (+ (color (color (/ 4
         4))) (/ (/ (/ 3 2) (if false 4 2)) (/ (color
         5) (/ 2 1))))) (= (+ (/ (color (color 6))
         (color (/ 6 2))) (color (/ (+ 5 4) (/ 2 4))))
         (/ (+ (/ (/ 3 5) (color 2)) (+ (+ 6 2) (/
             2 6))) (if (pop (+ 1 6)) (+ (+ 6 4) (/ 1
             4)) (color (+ 5 6))))))) (color (color (/
         (/ (if (and (or false true) (and false false))
             (color (if false 3 6)) (color (if true 6
             6))) (+ (+ (if false 3 4) (+ 5 1)) (color
             (if false 4 3)))) (/ (+ (/ (if false 1 6)
         (+ 3 5)) (if (pop 5) (+ 3 1) (if false 3
         2))) (if (or (= 4 3) (pop 5)) (/ (if false
         6 3) (/ 5 5)) (/ (if true 2 4) (color 3)))))))
         (if (or (pop (if (pop (+ (/ 4 6) (+ 3 6)))
             (+ (color (color 2)) (if (= 4 4) (color 1)
                 (/ 2 2))) (if (= (+ 1 5) (color 1)) (color
             (color 1)) (color (if false 4 3))))) (= (/
             (if (or (or true false) (and true false))
                 (/ (color 4) (/ 4 6)) (if (or true false)
                 (if true 6 3) (color 6))) (color (/ (color
             4) (color 3)))) (+ (+ (if (not false) (/
             6 3) (+ 1 5)) (+ (color 5) (+ 5 1))) (/ (if
             (and true true) (+ 2 5) (+ 1 1)) (+ (+ 4
             2) (color 3)))))) (+ (+ (if (pop (color (+
             6 2))) (+ (/ (/ 4 4) (+ 6 2)) (+ (if true
             4 6) (+ 5 4))) (color (+ (+ 5 2) (if true
             2 6)))) (if (= (if (= 4 5) (if true 1 2)
             (color 4)) (if (= 2 4) (color 3) (/ 4 6)))
             (+ (+ (/ 4 3) (if false 2 3)) (if (or true
                 false) (color 3) (color 2))) (+ (color (/
             2 3)) (/ (if false 3 1) (color 6))))) (color
             (/ (if (not (not true)) (+ (if true 3 1)
                 (+ 2 1)) (+ (if true 6 1) (/ 1 6))) (if (pop
                 (/ 4 6)) (if (or false false) (color 6) (if
                 false 1 1)) (+ (/ 5 3) (if false 4 6))))))
             (/ (+ (color (/ (/ (/ 5 4) (color 2)) (if
                 (pop 4) (+ 2 6) (/ 4 4)))) (+ (if (not (pop
                 6)) (if (or true true) (if true 6 2) (if
                 true 5 1)) (color (/ 3 5))) (if (pop (/ 4
                 3)) (if (not true) (color 5) (/ 2 2)) (+
                 (color 2) (+ 4 6))))) (if (and (= (color
                 (/ 1 5)) (+ (/ 1 3) (if false 3 6))) (= (+
                 (color 3) (/ 6 1)) (+ (+ 1 5) (color 5))))
                 (+ (/ (/ (if false 4 5) (if false 1 4)) (+
                     (+ 2 3) (+ 4 1))) (/ (if (pop 2) (color 4)
                     (color 2)) (color (if true 5 3)))) (color
                 (color (color (color 4)))))))) (/ (color
     (+ (/ (color (if (not (and false true)) (+
         (if true 6 3) (if false 4 2)) (if (pop 5)
         (+ 1 5) (color 2)))) (if (or (or (= 2 2)
         (or true false)) (or (and true true) (= 1
         1))) (/ (/ (+ 4 3) (/ 2 3)) (/ (if false
         2 1) (color 1))) (/ (if (or false false)
         (+ 6 2) (if true 4 6)) (+ (color 3) (/ 6
         1))))) (color (if (not (not (or true false)))
         (color (+ (+ 5 3) (+ 4 5))) (+ (+ (if true
         2 2) (+ 1 5)) (+ (/ 3 6) (color 6)))))))
     (if (= (if (or (or (not (or true true)) (not
         (and true true))) (not (and (and true false)
         (or true true)))) (/ (if (pop (color 1))
         (color (/ 3 4)) (/ (color 5) (+ 5 1))) (/
         (color (if false 1 5)) (if (= 5 3) (if false
         2 5) (+ 6 6)))) (if (and (pop (+ 1 3)) (and
         (pop 4) (and true false))) (if (= (color
         5) (/ 5 3)) (/ (color 1) (+ 6 1)) (if (=
         2 5) (+ 4 6) (+ 3 1))) (+ (+ (color 3) (+
         5 6)) (if (pop 3) (/ 1 3) (/ 3 5))))) (+
         (/ (if (or (not true) (or true true)) (if
             (not false) (/ 6 5) (if false 4 2)) (if (=
             4 4) (color 5) (if false 1 2))) (color (if
             (not false) (/ 6 6) (/ 4 2)))) (/ (+ (/ (color
         5) (color 3)) (+ (if true 5 6) (/ 1 1)))
         (+ (color (+ 5 3)) (+ (/ 5 2) (if false 3
             5)))))) (/ (/ (color (/ (if (not true) (/
         6 3) (+ 2 3)) (/ (color 6) (+ 2 3)))) (if
         (pop (if (and false false) (if false 4 3)
             (color 2))) (/ (color (color 2)) (color (+
         6 4))) (/ (/ (if false 2 4) (+ 1 3)) (color
         (if false 5 6))))) (color (/ (/ (color (/
         4 3)) (color (if false 3 1))) (/ (/ (+ 3
         4) (color 2)) (color (if true 6 3)))))) (/
         (/ (/ (+ (color (/ 5 4)) (if (and false true)
             (if true 1 6) (/ 2 5))) (+ (color (+ 3 4))
             (if (and true true) (/ 6 6) (color 1))))
             (if (= (if (or true false) (+ 1 6) (if true
                 1 5)) (+ (if true 1 6) (+ 1 6))) (color (if
                 (not false) (/ 2 3) (/ 5 2))) (color (/ (+
                 4 4) (+ 1 3))))) (if (and (or (or (or true
         false) (or false false)) (or (and true true)
         (pop 6))) (= (+ (color 2) (/ 1 3)) (color
         (+ 2 5)))) (+ (/ (color (color 2)) (/ (if
         true 1 5) (if false 6 2))) (/ (/ (/ 4 4)
         (+ 6 6)) (if (and true false) (if true 2
         1) (/ 3 5)))) (color (color (if (and false
         true) (/ 6 2) (/ 3 5)))))))))))



Generation 90
================

Subpopulation 0
----------------
Avg Nodes: 246.031
Nodes/tree: [246.031]
Avg Depth: 8.051
Depth/tree: [8.051]
Mean fitness raw: 12.727 adjusted: 0.11044504 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 91
================

Subpopulation 0
----------------
Avg Nodes: 234.448
Nodes/tree: [234.448]
Avg Depth: 7.942
Depth/tree: [7.942]
Mean fitness raw: 13.181 adjusted: 0.10792859 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 92
================

Subpopulation 0
----------------
Avg Nodes: 216.031
Nodes/tree: [216.031]
Avg Depth: 7.952
Depth/tree: [7.952]
Mean fitness raw: 13.481 adjusted: 0.10522125 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (not (and (pop (color (if false 3 6)))
     (not (or (and true true) (or false true))))))



Generation 93
================

Subpopulation 0
----------------
Avg Nodes: 208.289
Nodes/tree: [208.289]
Avg Depth: 7.899
Depth/tree: [7.899]
Mean fitness raw: 12.897 adjusted: 0.1063055 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (or true (or (not (or false false))
     (pop 3))) (and false (pop 2)))



Generation 94
================

Subpopulation 0
----------------
Avg Nodes: 226.672
Nodes/tree: [226.672]
Avg Depth: 7.929
Depth/tree: [7.929]
Mean fitness raw: 13.407 adjusted: 0.10286105 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 95
================

Subpopulation 0
----------------
Avg Nodes: 248.332
Nodes/tree: [248.332]
Avg Depth: 7.961
Depth/tree: [7.961]
Mean fitness raw: 13.686 adjusted: 0.10667364 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (if (and (= (color (/ 5 4)) (if (and true
     false) (/ 5 4) (+ 4 4))) (or (= (color 3)
     (/ 2 4)) (or (pop 2) (= 6 4)))) (if (and
     (or (and false true) (pop 5)) (and (not true)
     (not false))) (if (and (not true) (= 3 6))
     (if (= 5 4) (color 2) (color 5)) (/ (+ 5
     5) (if false 1 2))) (color (/ (color 3) (+
     3 5)))) (if (and (= (+ 2 1) (+ 6 3)) (and
     (pop 6) (pop 2))) (color (/ (color 2) (/
     1 3))) (if (not (and false false)) (if (or
     false false) (+ 6 6) (if true 2 3)) (if (and
     true true) (if true 3 1) (+ 6 1)))))



Generation 96
================

Subpopulation 0
----------------
Avg Nodes: 247.936
Nodes/tree: [247.936]
Avg Depth: 8.043
Depth/tree: [8.043]
Mean fitness raw: 14.335 adjusted: 0.10099923 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 97
================

Subpopulation 0
----------------
Avg Nodes: 250.584
Nodes/tree: [250.584]
Avg Depth: 8.037
Depth/tree: [8.037]
Mean fitness raw: 12.502 adjusted: 0.10919818 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (or (pop (if (pop 4) (if (not (pop (+ 5 (/
     (+ (+ 4 6) 6) (color (if false 3 1))))))
     (if (= (color (if (= (if true 3 5) (if false
         3 3)) (if (= 1 3) (if true 5 3) (/ 2 4))
         3)) (if (not (not (= 5 6))) (if (or (and
         false true) (= 5 3)) (color (+ 2 2)) (/ (color
         2) (/ 2 3))) (if false 5 (color 3)))) (if
         true 6 (if (and true (= (/ 5 2) (color 6)))
         (+ (color (color 6)) (if (= 3 5) 2 (if true
             3 4))) 4)) (+ (if false 1 1) (/ (color (if
         true (+ 1 2) (+ 6 6))) (color (/ (color 4)
         4))))) (+ (if (not (not false)) (/ 1 (color
     6)) (/ 3 (if true (if (and true false) (color
     3) (/ 3 3)) (if (pop 3) (if false 1 5) (color
     3))))) 4)) (+ (if true (/ (color 5) (if (pop
     (color (if false 3 6))) (color (if (not true)
     (/ 2 2) 3)) (if (or true (or true false))
     (+ 3 (/ 4 1)) (+ 5 (/ 1 3))))) (color (+
     (color (if (and true false) (color 5) (color
         2))) (+ (color (+ 1 2)) (/ (/ 6 5) 5)))))
     (color (if (not (and (not (pop 2)) (not (pop
         2)))) (+ (if true (/ 5 (color 4)) (color
         (/ 2 3))) (if (and (pop 6) (pop 3)) 3 (/
         6 1))) (/ (color (color (/ 3 5))) (if true
         (if (pop 6) (+ 5 3) (/ 2 1)) (color (color
         6))))))))) false)



Generation 98
================

Subpopulation 0
----------------
Avg Nodes: 283.998
Nodes/tree: [283.998]
Avg Depth: 8.198
Depth/tree: [8.198]
Mean fitness raw: 13.51 adjusted: 0.10411749 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (or true (or (not (or false false))
     (pop 3))) (and false (pop 2)))



Generation 99
================

Subpopulation 0
----------------
Avg Nodes: 245.235
Nodes/tree: [245.235]
Avg Depth: 7.895
Depth/tree: [7.895]
Mean fitness raw: 13.41 adjusted: 0.10456374 hits: 0.0

Best Individual of Generation:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (and (or true (or (not (or false false))
     (pop 3))) (and false (pop 2)))



Final Statistics
================
Total Individuals Evaluated: 100000

Best Individual of Run:
Evaluated: true
Fitness: Raw=5.0 Adjusted=0.16666667 Hits=0
Tree 0:
 (not (pop (/ (/ (/ (if (pop (+ (+ (+ 6 5)
     (/ 5 4)) (+ (/ 1 2) (if false 3 5)))) (color
     (+ (/ (color 4) (if false 2 3)) (if (pop
         4) (if true 3 3) (+ 2 1)))) (if (not (pop
     (color 6))) (/ (if (and false false) (if
     true 3 2) (if true 6 6)) (color (if false
     6 3))) (color (+ (+ 4 4) (/ 1 2))))) (+ (+
     (+ (/ (if true 2 2) (+ 3 5)) (if (pop 6)
         (/ 2 2) (if true 5 6))) (if (and (and false
     false) (pop 5)) (+ (color 1) (+ 5 6)) (if
     (not false) (/ 5 6) (if true 5 1)))) (/ (/
     (/ (color 3) (color 3)) (if (= 1 1) (/ 3
     6) (+ 5 5))) (color (/ (color 1) (color 2))))))
     (/ (+ (color (color (+ (if false 6 3) (color
         6)))) (if (= (color (color 6)) (color (+
         4 2))) (if (not (not false)) (color (/ 2
         5)) (color (if true 4 4))) (+ (/ (color 4)
         (+ 4 5)) (if (pop 2) (+ 1 2) (color 2)))))
         (if (pop (+ (color (if true 5 5)) (/ (+ 6
             5) (color 4)))) (+ (color (if (or false false)
             (color 5) (/ 4 4))) (if (and (or true true)
             (and false false)) (/ (if false 3 4) (/ 6
             1)) (+ (if false 4 1) (if true 5 2)))) (color
             (color (+ (if false 1 4) (color 3)))))))
     (if (or (not (pop (+ (+ (color 1) (color
         6)) (color (/ 4 3))))) (and (not (and (=
         (+ 6 3) (color 3)) (= (color 1) (/ 5 6))))
         (not (or (or (pop 1) (pop 2)) (not (and true
             false)))))) (/ (color (/ (+ (+ (+ 5 2) (+
         6 1)) (if (= 6 5) (if true 5 4) (if true
         5 2))) (color (color (if false 6 6))))) (color
         (if (pop (/ (if true 5 1) (/ 6 3))) (+ (/
             (/ 2 2) (+ 2 2)) (if (= 1 4) (/ 3 2) (/ 2
             1))) (color (color (color 6)))))) (/ (/ (if
         (or (and (and false true) (= 4 2)) (not (and
             false false))) (+ (color (color 3)) (+ (/
         2 2) (+ 2 3))) (+ (/ (if true 2 4) (+ 5 6))
         (+ (+ 6 4) (/ 4 4)))) (color (+ (+ (+ 5 1)
         (if true 6 6)) (+ (+ 6 2) (/ 4 6))))) (+
         (/ (if (or (not true) (not true)) (color
             (+ 3 5)) (+ (if false 6 3) (+ 5 4))) (color
             (/ (if true 4 6) (+ 6 3)))) (+ (color (/
         (+ 5 3) (/ 1 6))) (color (if (and true false)
         (if true 5 2) (if true 3 5))))))))))



Timings
=======
Initialization: 0.922 secs total, 275041 nodes, 298309.12 nodes/sec
Evaluating: 133.064 secs total, 39949969 nodes, 300231.25 nodes/sec
Breeding: 72.768 secs total, 39674928 nodes, 545224.94 nodes/sec



Memory Usage
==============
Initialization: 12481.883 KB total, 275041 nodes, 22.035217 nodes/KB
Evaluating: 250374.33 KB total, 39949969 nodes, 159.56096 nodes/KB
Breeding: 1027240.4 KB total, 39674928 nodes, 38.62283 nodes/KB


Best Individual:

Score is (current/max): 0/36
Gameboard is:
	0	1	2	3	4	5	
0 :	YELLOW	BLUE	PURPLE	RED	GREEN	BLUE	
1 :	BLUE	PURPLE	PURPLE	BLUE	YELLOW	PURPLE	
2 :	BLUE	PURPLE	BLUE	PURPLE	GREEN	YELLOW	
3 :	RED	GREEN	BLUE	GREEN	YELLOW	PURPLE	
4 :	GREEN	BLUE	GREEN	GREEN	YELLOW	GREEN	
5 :	GREEN	RED	PURPLE	RED	PURPLE	BLUE	
Move list is:

Score is (current/max): 6/36
Gameboard is:
	0	1	2	3	4	5	
0 :	YELLOW	BLUE	GREEN	RED	GREEN	BLUE	
1 :	BLUE	GREEN	PURPLE	BLUE	YELLOW	PURPLE	
2 :	BLUE	BLUE	EMPTY	PURPLE	GREEN	YELLOW	
3 :	RED	RED	EMPTY	GREEN	YELLOW	PURPLE	
4 :	GREEN	EMPTY	EMPTY	GREEN	YELLOW	GREEN	
5 :	GREEN	EMPTY	EMPTY	RED	PURPLE	BLUE	
Move list is:
(2,2), (2,1), 
